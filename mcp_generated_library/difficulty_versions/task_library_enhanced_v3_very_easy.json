{
  "tasks": [
    {
      "instance_id": "task_dee2d02d",
      "task_type": "basic_task",
      "description": "Read the input data, parse it, and filter the results to produce the final output.",
      "inputs": {
        "source": "data/input_file.csv",
        "options": {
          "filter": "true"
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "total_records": 100,
          "filtered_records": 80
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-10T04:27:35.913857",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task retrieves data from a CSV file, parses it into a structured format, and filters it based on specified criteria. The final result will be a refined dataset that meets the filtering conditions.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_e24bf71d",
      "task_type": "basic_task",
      "description": "Read the input data, parse it for structure, and filter the results for output.",
      "inputs": {
        "source": "path/to/input_file.csv",
        "options": {
          "delimiter": ",",
          "has_header": true
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "filtered_count": 100,
          "original_count": 150
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-10T04:27:38.631333",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task reads data from a CSV file, parses the raw data into a structured format, and filters the data based on specified criteria to output a refined dataset.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_76411378",
      "task_type": "basic_task",
      "description": "Read the input data, extract relevant information, and filter it for the final output.",
      "inputs": {
        "source": "sales_data.csv",
        "options": {
          "transform": {
            "columns": [
              "Date",
              "SalesAmount"
            ]
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "data": [
          {
            "Date": "2023-01-15",
            "SalesAmount": 1500
          },
          {
            "Date": "2023-02-20",
            "SalesAmount": 2000
          }
        ],
        "metadata": {
          "record_count": 2
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-10T04:27:42.472202",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task is designed to read a CSV file containing sales data, parse the data into a structured format, and then filter the parsed data to only include records where the sales amount is greater than $1000.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_2b4d1c13",
      "task_type": "basic_task",
      "description": "Read the input data, parse it, and filter the results for final output.",
      "inputs": {
        "source": "data/input_file.csv",
        "options": {
          "delimiter": ",",
          "header": true
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "filtered_count": 100,
          "total_count": 500
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-10T04:27:45.368498",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes data from a CSV file by reading the data, parsing it into a structured format, and then filtering the parsed data based on specific criteria.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_cfc1dc5c",
      "task_type": "basic_task",
      "description": "Read input data, parse it, and filter results to produce the final output.",
      "inputs": {
        "source": "data/input_file.csv",
        "options": {
          "transform": {
            "filter": "column_name > value"
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "filtered_count": 100,
          "processing_time": "200ms"
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-10T04:27:48.068478",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes data from a CSV file by reading it, parsing it into a structured format, and then filtering the data based on specific criteria.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_d83ab39d",
      "task_type": "basic_task",
      "description": "Read the input data, filter it, and validate the results for compliance.",
      "inputs": {
        "source": "path/to/data.csv",
        "options": {
          "filter_criteria": {
            "column": "status",
            "value": "active"
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_filter",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-10T04:27:51.155550",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes raw data from a CSV file, filters it based on specific criteria, and then validates the filtered data against a predefined schema to ensure its correctness and integrity.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_f5ae02e5",
      "task_type": "basic_task",
      "description": "Read the input data, parse it, and filter the results to produce the final output.",
      "inputs": {
        "source": "path/to/user_data.csv",
        "options": {
          "delimiter": ",",
          "has_header": true
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "filtered_count": 50
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-10T04:27:53.632937",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes a CSV file containing user data by reading the file, parsing the data into a structured format, and then filtering out users that do not meet specific criteria.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_80d81669",
      "task_type": "basic_task",
      "description": "Read the input data, parse it, and filter the results for the final output.",
      "inputs": {
        "source": "data/input_file.csv",
        "options": {
          "transform": {
            "filter_column": "status",
            "filter_value": "active"
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "filtered_record_count": 100
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-10T04:27:55.946726",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task reads data from a CSV file, parses it into a structured format, and then filters the data based on specified criteria.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_5462a7dc",
      "task_type": "basic_task",
      "description": "Read the input data, parse it, and filter the results for final output.",
      "inputs": {
        "source": "path/to/data.csv",
        "options": {
          "filter": {
            "column": "status",
            "value": "active"
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "filtered_count": 100
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-10T04:27:57.960402",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task retrieves data from a CSV file, parses it into a structured format, and then filters the parsed data based on specified criteria.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_aa8de7e9",
      "task_type": "basic_task",
      "description": "Read the input data, parse it, filter it, and validate the output format.",
      "inputs": {
        "source": "path/to/user_data.csv",
        "options": {
          "filter": {
            "age": {
              "gte": 18
            }
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-10T04:28:00.303124",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes a CSV file containing user data, parses it into a structured format, filters the data based on specified criteria, and validates the resulting dataset against a predefined schema.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_c6baebe1",
      "task_type": "data_pipeline",
      "description": "Process unknown input data through four tools: read, transform, filter, and validate to produce unspecified output.",
      "inputs": {
        "source": "data/input_file.csv",
        "options": {
          "filter_criteria": {
            "status": "active"
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "data_processing_filter",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:36.920720",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes raw data from a CSV file, transforms it into JSON format, filters the transformed data based on specific criteria, and validates the final output against a predefined schema.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_761e5738",
      "task_type": "data_pipeline",
      "description": "Process unknown data through four tools: read, transform, filter, and validate to produce unspecified results.",
      "inputs": {
        "source": "data/input.json",
        "options": {
          "filter": "active"
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "data_processing_filter",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:39.053956",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task implements a data processing pipeline that reads data from a JSON file, transforms the data into XML format, filters the transformed data based on specified criteria, and validates the filtered data against a predefined schema.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_b6ecb919",
      "task_type": "data_pipeline",
      "description": "Process unknown data using three tools: read, transform format, and validate for output.",
      "inputs": {
        "source": "data/input_file.csv",
        "options": {
          "filter": {
            "columns": [
              "name",
              "age"
            ],
            "criteria": {
              "age": ">30"
            }
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:41.923630",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task involves reading raw data from a CSV file, transforming it into JSON format while applying specific modifications, and then validating the transformed data against a predefined schema to ensure its correctness and integrity.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_e28044f7",
      "task_type": "data_pipeline",
      "description": "Process unknown input data through four tools: read, transform, filter, and validate for output.",
      "inputs": {
        "source": "data/input_data.csv",
        "options": {
          "read_mode": "full"
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "data_processing_filter",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:43.908487",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes raw data from a CSV file by reading, transforming it to JSON format, filtering specific entries, and validating the final dataset against a defined schema.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_4f050cc4",
      "task_type": "data_pipeline",
      "description": "Process unknown data through four tools: read, transform, filter, and validate to produce unspecified output.",
      "inputs": {
        "source": "data/input_file.csv",
        "options": {
          "header": true,
          "delimiter": ","
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "data_processing_filter",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:47.061406",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This data processing pipeline reads raw data from a CSV file, transforms it into JSON format, filters the data based on specific criteria, and validates the final output against a predefined schema.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_82e374dd",
      "task_type": "data_pipeline",
      "description": "Process unknown input data through four tools: read, filter, transform, and validate to produce unspecified output.",
      "inputs": {
        "source": "data/input_file.csv",
        "options": {
          "filter": {
            "criteria": "value > 10"
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": [],
        "metadata": {
          "timestamp": "2023-10-01T12:00:00Z"
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_filter",
        "data_processing_transformer",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:50.297198",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task involves reading raw data from a CSV file, filtering the data based on specific criteria, transforming it into JSON format, and validating the final output against a predefined schema.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_fb24ddd9",
      "task_type": "data_pipeline",
      "description": "Process unknown data through four tools: read, filter, transform, and validate to produce unspecified results.",
      "inputs": {
        "source": "data/input.csv",
        "options": {
          "filter": {
            "criteria": "value > 100"
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_filter",
        "data_processing_transformer",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:53.356969",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This data processing pipeline reads raw CSV data, filters it based on specific criteria, transforms the data into JSON format, and validates the transformed data against a predefined schema.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_43edbb06",
      "task_type": "data_pipeline",
      "description": "Process unknown input data through five tools to produce an unspecified output result.",
      "inputs": {
        "source": "data/input_file.csv",
        "options": {}
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": [],
        "metadata": {}
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_transformer",
        "data_processing_filter",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:55.836030",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes raw data by reading it from a source file, parsing it into a structured format, transforming it into a different format, filtering unwanted entries, and finally validating the processed data against a defined schema.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_ebebd1ff",
      "task_type": "data_pipeline",
      "description": "Process unknown data through four tools: read, transform, filter, and validate to produce unspecified output.",
      "inputs": {
        "source": "path/to/raw_data.json",
        "options": {
          "filter": {
            "criteria": "specific_condition"
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "data_processing_filter",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:58.123513",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes raw data from a JSON file, transforms it into XML format, filters the necessary data based on specific criteria, and validates the output against a predefined schema to ensure data integrity.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_6cf67f69",
      "task_type": "data_pipeline",
      "description": "Process unknown data through four tools: read, transform, filter, and validate for unspecified output.",
      "inputs": {
        "source": "path/to/raw_data.csv",
        "options": {
          "filter": "header:true"
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "data_processing_filter",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:28:00.816129",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This data processing pipeline reads raw data from a CSV file, transforms it into JSON format, filters the data based on specified criteria, and validates the final output against a defined schema.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_29f4e4d4",
      "task_type": "data_pipeline",
      "description": "Process unknown data through four tools: read, transform, filter, and validate to produce unspecified output.",
      "inputs": {
        "source": "data/input_file.csv",
        "options": {
          "filter": {
            "criteria": {
              "column": "status",
              "value": "active"
            }
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "data_processing_filter",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:36.274380",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes raw data from a CSV file, transforms it into JSON format, filters the data based on specified criteria, and validates the final dataset before outputting the results.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_26652a66",
      "task_type": "data_pipeline",
      "description": "Process unknown data through four tools: read, transform, filter, and validate to produce unspecified output.",
      "inputs": {
        "source": "path/to/raw_data.csv",
        "options": {}
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": [],
        "metadata": {}
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "data_processing_filter",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:38.770834",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This data processing pipeline reads raw data from a CSV file, transforms it into JSON format, filters the data based on specific criteria, and finally validates the processed data against a schema to ensure correctness and integrity.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_9d4476ee",
      "task_type": "data_pipeline",
      "description": "Process unknown data using four tools: read, transform, filter, and validate for unspecified output.",
      "inputs": {
        "source": "data/input.csv",
        "options": {
          "delimiter": ",",
          "has_headers": true
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "data_processing_filter",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:41.831240",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes raw data from a CSV file, transforms it into JSON format, filters the data based on specific criteria, and validates the final output against a predefined schema.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_b819bc36",
      "task_type": "data_pipeline",
      "description": "Process unknown data through four tools: read, transform, filter, and validate for unspecified output.",
      "inputs": {
        "source": "path/to/source/data.json",
        "options": {
          "filter": {
            "criteria": "status:active"
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "data_processing_filter",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:44.529149",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes raw data from a JSON file, transforms it into XML format, filters the data based on specific criteria, and validates it against a predefined schema.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_3c17b055",
      "task_type": "data_pipeline",
      "description": "Process unknown data by reading, transforming, filtering, and validating to produce an unspecified result.",
      "inputs": {
        "source": "data/input_data.csv",
        "options": {
          "filter": "active_records"
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "data_processing_filter",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:47.429381",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task involves reading raw data from a CSV file, transforming it into JSON format, applying filters to refine the dataset, and validating the final data against a specified schema before outputting the results.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_4d1a4b13",
      "task_type": "data_pipeline",
      "description": "Process unknown input data through four tools: read, transform, filter, and validate for unspecified output.",
      "inputs": {
        "source": "data/input_file.csv",
        "options": {
          "filter": {
            "column": "status",
            "value": "active"
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "data_processing_filter",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:49.983186",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This data processing pipeline reads raw data from a CSV file, transforms it to JSON format, filters out unnecessary records, and validates the structured data against a predefined schema before outputting the results.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_6102373b",
      "task_type": "data_pipeline",
      "description": "Process unknown data using four tools: read, transform, filter, and validate for unspecified output.",
      "inputs": {
        "source": "path/to/input_data.csv",
        "options": {
          "delimiter": ",",
          "hasHeader": true
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "data_processing_filter",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:52.549346",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes raw data from a CSV file, transforms it into JSON format, filters the data based on specific criteria, and validates the output against a predefined schema.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_048ecf69",
      "task_type": "data_pipeline",
      "description": "Process unknown data using four tools: read, transform, filter, and validate for unspecified output.",
      "inputs": {
        "source": "data/input_file.json",
        "options": {
          "filter": {
            "criteria": {
              "status": "active"
            }
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "data_processing_filter",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:55.628881",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This data processing pipeline reads raw data from a JSON file, transforms it into XML format, filters the transformed data based on specified criteria, and finally validates the filtered data against a predefined schema.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_b55580e0",
      "task_type": "data_pipeline",
      "description": "Process unknown data through four tools: read, transform, filter, and validate for unspecified output.",
      "inputs": {
        "source": "data/input_data.csv",
        "options": {
          "delimiter": ",",
          "header": true
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "data_processing_filter",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:58.781659",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes raw data from a CSV file, transforms it into JSON format, filters the data based on specific criteria, and validates the final output against a predefined schema.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_b081da2a",
      "task_type": "data_pipeline",
      "description": "Process unknown data using four tools: read, parse, transform, and validate to produce unspecified output.",
      "inputs": {
        "source": "path/to/input_data.csv",
        "options": {
          "delimiter": ",",
          "header": true
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_transformer",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:28:01.019664",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes raw data from a CSV file by reading it, parsing it into a structured format, transforming it to JSON, and then validating the final output against a predefined schema.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_7950b3bf",
      "task_type": "basic_task",
      "description": "Read unknown data, parse it, and filter results to produce an unspecified output.",
      "inputs": {
        "source": "data/input_file.csv",
        "options": {
          "filter": {
            "column": "status",
            "value": "active"
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "filtered_count": 100
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-10T04:27:36.411099",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task reads data from a CSV file, parses it into a structured format, and then filters the parsed data based on specified criteria.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_2232b41e",
      "task_type": "basic_task",
      "description": "Read the input data, parse it, and filter the results to produce the final output.",
      "inputs": {
        "source": "path/to/user_data.csv",
        "options": {
          "delimiter": ",",
          "header": true
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "filtered_count": 150,
          "country": "USA"
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-10T04:27:39.484371",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task reads a CSV file containing user data, parses it into a structured format, and then filters the data to only include users from a specific country.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_cbf2dd75",
      "task_type": "basic_task",
      "description": "Read the input file, extract data, and filter results to produce the final output.",
      "inputs": {
        "source": "path/to/data.csv",
        "options": {
          "filter": "active"
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "filtered_count": 100
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-10T04:27:42.125602",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task reads data from a CSV file, parses the raw data into a structured format, and then filters the data based on specified criteria, ultimately providing a refined dataset as output.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_cffab3cf",
      "task_type": "basic_task",
      "description": "Read the input data, parse it, and filter the results to produce the final output.",
      "inputs": {
        "source": "data/input_data.csv",
        "options": {
          "transform": {
            "filter": "active"
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "record_count": 100,
          "filtered_count": 80
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-10T04:27:45.268990",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task reads data from a CSV file, parses it into a structured format, and then filters the data based on specific criteria to produce a refined dataset.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_7cba238a",
      "task_type": "basic_task",
      "description": "Read the input data, parse it, filter it, and validate the result for output.",
      "inputs": {
        "source": "data/input.csv",
        "options": {
          "delimiter": ",",
          "header": true
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-10T04:27:47.868415",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task reads data from a CSV file, parses it into a structured format, applies a filter to extract specific records, and validates the final output against a predefined schema.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_f74c7bf1",
      "task_type": "basic_task",
      "description": "Read the input data, filter it, and validate the output format using three tools.",
      "inputs": {
        "source": "path/to/user_data.csv",
        "options": {
          "filter_criteria": {
            "age": ">30",
            "status": "active"
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_filter",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-10T04:27:50.751667",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes a CSV file containing user data, filters the data based on specific criteria, and then validates the filtered data against a predefined schema to ensure its correctness.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_00d0c760",
      "task_type": "basic_task",
      "description": "Read the input data, filter it, and validate the result for compliance with the schema.",
      "inputs": {
        "source": "path/to/user_data.csv",
        "options": {}
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_filter",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-10T04:27:53.822258",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes a CSV file containing user data, filtering it to retrieve only active users and then validating the data against a predefined schema.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_ad771677",
      "task_type": "basic_task",
      "description": "Read the input file, parse the data, and filter the results for output.",
      "inputs": {
        "source": "path/to/user_data.csv",
        "options": {
          "delimiter": ",",
          "has_header": true
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "filtered_count": 150
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-10T04:27:56.259785",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes a CSV file containing user data by reading the file, parsing the data into a structured format, and filtering out users based on specific criteria (e.g., age > 18).",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_c4bc221f",
      "task_type": "basic_task",
      "description": "Read the input data, parse it, and filter the results to produce the final output.",
      "inputs": {
        "source": "path/to/user_data.csv",
        "options": {
          "filter": {
            "age": ">30"
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "filtered_count": 100
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-10T04:27:58.203130",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task reads a CSV file containing user data, parses it into a structured format, and then filters the data based on specified criteria to generate a refined dataset.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_5e764a6e",
      "task_type": "basic_task",
      "description": "Read the input data, parse it, and filter the results to produce the final output.",
      "inputs": {
        "source": "data/input_file.csv",
        "options": {
          "transform": {
            "filter": {
              "criteria": {
                "age": ">30"
              }
            }
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "filtered_count": 100
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-10T04:28:03.136786",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task reads data from a CSV file, parses it into a structured format, and then filters the data based on specified criteria to provide a refined dataset.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_a11f7f7f",
      "task_type": "basic_task",
      "description": "Read the input data, parse it, and filter the results to produce the final output.",
      "inputs": {
        "source": "path/to/user_data.csv",
        "options": {
          "delimiter": ","
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "filter_criteria": "age > 18"
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-10T04:27:37.208079",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task involves reading a CSV file containing user data, parsing the raw data into a structured format, and filtering the data based on specified criteria to obtain a refined dataset.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_896e60c1",
      "task_type": "basic_task",
      "description": "Read the input data, parse it, and filter the results to produce the final output.",
      "inputs": {
        "source": "path/to/sales_data.csv",
        "options": {
          "delimiter": ",",
          "header": true
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "filtered_count": 100
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-10T04:27:39.693397",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes a CSV file containing sales data by reading the file, parsing the raw data into a structured format, and then filtering the data to only include sales above a certain threshold.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_f3da16c7",
      "task_type": "basic_task",
      "description": "Read unknown data, parse it, and filter results to produce an unspecified output format.",
      "inputs": {
        "source": "path/to/user_data.csv",
        "options": {
          "delimiter": ",",
          "has_header": true
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "filtered_count": 50,
          "total_count": 100
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-10T04:27:42.537017",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task involves reading a CSV file containing user data, parsing the data into a structured format, and then filtering the data based on specific criteria to retrieve only active users.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_f0db19ba",
      "task_type": "basic_task",
      "description": "Read the input data, parse it, and filter the results to produce the final output.",
      "inputs": {
        "source": "path/to/data.csv",
        "options": {
          "delimiter": ",",
          "has_header": true
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "filtered_count": 100,
          "original_count": 200
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-10T04:27:45.794255",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes raw data from a CSV file by reading the file content, parsing it into a structured format, and then filtering the parsed data based on specific criteria.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_eef40899",
      "task_type": "basic_task",
      "description": "Read input data, filter it, validate the results, and produce the final output.",
      "inputs": {
        "source": "path/to/user_data.csv",
        "options": {}
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_filter",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-10T04:27:48.015754",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes a CSV file containing user data, filters it based on specific criteria, and then validates the filtered data against a predefined schema.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_b3a2b41c",
      "task_type": "basic_task",
      "description": "Read the input data, parse it, and filter the results for output.",
      "inputs": {
        "source": "path/to/user_data.csv",
        "options": {
          "delimiter": ",",
          "has_header": true
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "filtered_count": 100
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-10T04:27:50.860830",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task involves reading a CSV file containing user data, parsing the raw data into a structured format, and filtering the data based on specific criteria to produce a refined dataset.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_00874715",
      "task_type": "basic_task",
      "description": "Read input data, parse it, and filter the results to generate the final output.",
      "inputs": {
        "source": "path/to/user_data.csv",
        "options": {
          "filter": {
            "age": ">30"
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "data": [
          {
            "name": "John Doe",
            "age": 35
          },
          {
            "name": "Jane Smith",
            "age": 40
          }
        ],
        "metadata": {
          "record_count": 2
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-10T04:27:54.583748",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task involves reading a CSV file containing user data, parsing the raw data into a structured format, and filtering users based on their age to generate a refined dataset of users above a certain age.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_50692eba",
      "task_type": "basic_task",
      "description": "Read the input data, parse it, and filter the results to produce the final output.",
      "inputs": {
        "source": "path/to/input_data.csv",
        "options": {
          "delimiter": ",",
          "has_header": true
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "filtered_count": 100
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-10T04:27:56.868237",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task reads data from a CSV file, parses it into a structured format, and then filters the data based on specified criteria to produce a refined dataset.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_b4a2f1a3",
      "task_type": "basic_task",
      "description": "Read the input data, parse it, and filter the results to produce the final output.",
      "inputs": {
        "source": "data/input_file.csv",
        "options": {
          "delimiter": ",",
          "header": true
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "filtered_count": 150,
          "filter_criteria": "age > 18"
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-10T04:27:59.037414",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task involves reading data from a CSV file, parsing it into a structured format, and then filtering the parsed data based on specific criteria. The goal is to process the data efficiently and obtain a refined dataset for further analysis.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_c1896da6",
      "task_type": "basic_task",
      "description": "Read the input data, parse it, and filter the results to produce the final output.",
      "inputs": {
        "source": "path/to/data.csv",
        "options": {
          "delimiter": ",",
          "header": true
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "filtered_count": 50
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-10T04:28:03.627067",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task involves reading data from a CSV file, parsing it into a structured format, and then filtering the data based on specified criteria to produce a refined dataset.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_48f2e313",
      "task_type": "data_pipeline",
      "description": "Process unknown data through five tools: read, parse, filter, transform, and validate to produce unspecified output.",
      "inputs": {
        "source": "path/to/input_data.csv",
        "options": {
          "filter": "include only relevant rows"
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter",
        "data_processing_transformer",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:38.741208",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes raw data from a CSV file by reading it, parsing it into a structured format, filtering the data based on specific criteria, transforming it into JSON format, and finally validating the structure of the data against a predefined schema.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_f03e9e40",
      "task_type": "data_pipeline",
      "description": "Process unknown data using four tools: read, filter, transform, and validate to produce unspecified output.",
      "inputs": {
        "source": "path/to/input/data.csv",
        "options": {
          "filters": {
            "column": "status",
            "value": "active"
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_filter",
        "data_processing_transformer",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:41.281292",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This data processing pipeline reads raw data from a CSV file, filters it based on specific criteria, transforms it into JSON format, and validates the structured data against a predefined schema.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_b7ea60fb",
      "task_type": "data_pipeline",
      "description": "Process unknown data through five tools: read, parse, transform, filter, and validate to produce unspecified output.",
      "inputs": {
        "source": "path/to/input_data.csv",
        "options": {
          "filter": "active"
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_transformer",
        "data_processing_filter",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:43.325412",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes raw data from a CSV file, transforms it into a structured JSON format, filters the data based on specified criteria, and validates the final output against a predefined schema.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_c1f2504b",
      "task_type": "data_pipeline",
      "description": "Process unknown data using four tools: read, transform, filter, and validate for unspecified output.",
      "inputs": {
        "source": "data/input_data.csv",
        "options": {
          "transform": {
            "filter": "active"
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "data_processing_filter",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:45.943284",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This data processing pipeline reads raw data from a CSV file, transforms it into JSON format, filters the data based on specific criteria, and validates the final dataset against a predefined schema.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_9f3b7f59",
      "task_type": "data_pipeline",
      "description": "Process unknown data through five tools: read, parse, transform, filter, and validate to produce unspecified output.",
      "inputs": {
        "source": "path/to/input/file.csv",
        "options": {
          "delimiter": ",",
          "header": true
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_transformer",
        "data_processing_filter",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:48.904196",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes raw data from a CSV file, transforms it to JSON format, filters based on specific criteria, and validates the final output against a predefined schema.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_0c277627",
      "task_type": "data_pipeline",
      "description": "Process unknown data through four tools: read, parse, transform, and validate to produce unspecified output.",
      "inputs": {
        "source": "path/to/input/data.csv",
        "options": {
          "filter": "enabled"
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_transformer",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:51.090067",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes raw data from a CSV file by reading, parsing, transforming, and validating it, ensuring that the final output is a valid structured format.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_81870a86",
      "task_type": "data_pipeline",
      "description": "Process unknown data through five tools: read, parse, filter, transform, and validate to produce unspecified output.",
      "inputs": {
        "source": "data/input_file.csv",
        "options": {
          "filter": {
            "criteria": "valid"
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter",
        "data_processing_transformer",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:54.388328",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes raw data by reading it from a file, parsing it into a structured format, filtering the data based on specific criteria, transforming it into a different format, and finally validating the transformed data against a defined schema.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_e1ada8d5",
      "task_type": "data_pipeline",
      "description": "Process unknown data through five tools: read, parse, transform, filter, and validate to produce unspecified output.",
      "inputs": {
        "source": "path/to/raw_data.csv",
        "options": {
          "filter": true
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_transformer",
        "data_processing_filter",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:56.894988",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes raw data from a CSV file, transforms it into JSON format, filters specific records based on criteria, and validates the final dataset against a predefined schema.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_a1fd9b5c",
      "task_type": "data_pipeline",
      "description": "Process unknown data by reading, transforming, filtering, and validating to produce unspecified results.",
      "inputs": {
        "source": "data/input_file.csv",
        "options": {
          "filter": "active"
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "data_processing_filter",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:59.423748",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This data processing pipeline reads raw data from a CSV file, transforms it into JSON format, filters it based on specified criteria, and validates the output against a predefined schema, ensuring data quality and structure.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_79f79f96",
      "task_type": "data_pipeline",
      "description": "Process unknown data through four tools: read, parse, transform, and validate to produce unspecified output.",
      "inputs": {
        "source": "data/input_file.csv",
        "options": {
          "transform": {
            "filter": {
              "criteria": "status='active'"
            }
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_transformer",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:28:03.641777",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes data by reading raw data from a file, parsing it into a structured format, transforming it into a desired output format, and finally validating the processed data against a predefined schema.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_c6d20a64",
      "task_type": "basic_task",
      "description": "Read the input data, parse it, and filter the results for the final output.",
      "inputs": {
        "source": "data/input_file.csv",
        "options": {
          "transform": {
            "header": true
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "filtered_count": 100
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-10T04:27:37.345452",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task retrieves data from a CSV file, parses it into a structured format, and then applies filtering criteria to refine the dataset for further analysis.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_41ba4087",
      "task_type": "basic_task",
      "description": "Read the input data, parse it, and filter the results to produce the output.",
      "inputs": {
        "source": "path/to/data.csv",
        "options": {
          "delimiter": ",",
          "hasHeader": true
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "filtered_count": 100,
          "original_count": 150
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-10T04:27:39.654134",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task involves reading data from a CSV file, parsing it into a structured format, and filtering the parsed data based on specified criteria to produce a refined dataset.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_2ece47bb",
      "task_type": "basic_task",
      "description": "Read the input data, parse it, and filter the results to produce the final output.",
      "inputs": {
        "source": "path/to/sales_data.csv",
        "options": {
          "delimiter": ",",
          "header": true
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "filtered_count": 150
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-10T04:27:42.098743",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task involves reading a CSV file containing sales data, parsing it into a structured format, and then filtering the data based on specific sales criteria.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_b473014e",
      "task_type": "basic_task",
      "description": "Read unknown data, parse it, filter results, and produce an unspecified output format.",
      "inputs": {
        "source": "path/to/sales_data.csv",
        "options": {
          "header": true
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "filtered_count": 50
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-10T04:27:45.021043",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task reads a CSV file containing sales data, parses the raw data into a structured format, and then filters the data to include only sales above a specified threshold.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_50468374",
      "task_type": "basic_task",
      "description": "Read the input data, parse it, and filter the results to produce the final output.",
      "inputs": {
        "source": "path/to/user_data.csv",
        "options": {
          "filter": {
            "age": "> 18",
            "status": "active"
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "filtered_count": 150
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-10T04:27:47.627764",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task reads a CSV file containing user data, parses the data into a structured format, and then filters the data based on specific criteria such as age and status.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_8ae706d9",
      "task_type": "basic_task",
      "description": "Read the input data, parse it, and filter the results to produce the final output.",
      "inputs": {
        "source": "path/to/user_data.csv",
        "options": {
          "delimiter": ",",
          "header": true
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "filtered_count": 100,
          "criteria": "age > 18"
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-10T04:27:50.881370",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task involves reading a CSV file containing user data, parsing the raw data into a structured format, and then filtering the parsed data based on specified criteria to obtain a refined dataset.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_eb470afa",
      "task_type": "basic_task",
      "description": "Read the input data, parse it, and filter the results to produce the final output.",
      "inputs": {
        "source": "data/input_data.csv",
        "options": {
          "filter": {
            "column": "status",
            "value": "active"
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "total_records": 100,
          "filtered_records": 75
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-10T04:27:53.558389",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task reads raw data from a CSV file, parses it into a structured format, and then filters the parsed data based on specified criteria to produce a refined dataset.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_1037b4d7",
      "task_type": "basic_task",
      "description": "Read unknown data, filter it, and transform it into an unspecified format using three tools.",
      "inputs": {
        "source": "path/to/user_data.csv",
        "options": {
          "filter_criteria": {
            "status": "active"
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "transformed_data": {
          "users": [
            {
              "id": 1,
              "name": "John Doe",
              "status": "active"
            },
            {
              "id": 2,
              "name": "Jane Smith",
              "status": "active"
            }
          ]
        },
        "metadata": {
          "processed_records": 100,
          "filtered_records": 80
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_filter",
        "data_processing_transformer"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-10T04:27:56.696504",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes a CSV file containing user data, filtering out inactive users and transforming the active user data into JSON format for further analysis.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_d159adaa",
      "task_type": "basic_task",
      "description": "Read the input file, parse the data, and filter the results for output.",
      "inputs": {
        "source": "path/to/user_data.csv",
        "options": {
          "filter": {
            "age": ">30"
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "filtered_count": 100
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-10T04:27:59.009745",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task reads a CSV file containing user data, parses the data to structure it, and then filters the structured data based on specified criteria.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_f3beb9c1",
      "task_type": "basic_task",
      "description": "Read the input data, parse it, and filter the results for final output.",
      "inputs": {
        "source": "path/to/data.csv",
        "options": {
          "delimiter": ",",
          "has_header": true
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "filtered_count": 50
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-10T04:28:03.738663",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes data from a CSV file by reading it, parsing it into a structured format, and then filtering the data based on specified criteria.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_9b666b7a",
      "task_type": "basic_task",
      "description": "Read the input data, parse it for structure, and filter it to produce the final output.",
      "inputs": {
        "source": "path/to/data.csv",
        "options": {
          "filter": {
            "column": "status",
            "value": "active"
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "filtered_records": 100,
          "processing_time": "200ms"
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-10T04:27:37.261863",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task reads data from a CSV file, parses the raw data into a structured format, and then filters the data based on specified criteria to produce a refined dataset.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_6362acc5",
      "task_type": "basic_task",
      "description": "Read the input data, filter it, and validate the results for final output.",
      "inputs": {
        "source": "path/to/input_data.csv",
        "options": {
          "filter_criteria": {
            "status": "active"
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_filter",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-10T04:27:39.630424",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes data from a CSV file, filters the required records based on specific criteria, and validates the resulting data against a predefined schema to ensure its correctness.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_04fcd34e",
      "task_type": "basic_task",
      "description": "Read the input data, parse it, and filter the results for final output.",
      "inputs": {
        "source": "path/to/user_data.csv",
        "options": {
          "transform": {
            "filter_by": {
              "age": ">30"
            }
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "records_filtered": 150
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-10T04:27:42.660070",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes a CSV file containing user data by reading the file, parsing the raw data into a structured format, and then filtering the data based on specified criteria to produce a refined dataset.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:40"
    },
    {
      "instance_id": "task_ae87d3e4",
      "task_type": "basic_task",
      "description": "Read the input data, parse it, and filter the results to generate the final output.",
      "inputs": {
        "source": "path/to/user_data.csv",
        "options": {
          "delimiter": ",",
          "has_header": true
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "filtered_count": 150,
          "original_count": 200
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-10T04:27:45.540023",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task reads a CSV file containing user data, parses the data into a structured format, and then filters the data to include only active users.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_b5df6ca6",
      "task_type": "basic_task",
      "description": "Read the input data, parse it, and filter the results to produce the final output.",
      "inputs": {
        "source": "/path/to/sales_data.csv",
        "options": {
          "filter": {
            "column": "category",
            "value": "electronics"
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "filtered_count": 150,
          "total_count": 500
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-10T04:27:48.455036",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task involves reading a CSV file containing sales data, parsing it into a structured format, and then filtering the parsed data to extract only the entries for a specific product category.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_6d366c16",
      "task_type": "basic_task",
      "description": "Read the input data, parse it, and filter the results for final output.",
      "inputs": {
        "source": "path/to/user_data.csv",
        "options": {
          "transform": {
            "filter": {
              "isActive": true
            }
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "filteredCount": 150
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-10T04:27:51.465994",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task reads a CSV file containing user data, parses the data into a structured format, and then filters the data based on specified criteria to yield a refined dataset of active users.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_911f0aa1",
      "task_type": "basic_task",
      "description": "Read the input data, filter it, and validate the output for compliance with the schema.",
      "inputs": {
        "source": "path/to/user_data.csv",
        "options": {
          "transformation": "filter_invalid_entries"
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_filter",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-10T04:27:54.079703",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes a CSV file containing user data, filters out invalid entries, and validates the remaining data against a predefined schema.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_5b271447",
      "task_type": "basic_task",
      "description": "Read the input data, parse it, and filter the results for the final output.",
      "inputs": {
        "source": "path/to/user_data.csv",
        "options": {}
      },
      "expected_outputs": {
        "success": true,
        "metadata": {}
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-10T04:27:57.074816",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task involves reading a CSV file containing user data, parsing it into a structured format, and then filtering the data based on specific criteria to obtain only active users.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_9fba4e90",
      "task_type": "basic_task",
      "description": "Read the input data, parse it, and filter the results for output.",
      "inputs": {
        "source": "path/to/user_data.csv",
        "options": {
          "delimiter": ","
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "filtered_count": 10,
          "country": "USA"
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-10T04:27:59.223791",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task involves reading a CSV file containing user data, parsing it to structure the data, and then filtering the structured data based on specified criteria to extract users from a specific country.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_57976496",
      "task_type": "basic_task",
      "description": "Read the input data, parse it, and filter the results to produce the final output.",
      "inputs": {
        "source": "path/to/data.csv",
        "options": {
          "filter": {
            "column": "status",
            "value": "active"
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "filtered_records": 150
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-10T04:28:03.820457",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes a CSV file to read data, parse it into a structured format, and then filter the data based on specified criteria.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_2ce8435f",
      "task_type": "data_pipeline",
      "description": "Process unknown data through four tools: read, transform, filter, and validate for an unspecified output.",
      "inputs": {
        "source": "path/to/input/data.csv",
        "options": {
          "filter": {
            "criteria": "some_criteria"
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "data_processing_filter",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:36.622212",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes raw data from a CSV file, transforms it into a JSON format, and filters the data based on specific criteria before validating it against a predefined schema.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_b0255535",
      "task_type": "data_pipeline",
      "description": "Process unknown input data through four tools: read, transform, filter, and validate to produce unspecified output.",
      "inputs": {
        "source": "data/input.csv",
        "options": {
          "transform": true,
          "filter": {
            "criteria": "value > 10"
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "data_processing_filter",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:39.278544",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This data processing pipeline reads data from a CSV file, transforms it into JSON format, applies filtering based on specific criteria, and validates the final output against a predefined schema.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_5cb6e6c4",
      "task_type": "data_pipeline",
      "description": "Process unknown data through four tools: read, transform, filter, and validate for unspecified output.",
      "inputs": {
        "source": "path/to/input_data.csv",
        "options": {
          "filter": {
            "column": "status",
            "value": "active"
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "data_processing_filter",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:41.954027",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This data processing pipeline reads raw data from a CSV file, transforms it into JSON format, filters the data based on specific criteria, and validates the resulting dataset against a predefined schema.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_6a2394cd",
      "task_type": "data_pipeline",
      "description": "Process unknown data through four tools: read, parse, transform, and validate to produce unspecified output.",
      "inputs": {
        "source": "data/input_file.csv",
        "options": {
          "filter": {
            "column": "status",
            "value": "active"
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_transformer",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:44.284659",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes raw data from a CSV file by reading it, parsing it into a structured format, transforming it into JSON format, and finally validating the output against a predefined schema to ensure data integrity.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_df84a587",
      "task_type": "data_pipeline",
      "description": "Process unknown data using four tools: read, parse, transform, and filter to produce unspecified output.",
      "inputs": {
        "source": "data/input.csv",
        "options": {
          "transform": {
            "filter": {
              "criteria": {
                "column": "status",
                "value": "active"
              }
            }
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "data": {
          "filtered_items": [
            {
              "id": 1,
              "name": "Item A",
              "status": "active"
            },
            {
              "id": 2,
              "name": "Item B",
              "status": "active"
            }
          ]
        },
        "metadata": {
          "process_time": "150ms",
          "record_count": 2
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_transformer",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:48.902322",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task involves processing raw data from a CSV file, transforming it into JSON format, and filtering the data based on specified criteria to produce a refined dataset.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_db1f347c",
      "task_type": "data_pipeline",
      "description": "Process unknown data through five tools: read, parse, transform, filter, and validate to produce unspecified results.",
      "inputs": {
        "source": "data/input_data.csv",
        "options": {
          "transform": true,
          "filter": {
            "criteria": "value > 10"
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_transformer",
        "data_processing_filter",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:51.495191",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes raw data from a CSV file, transforms it into JSON format, and applies filtering to extract relevant information before validating the final output against a specified schema.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_283f43d6",
      "task_type": "data_pipeline",
      "description": "Process unknown data through four tools: read, filter, transform, and validate to produce unspecified output.",
      "inputs": {
        "source": "data/input_file.csv",
        "options": {
          "filter_criteria": {
            "column": "status",
            "value": "active"
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_filter",
        "data_processing_transformer",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:54.758505",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes raw data from a CSV file by reading it, filtering out unnecessary information, transforming the data format, and validating the final output against a defined schema.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_918c2a91",
      "task_type": "data_pipeline",
      "description": "Process unknown input data through four tools to produce an unspecified output result.",
      "inputs": {
        "source": "data/input.csv",
        "options": {
          "delimiter": ",",
          "header": true
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_transformer",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:57.018788",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes raw data from a CSV file by reading, parsing, transforming, and validating the data before outputting the final structured result.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_f519fed4",
      "task_type": "data_pipeline",
      "description": "Process unknown data through five tools: read, parse, transform, filter, and validate for unspecified output.",
      "inputs": {
        "source": "path/to/input_data.csv",
        "options": {
          "filter": "true",
          "transform": "true"
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_transformer",
        "data_processing_filter",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:59.641655",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes raw data from a CSV file, transforms it into JSON format, filters the data based on specified criteria, and validates the final output against a defined schema.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_47fcc242",
      "task_type": "data_pipeline",
      "description": "Process unknown data through four tools: read, transform, filter, and validate to produce unspecified output.",
      "inputs": {
        "source": "path/to/input/data.csv",
        "options": {
          "filter": "true"
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "data_processing_filter",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:28:03.823489",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This data processing pipeline reads raw data from a CSV file, transforms it into JSON format, filters the data based on specified criteria, and validates the final output against a defined schema.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_8906ea5a",
      "task_type": "data_pipeline",
      "description": "Process unknown data through four tools: read, parse, transform, and validate to produce unspecified output.",
      "inputs": {
        "source": "data/input.csv",
        "options": {
          "transform": {
            "filter": "active",
            "map": {
              "name": "full_name"
            }
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_transformer",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:36.738674",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes raw data from a CSV file by reading, parsing, transforming, and validating it before outputting the final structured dataset.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_98719d67",
      "task_type": "data_pipeline",
      "description": "Process unknown input data through five tools to produce an unspecified output result.",
      "inputs": {
        "source": "path/to/input/data.csv",
        "options": {
          "delimiter": ",",
          "has_header": true
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_transformer",
        "data_processing_filter",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:38.967823",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes raw data from a CSV file, transforms it into JSON format, filters the data based on specified criteria, and validates the final output against a predefined schema.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_4a6a42e0",
      "task_type": "data_pipeline",
      "description": "Process unknown data through four tools: read, transform, filter, and validate to produce an unspecified result.",
      "inputs": {
        "source": "data/input_file.csv",
        "options": {
          "transform": {
            "filter_criteria": {
              "status": "active"
            }
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "data_processing_filter",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:41.699038",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task involves reading raw data from a CSV file, transforming it into JSON format, filtering the transformed data based on specific criteria, and validating the final dataset against a predefined schema.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_25e2a4dd",
      "task_type": "data_pipeline",
      "description": "Process unknown data through four tools: read, parse, transform, and validate to produce unspecified output.",
      "inputs": {
        "source": "path/to/input_file.csv",
        "options": {
          "filter": {
            "criteria": "specific_criteria"
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_transformer",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:43.750825",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes raw data from a CSV file by reading it, parsing it into a structured format, transforming it to JSON format, and finally validating the data against a predefined schema.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_ac5bfb7f",
      "task_type": "data_pipeline",
      "description": "Process unknown data through five tools: read, parse, transform, filter, and validate to produce unspecified results.",
      "inputs": {
        "source": "path/to/source/data.csv",
        "options": {
          "filter": {
            "column": "status",
            "value": "active"
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_transformer",
        "data_processing_filter",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:47.245041",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes raw data from a CSV file, transforms it into JSON format, filters it based on specific criteria, and validates the final dataset against a predefined schema.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_cce0b814",
      "task_type": "data_pipeline",
      "description": "Process unknown data using four tools: read, parse, transform, and validate to produce unspecified output.",
      "inputs": {
        "source": "path/to/data.csv",
        "options": {
          "delimiter": ",",
          "header": true
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": [],
        "metadata": {
          "operation_time": "5ms",
          "input_records": 1000,
          "output_records": 1000
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_transformer",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:50.285797",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes raw data from a CSV file by reading, parsing, transforming, and validating it before writing the final output in JSON format.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_fcead5f0",
      "task_type": "data_pipeline",
      "description": "Process unknown data through five tools: read, parse, filter, transform, and validate to produce unspecified output.",
      "inputs": {
        "source": "data/input_data.csv",
        "options": {
          "delimiter": ",",
          "header": true
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": [],
        "metadata": {
          "processed_records": 100,
          "valid_records": 100
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter",
        "data_processing_transformer",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:53.772087",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes raw data from a CSV file by reading, parsing, filtering, transforming, and validating the data before outputting a structured result.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_9f517aca",
      "task_type": "data_pipeline",
      "description": "Process unknown data using four tools: read, transform, filter, and validate for unspecified output.",
      "inputs": {
        "source": "path/to/input/data.csv",
        "options": {
          "filter": {
            "column": "status",
            "value": "active"
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "data_processing_filter",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:56.320085",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes raw data by reading it from a CSV file, transforming it into JSON format, filtering based on specific criteria, and validating the final output against a defined schema.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_02d64423",
      "task_type": "data_pipeline",
      "description": "Process unknown input data through five tools to produce an unspecified output result.",
      "inputs": {
        "source": "data/input.csv",
        "options": {
          "filter": {
            "column": "status",
            "value": "active"
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": [],
        "metadata": {
          "operation": "validation",
          "timestamp": "2023-10-06T12:00:00Z"
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_transformer",
        "data_processing_filter",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:59.534758",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes raw data from a CSV file, transforms it to JSON format, filters it based on specific criteria, and then validates the final output against a defined schema.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_891b38c4",
      "task_type": "data_pipeline",
      "description": "Process unknown input data through 5 tools to produce an unspecified output result.",
      "inputs": {
        "source": "path/to/input/data.csv",
        "options": {
          "delimiter": ",",
          "header": true
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_transformer",
        "data_processing_filter",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:28:03.874165",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This data processing pipeline reads raw data from a CSV file, parses it into a structured format, transforms it to JSON, filters the data based on specific criteria, and finally validates the processed data against a predefined schema.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_cca104e9",
      "task_type": "basic_task",
      "description": "Read the input data, parse it, and filter the results to produce the final output.",
      "inputs": {
        "source": "path/to/sales_data.csv",
        "options": {
          "delimiter": ",",
          "has_header": true
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "filtered_count": 150,
          "total_count": 200
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-10T04:27:37.072314",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task reads a CSV file containing sales data, parses the raw data into a structured format, and filters the data based on specified sales thresholds to generate a refined dataset of high-performing sales entries.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_7b3f0630",
      "task_type": "basic_task",
      "description": "Read input data, parse it for structure, and filter results to produce the final output.",
      "inputs": {
        "source": "data/input_file.csv",
        "options": {
          "transform": {
            "filtering": {
              "criteria": {
                "column": "status",
                "value": "active"
              }
            }
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "record_count": 100
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-10T04:27:39.775591",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task involves reading data from a CSV file, parsing it into a structured format, and then filtering the data based on specified criteria to refine the dataset.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_83fff725",
      "task_type": "basic_task",
      "description": "Read the input data, parse it, and filter the results for final output.",
      "inputs": {
        "source": "path/to/sales_data.csv",
        "options": {
          "delimiter": ",",
          "header": true
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "filtered_records_count": 100
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-10T04:27:42.462008",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task reads a CSV file containing sales data, parses the raw data into a structured format, and then filters the data to only include records with sales above a certain threshold.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_204d1669",
      "task_type": "basic_task",
      "description": "Read the input data, parse it, and filter the results for final output.",
      "inputs": {
        "source": "data/input.csv",
        "options": {
          "transformation": {
            "filter": {
              "column": "status",
              "value": "active"
            }
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "filtered_count": 100,
          "original_count": 150
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-10T04:27:46.091974",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task reads data from a CSV file, parses it into a structured format, and then filters the data based on specific criteria to produce a refined dataset.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_7034486c",
      "task_type": "basic_task",
      "description": "Read input data, parse it for structure, and filter results to generate the final output.",
      "inputs": {
        "source": "path/to/sales_data.csv",
        "options": {
          "delimiter": ",",
          "has_header": true
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "filtered_count": 50,
          "total_count": 200
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-10T04:27:49.086772",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task reads a CSV file containing raw sales data, parses it into a structured format, and then filters the data based on specific sales criteria (e.g., sales greater than $1000).",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_6441f24f",
      "task_type": "basic_task",
      "description": "Read the input data, filter it, and validate the results for compliance.",
      "inputs": {
        "source": "path/to/user_data.csv",
        "options": {
          "transform": {
            "fields": [
              "name",
              "age",
              "email"
            ]
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_filter",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-10T04:27:52.061976",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes a CSV file containing user data to extract relevant information, filter it based on age criteria, and validate the remaining data against a predefined schema.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_a8469cf0",
      "task_type": "basic_task",
      "description": "Read input data, parse it, and filter results to produce the final output.",
      "inputs": {
        "source": "path/to/user_data.csv",
        "options": {
          "delimiter": ",",
          "encoding": "utf-8"
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "filtered_count": 100,
          "filter_criteria": {
            "age": "30",
            "location": "USA"
          }
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-10T04:27:54.967534",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task reads a CSV file containing user data, parses it into a structured format, and then filters out users based on specific criteria such as age and location.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_d69b2bb1",
      "task_type": "basic_task",
      "description": "Read the input data, parse it, and filter the results to produce the final output.",
      "inputs": {
        "source": "path/to/data.csv",
        "options": {
          "transform": {
            "filter": {
              "criteria": {
                "column": "status",
                "value": "active"
              }
            }
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "processed_count": 100,
          "filter_count": 80
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-10T04:27:57.273709",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task involves reading data from a CSV file, parsing it into a structured format, and then filtering the parsed data based on specified criteria.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_9c7c13d1",
      "task_type": "basic_task",
      "description": "Read the input data, parse it, and filter the results to produce the final output.",
      "inputs": {
        "source": "data/input_file.csv",
        "options": {
          "transformation": {
            "filter": {
              "criteria": "age > 18"
            }
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "filtered_count": 100,
          "original_count": 150
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-10T04:27:59.902055",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task reads data from a CSV file, parses it into a structured format, and filters the data based on specific criteria to produce a refined dataset.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_07b84aaa",
      "task_type": "basic_task",
      "description": "Read the input data, parse it, and filter the results for final output.",
      "inputs": {
        "source": "data/input.csv",
        "options": {
          "filters": {
            "column_name": "status",
            "value": "active"
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "filtered_count": 50
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-10T04:28:04.782238",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task reads data from a CSV file, parses it into a structured format, and then filters the data based on specified criteria.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_2fb198d5",
      "task_type": "basic_task",
      "description": "Read input data, parse it, and filter the results to produce the final output.",
      "inputs": {
        "source": "path/to/user_data.csv",
        "options": {
          "delimiter": ",",
          "header": true
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "filtered_count": 100
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-10T04:27:37.410165",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task reads a CSV file containing raw user data, parses it into a structured format, and then filters the data based on specified criteria to produce a refined dataset.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_af16fb1b",
      "task_type": "basic_task",
      "description": "Read the input data, filter it, and validate the result for compliance.",
      "inputs": {
        "source": "sales_data.csv",
        "options": {
          "filter_criteria": {
            "min_sales": 1000
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_filter",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-10T04:27:41.272666",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes a CSV file containing sales data, filters the data based on specified criteria, and validates the processed data against a predefined schema.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_4df92862",
      "task_type": "basic_task",
      "description": "Read the input data, parse it, and filter the results to generate the final output.",
      "inputs": {
        "source": "path/to/data.csv",
        "options": {
          "filter": {
            "column": "status",
            "value": "active"
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "filtered_count": 100
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-10T04:27:43.870857",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task reads data from a CSV file, parses it into a structured format, and then filters the parsed data based on specified criteria.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_c9f60e43",
      "task_type": "basic_task",
      "description": "Read the input data, parse it, and filter the results to produce the final output.",
      "inputs": {
        "source": "path/to/user_data.csv",
        "options": {
          "delimiter": ",",
          "header": true
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "filtered_count": 100,
          "country": "USA"
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-10T04:27:46.568346",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task involves reading a CSV file containing user data, parsing the raw data into a structured format, and filtering the data to only include users from a specific country.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_3c239676",
      "task_type": "basic_task",
      "description": "Read unknown data, parse it, and filter results to produce an unspecified output.",
      "inputs": {
        "source": "path/to/sales_data.csv",
        "options": {
          "delimiter": ",",
          "header": true
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "filtered_count": 150
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-10T04:27:49.179428",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task involves reading a CSV file containing sales data, parsing the data into a structured format, and then filtering the entries to retain only those above a certain sales threshold.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_d88ab894",
      "task_type": "basic_task",
      "description": "Read the input data, parse it, and filter the results to produce the final output.",
      "inputs": {
        "source": "data/input_data.csv",
        "options": {
          "filter": {
            "criteria": {
              "age": ">30"
            }
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "filtered_count": 50
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-10T04:27:52.001216",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes data from a CSV file, parses it into a structured format, and applies filtering to extract relevant records.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_2b724761",
      "task_type": "basic_task",
      "description": "Read the input file, parse the data, and filter results for output.",
      "inputs": {
        "source": "path/to/user_data.csv",
        "options": {
          "delimiter": ",",
          "header": true
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "filter_criteria": "age > 18 and country = 'USA'"
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-10T04:27:54.483318",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes a CSV file containing user data by reading it, parsing it into a structured format, and then filtering the data based on specified criteria such as age and country.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_57c16554",
      "task_type": "basic_task",
      "description": "Read the input file, parse the data, and filter the results for final output.",
      "inputs": {
        "source": "data/input_file.csv",
        "options": {
          "filter": {
            "column": "status",
            "value": "active"
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "filtered_count": 150
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-10T04:27:56.773168",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task involves reading data from a CSV file, parsing the raw data into a structured format, and then filtering the structured data based on specific criteria to produce a refined dataset.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_2a3eedfd",
      "task_type": "basic_task",
      "description": "Read the input data, parse it, and filter the results to generate the final output.",
      "inputs": {
        "source": "path/to/sales_data.csv",
        "options": {
          "delimiter": ",",
          "header": true
        }
      },
      "expected_outputs": {
        "success": true,
        "data": [
          {
            "sale_id": 1,
            "amount": 200
          },
          {
            "sale_id": 2,
            "amount": 300
          }
        ],
        "metadata": {
          "filtered_count": 2
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-10T04:27:59.899414",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task involves reading a CSV file containing sales data, parsing the data into a structured format, and then filtering the data to extract only the sales above a specified threshold.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_2ba6ca25",
      "task_type": "basic_task",
      "description": "Read the input data, parse it for structure, and filter the results for output.",
      "inputs": {
        "source": "path/to/input_file.csv",
        "options": {
          "filter": {
            "column": "status",
            "value": "active"
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "filtered_count": 100
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-10T04:28:04.846831",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task reads data from a CSV file, parses it into a structured format, and then filters the parsed data based on specified criteria.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_63ffb506",
      "task_type": "basic_task",
      "description": "Read the input data, parse it, and filter the results to produce the final output.",
      "inputs": {
        "source": "path/to/user_data.csv",
        "options": {
          "filter_criteria": {
            "age": ">30",
            "status": "active"
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "filtered_count": 150,
          "original_count": 300
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-10T04:27:38.195420",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task reads a CSV file containing user data, parses the data into a structured format, and applies filters to refine the dataset based on specific criteria.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_35258052",
      "task_type": "basic_task",
      "description": "Read the input data, parse it, and filter the results for final output.",
      "inputs": {
        "source": "path/to/data.csv",
        "options": {
          "filter_criteria": {
            "status": "active"
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "filtered_count": 100
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-10T04:27:40.916026",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes data from a CSV file by reading it, parsing it into a structured format, and then filtering the data based on specified criteria. The final output is a refined dataset containing only the relevant data entries.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_865701e4",
      "task_type": "basic_task",
      "description": "Read the input data, parse it, and filter the results to generate the output.",
      "inputs": {
        "source": "path/to/data.csv",
        "options": {
          "filter": {
            "criteria": {
              "column": "status",
              "value": "active"
            }
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "row_count": 100,
          "filtered_count": 75
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-10T04:27:44.025604",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes data from a CSV file by reading the file, parsing its contents into a structured format, and then filtering the data based on specific criteria.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_a298af86",
      "task_type": "basic_task",
      "description": "Read the input data, parse it, and filter the results to produce the final output.",
      "inputs": {
        "source": "path/to/data.csv",
        "options": {
          "filter": {
            "column": "status",
            "value": "active"
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "filtered_count": 100
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-10T04:27:46.572113",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task reads data from a CSV file, parses it into a structured format, and filters the parsed data based on specific criteria to produce a refined dataset.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_b37d1b83",
      "task_type": "basic_task",
      "description": "Read the input data, parse it, and filter the results to produce the final output.",
      "inputs": {
        "source": "data/input_file.csv",
        "options": {
          "transform": {
            "filter": {
              "column": "status",
              "value": "active"
            }
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "processed_rows": 100,
          "filtered_rows": 50
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-10T04:27:49.590503",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task involves reading data from a CSV file, parsing it into a structured format, and then filtering the data based on specified criteria.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_7313fff0",
      "task_type": "basic_task",
      "description": "Read the input data, parse it, and filter the results to produce the final output.",
      "inputs": {
        "source": "data/input_file.csv",
        "options": {
          "filter": {
            "column": "status",
            "value": "active"
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "filtered_count": 100
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-10T04:27:52.587732",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task reads data from a CSV file, parses it into a structured format, and then filters the parsed data based on specific criteria.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_6c2fdaac",
      "task_type": "basic_task",
      "description": "Read the input data, parse it, and filter the results to produce the final output.",
      "inputs": {
        "source": "path/to/user_data.csv",
        "options": {
          "delimiter": ",",
          "header": true
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "filtered_count": 100
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-10T04:27:54.977816",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes a CSV file containing user data, parses it into a structured format, and filters the data based on user criteria to extract relevant entries.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_509462c3",
      "task_type": "basic_task",
      "description": "Read the input data, parse it, and filter the results to produce the final output.",
      "inputs": {
        "source": "path/to/data.csv",
        "options": {
          "transform": {
            "filter_condition": "age > 18"
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "filtered_count": 100
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-10T04:27:57.517132",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes data from a CSV file by reading it, parsing it into a structured format, and then filtering the data based on specific criteria.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_315e1d65",
      "task_type": "basic_task",
      "description": "Read input data, parse it for structure, and filter the results for output.",
      "inputs": {
        "source": "path/to/data.csv",
        "options": {
          "transform": {
            "filter": {
              "criteria": "column_value > 100"
            }
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "filtered_count": 50
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-10T04:28:00.100359",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task reads data from a CSV file, parses it into a structured format, and then filters the data based on specified criteria to produce a refined dataset.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_d035cd28",
      "task_type": "basic_task",
      "description": "Read the input data, parse it, and filter the results to produce the final output.",
      "inputs": {
        "source": "path/to/data.csv",
        "options": {
          "filter_criteria": {
            "column": "status",
            "value": "active"
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "filtered_count": 100
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-10T04:28:04.982604",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task retrieves data from a CSV file, parses it into a structured format, and then filters the data based on specified criteria.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_fabe01ba",
      "task_type": "data_pipeline",
      "description": "Process unknown data through five tools: read, parse, transform, filter, and validate to produce unspecified output.",
      "inputs": {
        "source": "path/to/raw_data.csv",
        "options": {
          "filter": "active"
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_transformer",
        "data_processing_filter",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:36.931251",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This data processing pipeline reads raw data from a CSV file, parses it into a structured format, transforms it into JSON, filters the data based on specified criteria, and validates the final output against a predefined schema.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_43082e0e",
      "task_type": "data_pipeline",
      "description": "Process unknown input data through four tools: read, transform, filter, and validate for unspecified output.",
      "inputs": {
        "source": "data/input_file.csv",
        "options": {
          "transform": true,
          "filter": {
            "criteria": "value > 10"
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "data_processing_filter",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:39.561630",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This data processing pipeline reads raw data from a CSV file, transforms it into JSON format, filters the data based on specific criteria, and then validates the resulting dataset against a predefined schema, ensuring data integrity and correctness.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_4197f1ac",
      "task_type": "data_pipeline",
      "description": "Process unknown data using four tools: read, parse, transform, and validate for unspecified output.",
      "inputs": {
        "source": "data/input_file.csv",
        "options": {
          "filter": {
            "column": "status",
            "value": "active"
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_transformer",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:42.158276",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes raw data from a CSV file by reading, parsing, transforming the data into JSON format, and validating it against a predefined schema.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_e3007b6d",
      "task_type": "data_pipeline",
      "description": "Process unknown data using four tools: read, parse, transform, and validate to produce unspecified output.",
      "inputs": {
        "source": "path/to/input/data.csv",
        "options": {
          "transform": true,
          "filter": {
            "criteria": "valid"
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_transformer",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:44.737372",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes raw data from a CSV file by reading, parsing, transforming, and validating it, ultimately ensuring the data meets a specified schema.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_19e04cbc",
      "task_type": "data_pipeline",
      "description": "Process unknown data through four tools: read, filter, validate, and transform to unspecified output.",
      "inputs": {
        "source": "path/to/sales_data.csv",
        "options": {
          "filter_criteria": {
            "status": "completed"
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "transformed_data": {
          "sales": [
            {
              "id": 1,
              "amount": 100.0,
              "date": "2023-10-01"
            },
            {
              "id": 2,
              "amount": 200.0,
              "date": "2023-10-02"
            }
          ]
        },
        "metadata": {
          "record_count": 2,
          "timestamp": "2023-10-03T12:00:00Z"
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_filter",
        "data_processing_validator",
        "data_processing_transformer"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:48.969874",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes raw sales data from a CSV file, filters it to include only relevant records, validates the data against a predefined schema, and transforms it into JSON format for further analysis.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_3b6923a7",
      "task_type": "data_pipeline",
      "description": "Process unknown data through three tools: read, transform format, and validate for output.",
      "inputs": {
        "source": "path/to/input/data.csv",
        "options": {
          "filter": {
            "column": "status",
            "value": "active"
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:51.709008",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task involves reading raw data from a CSV file, transforming it into a JSON format while applying specific modifications, and then validating the transformed data against a predefined schema to ensure its correctness and integrity.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_3aa4e46a",
      "task_type": "data_pipeline",
      "description": "Process unknown data using three tools: read, transform format, and validate for compliance.",
      "inputs": {
        "source": "path/to/input/data.csv",
        "options": {
          "filter": {
            "criteria": "some_criteria"
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:54.613762",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes raw CSV data by reading it, transforming it into JSON format, and then validating the transformed data against a defined schema to ensure its correctness and integrity.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_a4ca81c1",
      "task_type": "data_pipeline",
      "description": "Process unknown data through four tools: read, transform, filter, and validate to produce unspecified output.",
      "inputs": {
        "source": "path/to/source/file.csv",
        "options": {
          "filter": "specific_criteria"
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": [],
        "metadata": {
          "processed_count": 100,
          "valid_count": 100
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "data_processing_filter",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:57.359770",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes raw data from a source file, transforms it into a different format, filters the data based on specific criteria, and validates the resulting dataset before outputting the final processed data.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_b312b107",
      "task_type": "data_pipeline",
      "description": "Process unknown data through four tools: read, transform, filter, and validate to produce unspecified output.",
      "inputs": {
        "source": "path/to/input_data.csv",
        "options": {
          "filter": "true"
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "data_processing_filter",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:28:00.178406",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task involves reading raw data from a CSV file, transforming it into JSON format, and applying a filter to refine the dataset based on specific criteria. The final output will be a validated dataset that meets a defined schema.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_357fc854",
      "task_type": "data_pipeline",
      "description": "Process unknown data through five tools: read, parse, transform, filter, and validate for unspecified output.",
      "inputs": {
        "source": "data/input.csv",
        "options": {
          "has_header": true
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_transformer",
        "data_processing_filter",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:28:05.088726",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes raw CSV data from a file by reading it, parsing it into a structured format, transforming it into JSON format, filtering specific entries, and finally validating the data against a defined schema.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_ca508f0f",
      "task_type": "data_pipeline",
      "description": "Process unknown data through four tools: read, transform, filter, and validate to produce unspecified output.",
      "inputs": {
        "source": "path/to/input/data.json",
        "options": {
          "filter": "specificCriteria"
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "data_processing_filter",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:36.988044",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task involves reading raw data from a JSON file, transforming the data format to XML, filtering specific entries based on criteria, and validating the output against a predefined schema to ensure quality.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_c10a4ffc",
      "task_type": "data_pipeline",
      "description": "Process unknown input data through four tools: read, transform, filter, and validate for output.",
      "inputs": {
        "source": "data/input_file.csv",
        "options": {
          "filter": "active_users"
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "data_processing_filter",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:39.530143",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes data from a CSV file by reading it, transforming it to JSON format, filtering it based on specified criteria, and validating the final data against a predefined schema to ensure its integrity.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_e33bfd30",
      "task_type": "data_pipeline",
      "description": "Process unknown data through four tools: read, parse, transform, and validate for unspecified output.",
      "inputs": {
        "source": "data/input_file.csv",
        "options": {
          "filter": "include_header"
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_transformer",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:42.137939",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes raw data by reading it from a source file, parsing it into a structured format, transforming it into a different format, and then validating the final output against a predefined schema.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_f6d317dd",
      "task_type": "data_pipeline",
      "description": "Process unknown input data through four tools to produce an unspecified output result.",
      "inputs": {
        "source": "path/to/input.csv",
        "options": {
          "delimiter": ",",
          "header": true
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_transformer",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:44.536601",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes raw data from a CSV file by reading, transforming, and writing the structured data to a JSON file. The pipeline includes parsing the CSV data, transforming it into a different format, and validating the transformed data before writing it to the output file.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_eb7ec292",
      "task_type": "data_pipeline",
      "description": "Process unknown input data through four tools to produce an unspecified output result.",
      "inputs": {
        "source": "path/to/source/file.csv",
        "options": {
          "format": "CSV"
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_transformer",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:46.773322",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes raw data from a source file, transforms it into a different format, and validates the final output against a defined schema to ensure data integrity.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_46249287",
      "task_type": "data_pipeline",
      "description": "Process unknown data through five tools: read, parse, filter, transform, and validate for unspecified output.",
      "inputs": {
        "source": "data/input.csv",
        "options": {
          "filter": {
            "criteria": "column_value > 10"
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter",
        "data_processing_transformer",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:50.211920",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task involves processing raw data from a CSV file by reading it, parsing it into a structured format, filtering the data based on specified criteria, transforming it into JSON format, and finally validating the transformed data against a predefined schema.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_bd62d1a0",
      "task_type": "data_pipeline",
      "description": "Process unknown data through four tools: read, transform, filter, and validate to produce unspecified results.",
      "inputs": {
        "source": "data/input_file.csv",
        "options": {
          "filter": {
            "criteria": "valid"
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "data_processing_filter",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:54.020901",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task defines a data processing pipeline that reads raw data from a CSV file, transforms the data into JSON format, filters the data based on specific criteria, and validates the final dataset against a predefined schema.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_5ef3b056",
      "task_type": "data_pipeline",
      "description": "Process unknown input data through four tools: read, transform, filter, and aggregate for unspecified output.",
      "inputs": {
        "source": "data/input.json",
        "options": {
          "filter_criteria": {
            "status": "active"
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "record_count": 100,
          "aggregation_type": "sum"
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "data_processing_filter",
        "data_processing_aggregator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:57.287664",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This data processing pipeline reads raw data from a JSON file, transforms it into CSV format, filters the data based on specific criteria, and aggregates the results to provide a summary of the processed data.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_09c989ee",
      "task_type": "data_pipeline",
      "description": "Process unknown data through four tools: read, transform, filter, and validate for unspecified output.",
      "inputs": {
        "source": "path/to/input/data.csv",
        "options": {
          "delimiter": ",",
          "header": true
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "data_processing_filter",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:59.853858",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This data processing pipeline reads data from a CSV file, transforms it from CSV format to JSON format, filters the transformed data based on specific criteria, and finally validates the filtered data against a defined schema.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_f033efa5",
      "task_type": "data_pipeline",
      "description": "Process unknown data through five tools to produce an unspecified output format with no fields.",
      "inputs": {
        "source": "path/to/input.csv",
        "options": {
          "filter": {
            "criteria": "some_criteria"
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "filtered_data": "expected filtered dataset"
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_transformer",
        "data_processing_validator",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:28:05.384809",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes raw data by reading it from a CSV file, parsing it into a structured format, transforming it to JSON, validating it against a predefined schema, and finally filtering the data based on specific criteria.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_befbfc1a",
      "task_type": "basic_task",
      "description": "Read the input data, parse it, and filter the results to create the final output.",
      "inputs": {
        "source": "data/input_file.csv",
        "options": {
          "delimiter": ",",
          "header": true
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "filtered_count": 50
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-10T04:27:36.710265",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task involves reading data from a CSV file, parsing the data into a structured format, and then filtering the parsed data based on specified criteria.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_9e32619f",
      "task_type": "basic_task",
      "description": "Read the input data, parse it, and filter the results to produce the final output.",
      "inputs": {
        "source": "path/to/user_data.csv",
        "options": {
          "transform": {
            "filter_active_users": true
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "filtered_count": 150,
          "total_count": 200
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-10T04:27:40.233510",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes a CSV file containing user data. It reads the file, parses the contents to structure the data, and then filters the data based on specified criteria to retrieve only active users.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_603b1601",
      "task_type": "basic_task",
      "description": "Read the input file, parse the data, and filter the results for output.",
      "inputs": {
        "source": "path/to/sales_data.csv",
        "options": {
          "delimiter": ",",
          "header": true
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "filtered_records_count": 100
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-10T04:27:43.067920",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task reads a CSV file containing sales data, parses the raw data into a structured format, and filters the records to include only those with sales greater than a specified threshold.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_9db1440b",
      "task_type": "basic_task",
      "description": "Read the input data, parse it, and filter the results to produce the final output.",
      "inputs": {
        "source": "path/to/user_data.csv",
        "options": {
          "transform": {
            "filter": "active"
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "filtered_count": 100
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-10T04:27:46.538229",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task reads a CSV file containing user data, parses it into a structured format, and filters the data based on specified criteria to produce a refined dataset of users meeting the criteria.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_26a9b699",
      "task_type": "basic_task",
      "description": "Read input data, parse it for structure, and filter results to produce the final output.",
      "inputs": {
        "source": "data/input.csv",
        "options": {
          "filter": {
            "column": "status",
            "value": "active"
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "row_count": 150,
          "timestamp": "2023-10-01T12:00:00Z"
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-10T04:27:49.921330",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task reads data from a CSV file, parses it into a structured format, and filters the data based on specific criteria to produce a refined dataset.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_3d9fe8ed",
      "task_type": "basic_task",
      "description": "Read the input data, parse it, and filter the results to produce the final output.",
      "inputs": {
        "source": "path/to/data.csv",
        "options": {
          "transform": {
            "filter": "include only rows where age > 30"
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "row_count": 50,
          "filtered_columns": [
            "name",
            "age",
            "email"
          ]
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-10T04:27:52.740231",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task involves reading data from a CSV file, parsing it into a structured format, and then filtering the data based on specified criteria. The final output will be a refined dataset that meets the filtering conditions.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_c65b65f4",
      "task_type": "basic_task",
      "description": "Read the input data, parse it, and filter the results to produce the final output.",
      "inputs": {
        "source": "path/to/data.csv",
        "options": {
          "transform": {
            "filter_column": "status",
            "filter_value": "active"
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "data": [
          {
            "id": 1,
            "name": "John Doe",
            "status": "active"
          },
          {
            "id": 2,
            "name": "Jane Smith",
            "status": "active"
          }
        ],
        "metadata": {
          "record_count": 2
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-10T04:27:55.826904",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task extracts data from a CSV file, parses it into a structured format, and filters the data based on specified criteria.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_3b7c477e",
      "task_type": "basic_task",
      "description": "Read input data, parse it, filter the results, and validate the final output.",
      "inputs": {
        "source": "path/to/user_data.csv",
        "options": {
          "delimiter": ",",
          "header": true
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": [],
        "metadata": {
          "processed_records": 100,
          "valid_records": 100
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-10T04:27:58.806135",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes a CSV file containing user data, parses it to extract structured information, filters it based on specific criteria, and validates the final dataset against a predefined schema.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_ae2f7bbd",
      "task_type": "basic_task",
      "description": "Read the input data, parse it, and filter the results to produce the final output.",
      "inputs": {
        "source": "data/input.csv",
        "options": {
          "filter_criteria": {
            "column": "status",
            "value": "active"
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "record_count": 100,
          "filtered_count": 75
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-10T04:28:03.361334",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task reads data from a CSV file, parses it into a structured format, and filters the data based on specified criteria to produce a refined dataset.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_e22fdfdd",
      "task_type": "basic_task",
      "description": "Read unknown data, parse it, and filter results to produce an unspecified output.",
      "inputs": {
        "source": "path/to/input_data.csv",
        "options": {
          "filter": {
            "column": "status",
            "value": "active"
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "filtered_count": 100
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-10T04:28:05.557823",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes data from a CSV file by reading its contents, parsing the data into a structured format, and then filtering the data based on specified criteria.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_1f424e47",
      "task_type": "data_pipeline",
      "description": "Process unknown data through five tools: read, parse, filter, transform, and validate to produce unspecified output.",
      "inputs": {
        "source": "path/to/data.csv",
        "options": {
          "header": true,
          "delimiter": ","
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter",
        "data_processing_transformer",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:37.126635",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes raw data by reading it from a CSV file, parsing it into a structured format, filtering the data based on specified criteria, transforming it into JSON format, and finally validating the transformed data against a predefined schema.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_0d4b3518",
      "task_type": "data_pipeline",
      "description": "Process unknown input data through four tools: read, transform, filter, and validate for unspecified output.",
      "inputs": {
        "source": "path/to/input/data.csv",
        "options": {
          "filter": {
            "column": "status",
            "value": "active"
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": [],
        "metadata": {
          "timestamp": "2023-10-01T12:00:00Z"
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "data_processing_filter",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:40.056699",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes raw data from a CSV file, transforms it into a JSON format, filters the data based on specific criteria, and validates the final output against a predefined schema.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_2c600a84",
      "task_type": "data_pipeline",
      "description": "Process unknown input data through four tools: read, parse, filter, and validate to produce unspecified output.",
      "inputs": {
        "source": "path/to/input_data.csv",
        "options": {
          "filter": "include only rows where value > 10"
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": [],
        "metadata": {
          "timestamp": "2023-10-23T12:00:00Z"
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:43.423121",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes raw data from a CSV file, transforming it into a structured JSON format, filtering the data based on specific criteria, and validating the final output against a predefined schema.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_ef6cc92e",
      "task_type": "data_pipeline",
      "description": "Process unknown data through four tools: read, filter, transform, and validate, to produce unspecified results.",
      "inputs": {
        "source": "path/to/raw_data.csv",
        "options": {
          "filter_criteria": {
            "column": "status",
            "value": "active"
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": [],
        "metadata": {
          "timestamp": "2023-10-01T12:00:00Z",
          "processed_records": 100
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_filter",
        "data_processing_transformer",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:46.717150",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes raw data from a CSV file by reading, filtering, transforming, and validating the data before outputting the final structured result.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_efacf6ed",
      "task_type": "data_pipeline",
      "description": "Process unknown data using four tools: read, parse, transform, and validate to produce unspecified results.",
      "inputs": {
        "source": "input_data.csv",
        "options": {
          "filter": {
            "column": "status",
            "value": "active"
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": [],
        "metadata": {
          "validation_time": "2023-10-01T12:00:00Z"
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_transformer",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:49.615610",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This data processing pipeline reads raw data from a CSV file, parses it into a structured format, transforms the data to a JSON format, and validates the final output against a predefined schema to ensure data integrity.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_da175bb3",
      "task_type": "data_pipeline",
      "description": "Process unknown input data through four tools: read, transform, filter, and validate for unspecified output.",
      "inputs": {
        "source": "path/to/input/data.csv",
        "options": {
          "filter": "true",
          "mapping": "include_headers"
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "data_processing_filter",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:52.477218",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task involves reading raw data from a CSV file, transforming it into JSON format, filtering the data based on specified criteria, and validating the final dataset against a predefined schema.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_4f7b5d68",
      "task_type": "data_pipeline",
      "description": "Process unknown data through five tools: read, parse, transform, filter, and validate for unspecified output.",
      "inputs": {
        "source": "path/to/input_data.csv",
        "options": {
          "delimiter": ",",
          "header": true
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_transformer",
        "data_processing_filter",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:55.467704",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes raw data from a CSV file by parsing it, transforming the data format, filtering the dataset, and validating the final output against a predefined schema.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_c8d8fef1",
      "task_type": "data_pipeline",
      "description": "Process unknown input data through five tools to produce an unspecified output result.",
      "inputs": {
        "source": "path/to/input/data.csv",
        "options": {
          "filter": "some_criteria"
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_transformer",
        "data_processing_filter",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:57.938248",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes raw data from a CSV file, transforms it into JSON format, filters the data based on specific criteria, and validates the final data against a defined schema.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_e8fcbb2e",
      "task_type": "data_pipeline",
      "description": "Process unknown input data through five tools to produce an unspecified output result.",
      "inputs": {
        "source": "path/to/input/data.csv",
        "options": {
          "filter": {
            "criteria": "value > 10"
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": [],
        "metadata": {
          "operation_time": "20ms"
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_transformer",
        "data_processing_filter",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:28:00.645950",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes raw data from a CSV file, transforms it into JSON format, filters the data based on specific criteria, and validates the final output against a predefined schema.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_8f26fe71",
      "task_type": "data_pipeline",
      "description": "Process unknown data through five tools: read, parse, transform, filter, and validate for unspecified output.",
      "inputs": {
        "source": "data/input.csv",
        "options": {
          "delimiter": ",",
          "has_header": true
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_transformer",
        "data_processing_filter",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:28:05.632172",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes raw data from a CSV file, transforms it into JSON format, filters it based on specified criteria, and validates the resulting dataset against a defined schema before outputting the final results.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_aa4e9ed8",
      "task_type": "data_pipeline",
      "description": "Process unknown input data using three tools: read, transform format, and filter results.",
      "inputs": {
        "source": "path/to/input_data.json",
        "options": {
          "transform": true,
          "filter": {
            "criteria": "specific_value"
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "filtered_data": {
          "key": "value"
        },
        "metadata": {
          "operation": "filtering",
          "timestamp": "2023-10-01T00:00:00Z"
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:37.178191",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes raw JSON data from a file, transforms it into XML format, and then filters the data based on specified criteria.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_79f52a8a",
      "task_type": "data_pipeline",
      "description": "Process unknown data through four tools: read, filter, transform, and validate to produce unspecified output.",
      "inputs": {
        "source": "path/to/input_data.csv",
        "options": {
          "filter_criteria": {
            "status": "active"
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_filter",
        "data_processing_transformer",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:39.665712",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes raw data from a CSV file, filters it based on specified criteria, transforms it to JSON format, and validates the final output against a predefined schema.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_474ffc64",
      "task_type": "data_pipeline",
      "description": "Process unknown input data through five tools to produce an unspecified output result.",
      "inputs": {
        "source": "data/input.csv",
        "options": {
          "transform": {
            "filter": "active"
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_transformer",
        "data_processing_filter",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:42.670881",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes raw data from a CSV file by parsing it, transforming it into JSON format, filtering out unnecessary data, and validating the final output against a predefined schema.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_f5cfc919",
      "task_type": "data_pipeline",
      "description": "Process unknown input data through four tools: read, transform, filter, and validate to produce unspecified output.",
      "inputs": {
        "source": "path/to/input_file.csv",
        "options": {
          "header": true,
          "na_filter": true
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "data_processing_filter",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:45.116671",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes raw data from a CSV file, transforms it into JSON format, filters specific entries based on criteria, and validates the final dataset against a predefined schema.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_fad28644",
      "task_type": "data_pipeline",
      "description": "Process unknown data through four tools: read, transform, filter, and validate to produce unspecified output.",
      "inputs": {
        "source": "data/input_file.csv",
        "options": {}
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "data_processing_filter",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:47.316784",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes raw data from a CSV file, transforms it into JSON format, filters the data based on specific criteria, and validates the output to ensure it meets a defined schema.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_176b8329",
      "task_type": "data_pipeline",
      "description": "Process unknown data through five tools: read, parse, filter, transform, and validate to produce unspecified output.",
      "inputs": {
        "source": "data/input.csv",
        "options": {
          "filterCriteria": {
            "column": "status",
            "value": "active"
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter",
        "data_processing_transformer",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:50.429642",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task involves processing raw CSV data by reading it, parsing it into a structured format, filtering the data based on specific criteria, transforming the structured data into JSON format, and then validating the final output against a predefined schema.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_8a96049c",
      "task_type": "data_pipeline",
      "description": "Process unknown data using four tools: read, parse, filter, and transform to produce unspecified output.",
      "inputs": {
        "source": "data/input_file.csv",
        "options": {
          "transformations": {
            "filter": {
              "criteria": "age > 30"
            }
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "transformed_data": {
          "type": "json",
          "data": [
            {
              "name": "John Doe",
              "age": 45
            },
            {
              "name": "Jane Smith",
              "age": 38
            }
          ]
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter",
        "data_processing_transformer"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:53.952465",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task involves reading raw data from a CSV file, parsing it into a structured format, filtering the data based on specific criteria, and then transforming the filtered data into JSON format for further analysis.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_7b42d133",
      "task_type": "data_pipeline",
      "description": "Process unknown data through five tools: read, parse, filter, transform, and validate for unspecified output.",
      "inputs": {
        "source": "path/to/input/data.csv",
        "options": {
          "filter": {
            "column": "status",
            "value": "active"
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter",
        "data_processing_transformer",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:56.834235",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This data processing pipeline reads raw data from a CSV file, parses it into a structured format, filters specific entries based on criteria, transforms the data into JSON format, and finally validates the output against a predefined schema.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_891282be",
      "task_type": "data_pipeline",
      "description": "Process unknown input data through four tools: read, transform, filter, and validate to produce unspecified output.",
      "inputs": {
        "source": "path/to/input_data.csv",
        "options": {
          "filter": {
            "column": "status",
            "value": "active"
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "data_processing_filter",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:28:00.590028",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This data processing pipeline reads raw data from a CSV file, transforms it into JSON format, filters the data based on specific criteria, and validates the resulting dataset against a predefined schema.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_832e6134",
      "task_type": "data_pipeline",
      "description": "Process unknown data through five tools: read, transform, filter, validate, and aggregate to produce unspecified output.",
      "inputs": {
        "source": "path/to/input_data.csv",
        "options": {
          "delimiter": ",",
          "header": true
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "aggregated_count": 100
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "data_processing_filter",
        "data_processing_validator",
        "data_processing_aggregator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:28:05.997386",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This data processing pipeline reads raw data from a CSV file, transforms it into a JSON format, filters the data based on specific criteria, validates the filtered data against a predefined schema, and finally aggregates the results for further analysis.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_0b866ad4",
      "task_type": "data_pipeline",
      "description": "Process unknown input data through four tools: read, transform, filter, and validate to produce unspecified output.",
      "inputs": {
        "source": "data/input.json",
        "options": {
          "transform": true,
          "filter": {
            "criteria": "active"
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "data_processing_filter",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:36.876013",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This data processing pipeline reads raw data from a JSON file, transforms it into XML format, filters the data based on specified criteria, and validates the transformed data against a defined schema, ensuring correctness before final output.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_018d2d1c",
      "task_type": "data_pipeline",
      "description": "Process unknown data using four tools: read, filter, transform, and validate to produce unspecified output.",
      "inputs": {
        "source": "path/to/raw_data.json",
        "options": {
          "filter_criteria": {
            "status": "active"
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": [],
        "metadata": {
          "total_records": 100,
          "valid_records": 95
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_filter",
        "data_processing_transformer",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:41.630778",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This data processing pipeline reads raw data from a JSON file, filters it based on specified criteria, transforms it into XML format, and validates it against a predefined schema before outputting the final results.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_7e9ae189",
      "task_type": "data_pipeline",
      "description": "Process unknown input data through four tools: read, parse, transform, and filter to produce unspecified output.",
      "inputs": {
        "source": "path/to/input/data.json",
        "options": {}
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "filtered_data_count": 100,
          "processing_time": "2 seconds"
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_transformer",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:43.673686",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes raw JSON data from a file, transforms it into XML format, and filters the transformed data based on specific criteria, ultimately providing the refined dataset.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_02d47f89",
      "task_type": "data_pipeline",
      "description": "Process unknown data through four tools: read, transform, filter, and validate to produce unspecified output.",
      "inputs": {
        "source": "path/to/input.csv",
        "options": {
          "delimiter": ",",
          "header": true
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "data_processing_filter",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:47.072419",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes raw data from a CSV file by reading, transforming it to JSON format, filtering based on specific criteria, and validating the final dataset against a schema.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_a7f5c23a",
      "task_type": "data_pipeline",
      "description": "Process unknown data through five steps: read, transform, filter, validate, and aggregate into unspecified output.",
      "inputs": {
        "source": "path/to/data.csv",
        "options": {
          "filter": {
            "column": "status",
            "value": "active"
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "processed_records": 100
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "data_processing_filter",
        "data_processing_validator",
        "data_processing_aggregator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:50.143621",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This data processing pipeline reads raw data from a CSV file, transforms it into JSON format, filters the data based on specified criteria, validates the cleaned data against a defined schema, and aggregates the results.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_78d4bce8",
      "task_type": "data_pipeline",
      "description": "Process unknown data using four tools: read, transform, filter, and validate to produce unspecified output.",
      "inputs": {
        "source": "data/input_file.csv",
        "options": {
          "filter": {
            "criteria": "column_name > 10"
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "data_processing_filter",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:53.008758",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes raw data from a CSV file, transforms it into JSON format, and filters the data based on specified criteria before validating its structure against a predefined schema.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_8214c835",
      "task_type": "data_pipeline",
      "description": "Process unknown input data through five tools to produce an unspecified output result.",
      "inputs": {
        "source": "path/to/input.csv",
        "options": {
          "delimiter": ",",
          "has_header": true
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": [],
        "metadata": {
          "execution_time": "some_time_here"
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_transformer",
        "data_processing_filter",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:55.638944",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes raw data from a CSV file, transforms it into JSON format, filters the data based on specific criteria, and then validates the output against a predefined schema.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_60f29dcf",
      "task_type": "data_pipeline",
      "description": "Process unknown data through five tools: read, transform, filter, validate, and aggregate to produce unspecified output.",
      "inputs": {
        "source": "path/to/input.csv",
        "options": {
          "delimiter": ",",
          "header": true
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "total_records": 100,
          "processed_time": "00:01:30"
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "data_processing_filter",
        "data_processing_validator",
        "data_processing_aggregator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:58.464758",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task is designed to read raw data from a CSV file, transform it into JSON format, filter the data based on specified criteria, validate the data against a predefined schema, and finally aggregate the results.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_539fa97e",
      "task_type": "data_pipeline",
      "description": "Process unknown data through four tools: read, parse, transform, and validate to produce unspecified output.",
      "inputs": {
        "source": "data/input.csv",
        "options": {
          "transform": true,
          "filter": {
            "criteria": "valid"
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_transformer",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:28:00.770603",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes raw data from a CSV file by reading, parsing, transforming, and validating it before outputting the final result in a structured format.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_f3dfcf5c",
      "task_type": "data_pipeline",
      "description": "Process unknown data through five tools: read, parse, transform, filter, and validate to generate unspecified output.",
      "inputs": {
        "source": "data/input_file.csv",
        "options": {
          "delimiter": ",",
          "skip_empty_lines": true
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_transformer",
        "data_processing_filter",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:28:06.059260",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This data processing pipeline reads data from a CSV file, parses it into a structured format, transforms it into JSON, filters the data based on specified criteria, and then validates the final output against a predefined schema.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_a923737e",
      "task_type": "data_pipeline",
      "description": "Process unknown data through four tools: read, transform, filter, and validate to produce unspecified output.",
      "inputs": {
        "source": "data/input_file.csv",
        "options": {
          "filter": {
            "column": "status",
            "value": "active"
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": [],
        "metadata": {}
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "data_processing_filter",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:37.286606",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task involves reading raw data from a CSV file, transforming it into JSON format, filtering it based on specific criteria, and validating the processed data against a predefined schema before outputting the results.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_fc92a9ce",
      "task_type": "data_pipeline",
      "description": "Process unknown data using four tools: read, filter, transform, and validate for unspecified output.",
      "inputs": {
        "source": "path/to/input/data.csv",
        "options": {
          "filter_criteria": {
            "column": "status",
            "value": "active"
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_filter",
        "data_processing_transformer",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:39.786372",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This data processing pipeline reads raw CSV data, filters it based on specific criteria, transforms it into JSON format, and validates the final output against a predefined schema.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_6b4deda0",
      "task_type": "data_pipeline",
      "description": "Process unknown data through five tools: read, parse, transform, filter, and validate for unspecified output.",
      "inputs": {
        "source": "path/to/raw_data.csv",
        "options": {
          "delimiter": ",",
          "header": true
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_transformer",
        "data_processing_filter",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:42.459738",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This data processing pipeline reads raw data from a CSV file, parses it into a structured format, transforms it into JSON, filters the data based on specific criteria, and finally validates the filtered data against a predefined schema.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_1c27def0",
      "task_type": "data_pipeline",
      "description": "Process unknown input data using four tools: read, filter, transform, and validate to produce unspecified output.",
      "inputs": {
        "source": "data/input_data.csv",
        "options": {
          "filter_criteria": {
            "age": ">30"
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_filter",
        "data_processing_transformer",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:44.930224",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes raw data from a CSV file, filters it based on specific criteria, transforms it into JSON format, and validates the final output against a predefined schema.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_b24b83e2",
      "task_type": "data_pipeline",
      "description": "Process unknown input data through four tools: read, transform, filter, and validate to produce unspecified output.",
      "inputs": {
        "source": "path/to/input_data.json",
        "options": {
          "filter": {
            "criteria": "specific_condition"
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "data_processing_filter",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:47.594104",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This data processing pipeline reads raw data from a JSON file, transforms it into an XML format, filters the data based on specified criteria, and validates the final output against a predefined schema.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_5d44e26b",
      "task_type": "data_pipeline",
      "description": "Process unknown data using four tools: read, transform, filter, and validate to produce unspecified output.",
      "inputs": {
        "source": "path/to/input/data.json",
        "options": {
          "filter": {
            "criteria": "specific_value"
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "data_processing_filter",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:50.985729",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes raw data by reading it from a JSON file, transforming its format to XML, filtering the data based on certain criteria, and then validating the final dataset against a predefined schema.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_4241d137",
      "task_type": "data_pipeline",
      "description": "Process unknown data using four tools: read, transform, filter, and validate for unspecified output.",
      "inputs": {
        "source": "data/input.csv",
        "options": {
          "filter": {
            "column": "status",
            "value": "active"
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": [],
        "metadata": {}
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "data_processing_filter",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:54.368941",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task establishes a data processing pipeline that reads raw data from a CSV file, transforms it into JSON format, filters the data based on specific criteria, and validates the output to ensure data integrity.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_51cf4959",
      "task_type": "data_pipeline",
      "description": "Process unknown input data through four tools: read, transform, filter, and aggregate for unspecified output.",
      "inputs": {
        "source": "data/input.csv",
        "options": {
          "transform": true,
          "filter": {
            "criteria": "value > 100"
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "records_processed": 50,
          "aggregated_value": 5000
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "data_processing_filter",
        "data_processing_aggregator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:57.186498",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task involves reading raw data from a CSV file, transforming it into JSON format, filtering the data based on specific criteria, and finally aggregating the results for analysis.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_8ac6b837",
      "task_type": "data_pipeline",
      "description": "Process unknown data using four tools: read, transform, filter, and validate for unspecified output.",
      "inputs": {
        "source": "path/to/input_data.csv",
        "options": {
          "filter": {
            "column": "status",
            "value": "active"
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "data_processing_filter",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:28:00.946920",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes raw data from a CSV file, transforms it into JSON format, filters the data based on specific criteria, and validates the final output against a given schema.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_9f3e1b68",
      "task_type": "data_pipeline",
      "description": "Process unknown data through five tools: read, transform, filter, validate, and aggregate for unspecified output.",
      "inputs": {
        "source": "path/to/input/data.csv",
        "options": {
          "delimiter": ",",
          "has_header": true
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "processed_records": 100,
          "valid_records": 90
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "data_processing_filter",
        "data_processing_validator",
        "data_processing_aggregator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:28:06.177385",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task is designed to read raw data from a CSV file, transform it into JSON format, filter the data based on specific criteria, validate the data against a defined schema, and finally aggregate the valid data for further analysis.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_c3c04f7d",
      "task_type": "data_pipeline",
      "description": "Process unknown data through five tools: read, parse, filter, transform, and validate to produce unspecified results.",
      "inputs": {
        "source": "path/to/input/data.csv",
        "options": {
          "filter": {
            "criteria": "relevant_column > threshold_value"
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter",
        "data_processing_transformer",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:37.676178",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes raw CSV data by reading it, parsing it into a structured format, filtering the relevant entries, transforming it into JSON format, and then validating the structured data against a predefined schema.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_9d7b9c3c",
      "task_type": "data_pipeline",
      "description": "Process unknown data through five tools: read, parse, transform, filter, and validate to produce unspecified output.",
      "inputs": {
        "source": "data/input_file.csv",
        "options": {
          "delimiter": ",",
          "header": true
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_transformer",
        "data_processing_filter",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:40.226337",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes raw data by reading it from a source, parsing it into a structured format, transforming it into a desired format, filtering it based on specific criteria, and finally validating the structured data against a predefined schema.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_0211b043",
      "task_type": "data_pipeline",
      "description": "Process unknown data through four tools: read, transform, filter, and validate to produce unspecified output.",
      "inputs": {
        "source": "path/to/input/data.csv",
        "options": {
          "filter": {
            "column": "status",
            "value": "active"
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": [],
        "metadata": {
          "validation_time": "2023-10-01T12:00:00Z"
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "data_processing_filter",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:43.649921",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This data processing pipeline reads data from a CSV file, transforms the data into JSON format, filters the data based on certain criteria, and finally validates the processed data against a predefined schema.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_26782d01",
      "task_type": "data_pipeline",
      "description": "Process unknown data using four tools: read, transform, filter, and validate to produce unspecified output.",
      "inputs": {
        "source": "path/to/input_data.csv",
        "options": {
          "filter": true
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "data_processing_filter",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:46.913804",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes raw data from a CSV file, transforms it into JSON format, filters the dataset based on specified criteria, and validates the final output against a defined schema to ensure data integrity.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_8eb573f8",
      "task_type": "data_pipeline",
      "description": "Process unknown input data through five tools to produce an unspecified output result.",
      "inputs": {
        "source": "path/to/input/data.csv",
        "options": {
          "filter": {
            "column": "status",
            "value": "active"
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": [],
        "metadata": {}
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_transformer",
        "data_processing_filter",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:49.668230",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes raw data by reading it from a CSV file, parsing it into a structured format, transforming it into JSON, filtering the data based on specific criteria, and then validating the final output against a predefined schema.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_192b9120",
      "task_type": "data_pipeline",
      "description": "Process unknown data through five tools to produce an unspecified output format with zero fields.",
      "inputs": {
        "source": "path/to/input_data.csv",
        "options": {
          "filter": "criteria_for_reading"
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "total_records": 100,
          "valid_records": 95
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_transformer",
        "data_processing_validator",
        "data_processing_aggregator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:53.485209",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes raw data from a CSV file by reading, parsing, transforming, and validating it before aggregating the results. The pipeline ensures that the data is structured, converted to the desired format, validated for correctness, and then aggregated for final output.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_9f529156",
      "task_type": "data_pipeline",
      "description": "Process unknown data using four tools: read, transform, filter, and validate to produce unspecified results.",
      "inputs": {
        "source": "data/input.csv",
        "options": {
          "filter": {
            "column": "status",
            "value": "active"
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "data_processing_filter",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:56.122982",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task is designed to read raw data from a CSV file, transform it into JSON format, filter the data based on specific criteria, and then validate the final dataset against a predefined schema.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_17fdfb2e",
      "task_type": "data_pipeline",
      "description": "Process unknown data through four tools: read, transform, filter, and validate to produce unspecified output.",
      "inputs": {
        "source": "path/to/input.csv",
        "options": {
          "delimiter": ",",
          "header": true
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "data_processing_filter",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:58.406242",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This data processing pipeline reads raw CSV data, transforms it into JSON format, filters the data based on specified criteria, and validates the final output against a predefined schema.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_b1d50f80",
      "task_type": "data_pipeline",
      "description": "Process unknown data using four tools: read, transform, filter, and validate to produce unspecified output.",
      "inputs": {
        "source": "path/to/input/data.csv",
        "options": {
          "filter": {
            "criteria": "specific_condition"
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "data_processing_filter",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:28:01.046710",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes raw data from a CSV file by reading it, transforming it into JSON format, filtering specific records, and validating the final dataset against a schema.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_fbff1efc",
      "task_type": "data_pipeline",
      "description": "Process unknown data through five tools: read, parse, transform, filter, and validate to produce unspecified output.",
      "inputs": {
        "source": "data/input.csv",
        "options": {
          "filter": "active"
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_transformer",
        "data_processing_filter",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:28:06.268565",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes raw data by reading from a CSV file, parsing the data into a structured format, transforming it to JSON format, filtering based on specific criteria, and validating the final output against a defined schema.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_8604890b",
      "task_type": "basic_task",
      "description": "Read the input data, parse it, and filter the results to generate the final output.",
      "inputs": {
        "source": "path/to/input_data.csv",
        "options": {
          "delimiter": ",",
          "header": true
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "filtered_count": 100
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-10T04:27:38.944383",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task reads data from a CSV file, parses it into a structured format, and then filters the data based on specified criteria to produce a refined dataset.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_7f53e67f",
      "task_type": "basic_task",
      "description": "Read the input data, parse it, and filter the results to produce the final output.",
      "inputs": {
        "source": "path/to/data.csv",
        "options": {
          "transform": {
            "filter_column": "status",
            "filter_value": "active"
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "filtered_count": 150,
          "original_count": 200
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-10T04:27:41.752843",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task reads raw data from a CSV file, parses it into a structured format, and then filters the data based on specified criteria to obtain a refined dataset.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_7f93d61a",
      "task_type": "basic_task",
      "description": "Read unknown data, parse it, filter relevant parts, and validate the final output.",
      "inputs": {
        "source": "path/to/input_file.csv",
        "options": {
          "delimiter": ",",
          "has_header": true
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-10T04:27:44.737861",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task reads data from a CSV file, parses the raw data into a structured format, filters the data based on specific criteria, and validates the filtered data against a predefined schema.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_f605e067",
      "task_type": "basic_task",
      "description": "Read input data, parse it for structure, and filter results for output generation.",
      "inputs": {
        "source": "path/to/data.csv",
        "options": {
          "delimiter": ",",
          "has_header": true
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "filtered_count": 100
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-10T04:27:47.011311",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task involves reading data from a CSV file, parsing it into a structured format, and filtering the parsed data based on specific criteria.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_295d4d23",
      "task_type": "basic_task",
      "description": "Read unknown data, parse it, and filter results to produce an unspecified output.",
      "inputs": {
        "source": "path/to/user_data.csv",
        "options": {
          "filter": {
            "age": ">30"
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "filtered_count": 150
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-10T04:27:49.974897",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes a CSV file containing user data by reading it, parsing it into a structured format, and then filtering the data based on specified criteria to extract relevant user information.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_c4d853a5",
      "task_type": "basic_task",
      "description": "Read the input data, parse it, filter it, and validate the output result.",
      "inputs": {
        "source": "user_data.csv",
        "options": {
          "delimiter": ",",
          "encoding": "utf-8"
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-10T04:27:52.623766",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes a CSV file containing user data. It reads the file, parses the data into a structured format, filters the data based on specific criteria, and validates the final output against a predefined schema.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_35429342",
      "task_type": "basic_task",
      "description": "Read input data, parse it for structure, and filter results to produce the final output.",
      "inputs": {
        "source": "path/to/data.csv",
        "options": {
          "delimiter": ",",
          "header": true
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "filtered_count": 50
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-10T04:27:55.646884",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task reads a CSV file containing raw data, parses the data into a structured format, and then filters the data based on specified criteria.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_20840c55",
      "task_type": "basic_task",
      "description": "Read the input file, parse the data, and filter the results for output.",
      "inputs": {
        "source": "path/to/data.csv",
        "options": {
          "filter": {
            "column": "status",
            "value": "active"
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "filtered_count": 100
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-10T04:27:57.659944",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task reads data from a CSV file, parses it into a structured format, and then filters the data based on specified criteria.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_7568ba55",
      "task_type": "basic_task",
      "description": "Read the input data, filter it, and parse the result into a new format.",
      "inputs": {
        "source": "path/to/user_data.csv",
        "options": {
          "filter_criteria": {
            "age": ">30",
            "status": "active"
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "data": [
          {
            "name": "John Doe",
            "age": 35,
            "status": "active"
          },
          {
            "name": "Jane Smith",
            "age": 40,
            "status": "active"
          }
        ],
        "metadata": {
          "record_count": 2,
          "processing_time": "200ms"
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_filter",
        "data_processing_parser"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-10T04:28:03.184262",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes a CSV file containing user data, filters it based on certain criteria, and outputs the filtered data in a structured format.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_0c8f8846",
      "task_type": "basic_task",
      "description": "Read the input data, parse it, and filter the results to produce the final output.",
      "inputs": {
        "source": "path/to/data.csv",
        "options": {
          "filter": {
            "column": "status",
            "value": "active"
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "record_count": 100,
          "filtered_count": 50
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-10T04:28:06.369377",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task reads data from a CSV file, parses it into a structured format, and filters the data based on specified criteria.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_b267629f",
      "task_type": "data_pipeline",
      "description": "Process unknown data using four tools: read, transform, filter, and validate to produce an unspecified result.",
      "inputs": {
        "source": "data/input_file.csv",
        "options": {
          "filter": {
            "column": "status",
            "value": "active"
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "data_processing_filter",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:37.593143",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This data processing pipeline reads raw data from a CSV file, transforms it into JSON format, filters the data based on specific criteria, and validates the resulting dataset against a predefined schema.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_0ecfd670",
      "task_type": "data_pipeline",
      "description": "Process unknown input data through five tools to produce an unspecified output result.",
      "inputs": {
        "source": "path/to/data.csv",
        "options": {
          "delimiter": ",",
          "header": true
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_transformer",
        "data_processing_filter",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:40.027727",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes raw data from a CSV file, transforms it into JSON format, filters the data based on specified criteria, and validates it against a predefined schema.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_93cef62e",
      "task_type": "data_pipeline",
      "description": "Process unknown data through five tools: read, parse, transform, filter, and validate for unspecified output.",
      "inputs": {
        "source": "path/to/data.csv",
        "options": {
          "filter": true,
          "transform": false
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_transformer",
        "data_processing_filter",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:43.148616",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes raw data from a CSV file, transforms it into JSON format, filters the data based on specified criteria, and validates the final dataset against a defined schema.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_9451ceb9",
      "task_type": "data_pipeline",
      "description": "Process unknown data using five tools: read, parse, transform, filter, and aggregate to produce unspecified output.",
      "inputs": {
        "source": "data/input_file.csv",
        "options": {
          "filter": {
            "column": "status",
            "value": "active"
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "row_count": 100,
          "processed_timestamp": "2023-10-01T12:00:00Z"
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_transformer",
        "data_processing_filter",
        "data_processing_aggregator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:46.195003",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task implements a data processing pipeline that reads raw data from a CSV file, parses it into a structured format, applies transformations, and filters the data based on specific criteria before aggregating the results.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_d648d42a",
      "task_type": "data_pipeline",
      "description": "Process unknown data through four tools: read, transform, filter, and validate for unspecified output.",
      "inputs": {
        "source": "data/raw_data.json",
        "options": {
          "transformations": {
            "filter": {
              "criteria": {
                "status": "active"
              }
            }
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "data_processing_filter",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:49.091753",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task implements a data processing pipeline that reads raw data from a JSON file, transforms it into a CSV format, filters the data based on specific criteria, and finally validates the processed data against a defined schema.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:38"
    },
    {
      "instance_id": "task_ab2c3d65",
      "task_type": "data_pipeline",
      "description": "Process unknown data through four tools: read, transform, filter, and validate to produce unspecified output.",
      "inputs": {
        "source": "path/to/input_data.csv",
        "options": {
          "filter": true,
          "delimiter": ","
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "data_processing_filter",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:52.007726",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This data processing pipeline reads raw data from a CSV file, transforms it into JSON format, filters the data based on specific criteria, and validates the final output against a predefined schema.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_f2f8bd7f",
      "task_type": "data_pipeline",
      "description": "Process unknown data using four tools: read, parse, transform, and validate to produce unspecified results.",
      "inputs": {
        "source": "path/to/input/data.csv",
        "options": {
          "filter": {
            "column": "status",
            "value": "active"
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_transformer",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:55.179301",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task involves reading raw data from a CSV file, parsing it into a structured format, transforming it to JSON, and validating the final output against a predefined schema to ensure data integrity.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_82802ed0",
      "task_type": "data_pipeline",
      "description": "Process unknown data through four tools: parse, transform, filter, and validate, producing an unspecified result.",
      "inputs": {
        "source": "path/to/raw_data.csv",
        "options": {
          "error_handling": true
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "data_processing_parser",
        "data_processing_transformer",
        "data_processing_filter",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:57.580093",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes raw CSV data by parsing it, transforming it into JSON format, filtering relevant entries, and validating the final output against a predefined schema.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_56fb9d36",
      "task_type": "data_pipeline",
      "description": "Process unknown data through five tools: read, parse, transform, filter, and validate to produce unspecified output.",
      "inputs": {
        "source": "path/to/input_data.csv",
        "options": {
          "filter": {
            "column": "status",
            "value": "active"
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_transformer",
        "data_processing_filter",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:28:00.746475",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes raw data from a CSV file, transforms it into JSON format, filters the data based on specified criteria, and validates the resulting dataset against a predefined schema.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_bb2fc11e",
      "task_type": "data_pipeline",
      "description": "Process unknown data through five tools: read, transform, filter, validate, and aggregate to produce unspecified output.",
      "inputs": {
        "source": "data/raw_data.csv",
        "options": {
          "filter": {
            "criteria": "active"
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "total_records": 100,
          "valid_records": 95
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "data_processing_filter",
        "data_processing_validator",
        "data_processing_aggregator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:28:06.445486",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task is designed to read raw data from a CSV file, transform it into JSON format, filter specific records based on criteria, validate the data against a predefined schema, and finally aggregate the results.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_30fbef8d",
      "task_type": "multi_stage_pipeline",
      "description": "Process unknown input data through five tools to produce an unspecified output format.",
      "inputs": {
        "source": "data/input_file.csv",
        "options": {}
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "write_time": "2023-10-15T10:00:00Z"
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_validator",
        "data_processing_transformer",
        "computation_analyzer",
        "file_operations_writer"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "hard",
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-10T04:27:36.592115",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task involves processing raw data from a CSV file, validating it against a predefined schema, transforming it into JSON format, analyzing the computational results, and finally writing the analyzed output to a file.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_2fadd0ea",
      "task_type": "multi_stage_pipeline",
      "description": "Process unknown input data through five tools to produce an unspecified output result.",
      "inputs": {
        "source": "path/to/input_file.csv",
        "options": {}
      },
      "expected_outputs": {
        "success": true,
        "transformed_data": {
          "data": "Sample transformed data"
        },
        "metadata": {
          "info": "Transformation completed successfully"
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_validator",
        "data_processing_filter",
        "data_processing_transformer"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "hard",
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-10T04:27:39.358965",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This multi-stage pipeline is designed to read raw data from a file, parse it into a structured format, validate the parsed data against a schema, apply filtering criteria, and finally transform the validated and filtered data into a different format for further analysis.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_212461a8",
      "task_type": "multi_stage_pipeline",
      "description": "Process unknown data through four tools: parse, transform, analyze, and write to output format.",
      "inputs": {
        "source": "path/to/raw/data.csv",
        "options": {
          "error_handling": "strict"
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "file_written": "path/to/output/results.json"
        }
      },
      "required_tools": [
        "data_processing_parser",
        "data_processing_transformer",
        "computation_analyzer",
        "file_operations_writer"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "hard",
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-10T04:27:41.972158",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This multi-stage pipeline processes raw data from various sources, transforms it into a structured format, analyzes the data for statistical insights, and finally writes the results to a specified output file.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_5dee7f58",
      "task_type": "multi_stage_pipeline",
      "description": "Process unknown input data through four tools to produce an unspecified output result.",
      "inputs": {
        "source": "data/input_file.json",
        "options": {}
      },
      "expected_outputs": {
        "success": true,
        "result": {
          "statistical_insights": "mean: 50, median: 45, mode: 40"
        },
        "metadata": {
          "execution_time": "2 seconds",
          "tool_used": "computation_analyzer"
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_validator",
        "data_processing_transformer",
        "computation_analyzer"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "hard",
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-10T04:27:45.125362",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This multi-stage pipeline processes raw data from a file, validates it, transforms its format, and finally performs computation analysis on the transformed data.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_71291afe",
      "task_type": "multi_stage_pipeline",
      "description": "Process unknown data through five tools to produce an unspecified output format.",
      "inputs": {
        "source": "data/input_data.csv",
        "options": {}
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "records_written": 150
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_filter",
        "data_processing_validator",
        "data_processing_aggregator",
        "file_operations_writer"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "hard",
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-10T04:27:47.877509",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This multi-stage pipeline processes raw data from a CSV file, filters it based on specific criteria, validates it against a schema, and then aggregates the results before writing them to a JSON file.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_fd5568ed",
      "task_type": "multi_stage_pipeline",
      "description": "Process unknown input data through five tools to produce an unspecified output result.",
      "inputs": {
        "source": "data/input.csv",
        "options": {}
      },
      "expected_outputs": {
        "success": true,
        "result": {
          "insights": "Statistical insights generated from the filtered data."
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "data_processing_filter",
        "data_processing_validator",
        "computation_analyzer"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "hard",
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-10T04:27:50.749653",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This multi-stage pipeline processes raw data from a CSV file, transforms it into JSON format, filters it based on specific criteria, and then validates the filtered data against a predefined schema. Finally, it analyzes the valid data to generate statistical insights.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_cbf953c1",
      "task_type": "multi_stage_pipeline",
      "description": "Process unknown input data through four tools to produce an unspecified output result.",
      "inputs": {
        "source": "path/to/input/data.csv",
        "schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer"
            },
            "name": {
              "type": "string"
            },
            "value": {
              "type": "number"
            }
          },
          "required": [
            "id",
            "name",
            "value"
          ]
        },
        "data": null
      },
      "expected_outputs": {
        "success": true,
        "result": {
          "insight": "Average value: 150",
          "trend": "Increasing over time"
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_validator",
        "data_processing_transformer",
        "computation_analyzer"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "hard",
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-10T04:27:54.315873",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task is designed to read raw data from a CSV file, validate it against a predefined schema, transform the valid data into JSON format, and finally analyze the computation results to generate insights.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_463a19f6",
      "task_type": "multi_stage_pipeline",
      "description": "Process unknown input data through six tools to produce an unspecified output result.",
      "inputs": {
        "source": "path/to/input_data.json",
        "options": {}
      },
      "expected_outputs": {
        "success": true,
        "result": {
          "insights": "Statistical analysis results",
          "trends": "Identified trends in the data"
        },
        "metadata": {}
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_validator",
        "data_processing_filter",
        "data_processing_transformer",
        "computation_analyzer"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "hard",
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-10T04:27:57.945551",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task involves reading raw data from a file, parsing it into a structured format, validating the data against a predefined schema, filtering the valid data based on specific criteria, transforming the filtered data into a different format, and finally performing an analysis on the transformed data to generate insights.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_f93f4e57",
      "task_type": "multi_stage_pipeline",
      "description": "Process unknown data through five tools: read, validate, filter, transform, and analyze for insights.",
      "inputs": {
        "source": "data/input_data.csv",
        "options": {
          "delimiter": ",",
          "header": true
        }
      },
      "expected_outputs": {
        "success": true,
        "result": {
          "insights": "Statistical analysis results of the transformed data"
        },
        "metadata": {
          "execution_time": "150ms"
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_validator",
        "data_processing_filter",
        "data_processing_transformer",
        "computation_analyzer"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "hard",
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-10T04:28:00.886826",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This multi-stage pipeline processes raw data from a CSV file, validates it against a schema, filters out unnecessary data, transforms the remaining data into JSON format, and finally analyzes the computation results to generate insights.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_9f86840c",
      "task_type": "multi_stage_pipeline",
      "description": "Process unknown input data through five tools to produce an unspecified output result.",
      "inputs": {
        "source": "data/input_file.csv",
        "options": {}
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": [],
        "metadata": {
          "validation_time": "2023-10-01T12:00:00Z"
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter",
        "data_processing_transformer",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "hard",
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-10T04:28:06.637799",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task involves reading raw data from a CSV file, parsing it into a structured format, filtering the data based on specific criteria, transforming it into JSON format, and then validating the transformed data against a predefined schema.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_315a19cb",
      "task_type": "data_pipeline",
      "description": "Process unknown data through four tools: read, parse, transform, and validate to produce unspecified output.",
      "inputs": {
        "source": "data/input_file.csv",
        "options": {
          "filter": "active"
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_transformer",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:36.685436",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes data by reading raw data from a source file, parsing it into a structured format, transforming it to a desired output format, and then validating the final output against a predefined schema.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_055135e1",
      "task_type": "data_pipeline",
      "description": "Process unknown input data through four tools: read, transform, filter, and validate for unspecified output.",
      "inputs": {
        "source": "data/input_file.csv",
        "options": {
          "filter": {
            "column": "status",
            "value": "active"
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "data_processing_filter",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:39.885189",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes raw data from a CSV file, transforms it into JSON format, filters the data based on specified criteria, and validates the final output against a predefined schema.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_bc03c0f8",
      "task_type": "data_pipeline",
      "description": "Process unknown data using three tools: read, filter, and transform to an unspecified format.",
      "inputs": {
        "source": "path/to/input/data.csv",
        "options": {
          "filterCriteria": {
            "column": "status",
            "value": "active"
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "transformed_data": {
          "type": "application/json",
          "content": [
            {
              "id": 1,
              "name": "John Doe",
              "status": "active"
            },
            {
              "id": 2,
              "name": "Jane Smith",
              "status": "active"
            }
          ]
        },
        "metadata": {
          "operation": "Data Transformation",
          "timestamp": "2023-10-01T12:00:00Z"
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_filter",
        "data_processing_transformer"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:44.774320",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes raw data from a CSV file, filtering and transforming it into a structured JSON format for further analysis.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_57435732",
      "task_type": "data_pipeline",
      "description": "Process unknown data using four tools: read, transform, filter, and validate for unspecified output.",
      "inputs": {
        "source": "data/input.csv",
        "options": {
          "transform": true,
          "filter": {
            "criteria": {
              "status": "active"
            }
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "data_processing_filter",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:47.461705",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes raw data from a CSV file, transforms it into JSON format, and then filters the data based on specified criteria before validating its integrity against a defined schema.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_e1f341fa",
      "task_type": "data_pipeline",
      "description": "Process unknown input data through five tools to produce an unspecified output result.",
      "inputs": {
        "source": "path/to/input/data.json",
        "options": {
          "filter": {
            "criteria": {
              "status": "active"
            }
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_transformer",
        "data_processing_filter",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:50.503593",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes raw data by reading it from a JSON file, parsing it into a structured format, transforming it to XML format, filtering based on specific criteria, and finally validating the transformed data against a predefined schema.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_37a518f9",
      "task_type": "data_pipeline",
      "description": "Process unknown data through five tools: read, parse, transform, filter, and validate to produce unspecified output.",
      "inputs": {
        "source": "path/to/input_data.csv",
        "options": {
          "filter": "active"
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_transformer",
        "data_processing_filter",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:53.658264",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task involves reading raw data from a CSV file, parsing it into a structured format, transforming it into JSON format, filtering the data based on specific criteria, and finally validating the processed data against a predefined schema.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_d5a70dd0",
      "task_type": "data_pipeline",
      "description": "Process unknown input data through four tools to produce an unspecified output result.",
      "inputs": {
        "source": "data/input.csv",
        "options": {
          "filter": {
            "column": "status",
            "value": "active"
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_transformer",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:56.680093",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This data processing pipeline reads raw data from a CSV file, parses it into a structured format, transforms the data into JSON format, and then validates the transformed data against a defined schema to ensure its correctness and integrity.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_f4c4f9c5",
      "task_type": "data_pipeline",
      "description": "Process unknown data through five tools: read, parse, transform, filter, and validate to produce unspecified output.",
      "inputs": {
        "source": "path/to/input/data.csv",
        "options": {
          "filter": "active"
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_transformer",
        "data_processing_filter",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:59.183626",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes raw data by reading it from a CSV file, parsing it into a structured format, transforming the data into JSON format, filtering the data based on specified criteria, and validating the final output against a predefined schema.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_f1a786f8",
      "task_type": "data_pipeline",
      "description": "Process unknown input data through four tools: read, filter, transform, and validate to produce unspecified output.",
      "inputs": {
        "source": "path/to/input/data.csv",
        "options": {
          "filter_criteria": {
            "column": "status",
            "value": "active"
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_filter",
        "data_processing_transformer",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:28:03.589556",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes raw data from a CSV file by reading it, filtering based on certain criteria, transforming it into JSON format, and then validating the final output against a predefined schema.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_06405ed8",
      "task_type": "data_pipeline",
      "description": "Process unknown data using four tools: read, transform, filter, and validate to produce unspecified output.",
      "inputs": {
        "source": "path/to/input_file.csv",
        "options": {
          "filter": {
            "column": "status",
            "value": "active"
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "data_processing_filter",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:28:06.866678",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This data processing pipeline reads raw data from a CSV file, transforms it into JSON format, filters the data based on specified criteria, and validates the final output against a predefined schema.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_a929b863",
      "task_type": "basic_task",
      "description": "Read the input data, parse it, and filter the results to produce the final output.",
      "inputs": {
        "source": "data/input_file.csv",
        "options": {
          "delimiter": ",",
          "header": true
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "filtered_count": 100
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-10T04:27:37.083668",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task reads data from a CSV file, parses it into a structured format, and then filters the data based on specified criteria to produce a refined dataset.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_0dfac491",
      "task_type": "basic_task",
      "description": "Read the input data, parse it, and filter the results for the final output.",
      "inputs": {
        "source": "path/to/sales_data.csv",
        "options": {
          "filter": {
            "column": "sales_amount",
            "threshold": 1000
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "filtered_data": [
          {
            "transaction_id": 1,
            "sales_amount": 1500
          },
          {
            "transaction_id": 2,
            "sales_amount": 2000
          }
        ],
        "metadata": {
          "record_count": 2
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-10T04:27:40.229734",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task involves reading a CSV file containing sales data, parsing the raw data into a structured format, and filtering the data to only include sales above a certain threshold.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_15d2fe5f",
      "task_type": "basic_task",
      "description": "Read the input data, parse it, and filter the results to produce the final output.",
      "inputs": {
        "source": "path/to/user_data.csv",
        "options": {
          "transform": {
            "filter": {
              "age": ">18"
            }
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "data": [
          {
            "name": "John Doe",
            "age": 25
          },
          {
            "name": "Jane Smith",
            "age": 30
          }
        ],
        "metadata": {
          "record_count": 2,
          "filter_criteria": "age > 18"
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-10T04:27:44.024661",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes a CSV file containing user data by reading the file, parsing it into a structured format, and then filtering the data based on specified criteria (e.g., age greater than 18).",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_00445d95",
      "task_type": "basic_task",
      "description": "Read the input data, parse it, and filter the results to produce the final output.",
      "inputs": {
        "source": "path/to/sales_data.csv",
        "options": {
          "filter": {
            "min_sales": 1000,
            "region": "North"
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "filtered_count": 50,
          "timestamp": "2023-10-01T12:00:00Z"
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-10T04:27:46.942515",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task involves reading a CSV file containing raw sales data, parsing it into a structured format, and filtering the data to retrieve only the entries that meet specific sales criteria.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_515073be",
      "task_type": "basic_task",
      "description": "Read the input data, parse it, and filter the results to produce the final output.",
      "inputs": {
        "source": "path/to/user_data.csv",
        "options": {
          "filter": {
            "age": {
              "greater_than": 18
            }
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "data": [
          {
            "name": "John Doe",
            "age": 25
          },
          {
            "name": "Jane Smith",
            "age": 30
          }
        ],
        "metadata": {
          "record_count": 2
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-10T04:27:50.455886",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes a CSV file containing user data. It reads the data, parses it into a structured format, and filters the dataset to include only users above the age of 18.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_0f3dcbf1",
      "task_type": "basic_task",
      "description": "Read the input data, parse it, and filter the results to produce the final output.",
      "inputs": {
        "source": "path/to/user_data.csv",
        "options": {
          "delimiter": ",",
          "header": true
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "filtered_count": 100,
          "criteria": "age > 18 and status = 'active'"
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-10T04:27:53.758409",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task reads a CSV file containing user information, parses the data into a structured format, and then filters the users based on specific criteria such as age and status.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_7d499917",
      "task_type": "basic_task",
      "description": "Read unknown data, parse it, and filter the results to produce an unspecified output.",
      "inputs": {
        "source": "path/to/user_data.csv",
        "options": {
          "delimiter": ",",
          "encoding": "utf-8"
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "filtered_count": 50,
          "criteria": {
            "age": ">30",
            "location": "New York"
          }
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-10T04:27:56.330466",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task involves reading a CSV file containing user data, parsing the data into a structured format, and then filtering the data based on specific criteria such as age and location. The final output will be a refined dataset of users that meet the specified criteria.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_226f72d3",
      "task_type": "basic_task",
      "description": "Read input data, parse it for structure, and filter results to produce the final output.",
      "inputs": {
        "source": "path/to/user_data.csv",
        "options": {
          "filter": {
            "country": "USA"
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "filtered_count": 150
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-10T04:27:58.432515",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes a CSV file containing user information by reading the data, parsing it into a structured format, and then filtering the dataset to include only users from a specific country.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_4babb86f",
      "task_type": "basic_task",
      "description": "Read the input data, parse it, and filter the results for the final output.",
      "inputs": {
        "source": "data/input.csv",
        "options": {
          "transform": {
            "filter_criteria": {
              "age": ">30"
            }
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "filtered_count": 10
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-10T04:28:03.309488",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task reads data from a CSV file, parses it into a structured format, and then filters the parsed data based on specified criteria.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_3cf206a8",
      "task_type": "basic_task",
      "description": "Read the input data, parse it, and filter the results for the final output.",
      "inputs": {
        "source": "path/to/sales_data.csv",
        "options": {
          "filter": {
            "columns": [
              "sales_amount"
            ],
            "threshold": 1000
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "data": [
          {
            "id": 1,
            "product": "A",
            "sales_amount": 1500
          },
          {
            "id": 2,
            "product": "B",
            "sales_amount": 2000
          }
        ],
        "metadata": {
          "record_count": 2,
          "filtered_columns": [
            "id",
            "product",
            "sales_amount"
          ]
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-10T04:28:06.889895",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task reads a CSV file containing raw sales data, parses it into a structured format, and then filters the data based on specified sales thresholds to identify profitable sales records.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_3415a657",
      "task_type": "data_pipeline",
      "description": "Process unknown data through five tools: read, transform, filter, validate, and aggregate for unspecified output.",
      "inputs": {
        "source": "path/to/input.csv",
        "options": {
          "transform": true,
          "filter": {
            "criteria": "value > 10"
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "aggregated_count": 100,
          "timestamp": "2023-10-01T12:00:00Z"
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "data_processing_filter",
        "data_processing_validator",
        "data_processing_aggregator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:37.767242",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This data processing pipeline reads raw CSV data, transforms it into JSON format, filters the data based on specified criteria, validates the filtered data against a schema, and finally aggregates the valid data.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_41dee54b",
      "task_type": "data_pipeline",
      "description": "Process unknown data using four tools: read, filter, transform, and validate for unspecified output.",
      "inputs": {
        "source": "path/to/input.csv",
        "options": {
          "filter_criteria": {
            "status": "active"
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_filter",
        "data_processing_transformer",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:40.356375",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes raw CSV data by reading it, filtering out irrelevant records, transforming it into JSON format, and then validating the structured data against a predefined schema.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_42d5ee3c",
      "task_type": "data_pipeline",
      "description": "Process unknown data through four tools: read, transform, filter, and validate for unspecified output.",
      "inputs": {
        "source": "path/to/input/data.json",
        "options": {
          "filter": "specific_conditions"
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "data_processing_filter",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:43.574966",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This data processing pipeline reads raw data from a JSON file, transforms it into a different format, filters specific entries based on defined criteria, and validates the final output against a schema before providing the results.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_949b70ec",
      "task_type": "data_pipeline",
      "description": "Process unknown data through five tools: read, parse, transform, filter, and validate to generate unspecified output.",
      "inputs": {
        "source": "path/to/input/data.csv",
        "options": {}
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_transformer",
        "data_processing_filter",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:46.178069",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task involves reading raw data from a CSV file, parsing it into a structured format, transforming it into JSON format, filtering the data based on specific criteria, and finally validating the transformed data against a defined schema.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_2a132321",
      "task_type": "data_pipeline",
      "description": "Process unknown data using four tools: read, filter, transform, and validate for unspecified output.",
      "inputs": {
        "source": "path/to/input/data.csv",
        "options": {
          "filter_criteria": {
            "column": "status",
            "value": "active"
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_filter",
        "data_processing_transformer",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:49.458773",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task involves reading raw data from a CSV file, filtering it based on specific criteria, transforming the filtered data into JSON format, and validating the final output against a predefined schema.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_c2c5cae0",
      "task_type": "data_pipeline",
      "description": "Process unknown data through four tools: read, transform, filter, and validate for unspecified output.",
      "inputs": {
        "source": "path/to/input_data.csv",
        "options": {
          "filter": {
            "criteria": "some_criteria"
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "data_processing_filter",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:52.096940",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes raw data from a CSV file by reading it, transforming it into JSON format, filtering specific records, and validating the final data against a predefined schema.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_7e0987bb",
      "task_type": "data_pipeline",
      "description": "Process unknown data using four tools: read, transform, filter, and validate for unspecified output.",
      "inputs": {
        "source": "path/to/input/data.csv",
        "options": {
          "delimiter": ",",
          "include_header": true
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "data_processing_filter",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:54.975984",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This data processing pipeline reads raw CSV data from a file, transforms it into JSON format, filters the data based on specific criteria, and validates the final output against a predefined schema.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_0d1293ce",
      "task_type": "data_pipeline",
      "description": "Process unknown input data through five tools to produce an unspecified output format.",
      "inputs": {
        "source": "data/input_file.csv",
        "options": {
          "filter": {
            "criteria": "specific_value"
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "operation": "aggregation",
          "timestamp": "2023-10-10T12:00:00Z"
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter",
        "data_processing_transformer",
        "data_processing_aggregator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:58.285166",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes raw data by reading it from a file, parsing it into a structured format, filtering specific data points, transforming the data into a different format, and finally aggregating the results for analysis.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_c40ccfdd",
      "task_type": "data_pipeline",
      "description": "Process unknown input data through five tools to produce an unspecified output result.",
      "inputs": {
        "source": "path/to/input/data.csv",
        "options": {
          "filter": {
            "criteria": {
              "column": "status",
              "value": "active"
            }
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter",
        "data_processing_transformer",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:28:04.153844",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes raw data by reading from a CSV file, parsing the data into a structured format, filtering the data based on specified criteria, transforming the data into JSON format, and finally validating the transformed data against a defined schema.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_0619fb54",
      "task_type": "data_pipeline",
      "description": "Process unknown data using four tools: read, transform, filter, and validate to produce unspecified output.",
      "inputs": {
        "source": "data/input_data.csv",
        "options": {
          "filter": {
            "criteria": "value > 10"
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "data_processing_filter",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:28:06.943111",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes raw data from a CSV file, transforms it into JSON format, filters the data based on specific criteria, and validates the final dataset against a predefined schema.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_dc15c921",
      "task_type": "data_pipeline",
      "description": "Process unknown input data through four tools to produce an unspecified output result.",
      "inputs": {
        "source": "path/to/raw_data.csv",
        "options": {
          "delimiter": ",",
          "has_header": true
        }
      },
      "expected_outputs": {
        "success": true,
        "transformed_data": {
          "format": "JSON",
          "data": "Filtered and transformed data in JSON format"
        },
        "metadata": {
          "operation_time": "2023-10-01T12:00:00Z",
          "input_rows": 100,
          "output_rows": 50
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter",
        "data_processing_transformer"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:37.686312",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task is designed to read raw data from a CSV file, parse it into a structured format, filter the data based on specific criteria, and then transform the filtered data into JSON format for further analysis.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_12475cc6",
      "task_type": "data_pipeline",
      "description": "Process unknown data using five tools to transform it into an unspecified format with no fields.",
      "inputs": {
        "source": "data/input_data.json",
        "options": {
          "transformations": {
            "filter": {
              "criteria": {
                "status": "active"
              }
            }
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "record_count": 100,
          "validation_errors": []
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "data_processing_filter",
        "data_processing_validator",
        "data_processing_aggregator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:40.582787",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task involves reading raw data from a JSON file, transforming it into a structured XML format, filtering the data based on specific criteria, and validating the final output against a predefined schema before aggregating the results.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_4f48d8dc",
      "task_type": "data_pipeline",
      "description": "Process unknown input data through five tools to produce an unspecified output result.",
      "inputs": {
        "source": "data/input_file.csv",
        "options": {
          "delimiter": ",",
          "header": true
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter",
        "data_processing_transformer",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:42.752993",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task involves reading raw data from a CSV file, parsing it into a structured format, filtering the data based on specific criteria, transforming it into JSON format, and finally validating the transformed data against a predefined schema.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_9edd1938",
      "task_type": "data_pipeline",
      "description": "Process unknown input data through five tools to produce an unspecified output result.",
      "inputs": {
        "source": "path/to/input_data.csv",
        "options": {
          "filter_criteria": {
            "column_name": "status",
            "value": "active"
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter",
        "data_processing_transformer",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:46.142529",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes raw data from a CSV file by reading it, parsing it into a structured format, filtering the data based on specific criteria, transforming it into JSON format, and finally validating the structured data to ensure its integrity.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_a7653bc0",
      "task_type": "data_pipeline",
      "description": "Process unknown data through five tools: read, parse, transform, filter, and aggregate to produce unspecified output.",
      "inputs": {
        "source": "data/input_file.csv",
        "options": {
          "filter": "active"
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "processed_records": 100,
          "aggregation_method": "sum"
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_transformer",
        "data_processing_filter",
        "data_processing_aggregator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:48.876448",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes data from a CSV file by reading, parsing, transforming, and filtering it, ultimately aggregating the results for further analysis.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_41560f4c",
      "task_type": "data_pipeline",
      "description": "Process unknown input data through four tools to produce an unspecified output result.",
      "inputs": {
        "source": "path/to/input_data.csv",
        "options": {
          "filter": "include header"
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_transformer",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:51.460999",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This data processing pipeline reads raw data from a CSV file, parses it into a structured format, transforms it into JSON format, and validates the structured data against a predefined schema before producing the final output.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_62dcde7f",
      "task_type": "data_pipeline",
      "description": "Process unknown input data through five tools to produce an unspecified output result.",
      "inputs": {
        "source": "data/input_file.csv",
        "options": {
          "filter": {
            "column": "status",
            "value": "active"
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_transformer",
        "data_processing_filter",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:54.175086",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes raw data from a CSV file, transforms it into JSON format, filters the data based on specified criteria, and validates the final output against a predefined schema.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_30a008d1",
      "task_type": "data_pipeline",
      "description": "Process unknown input data using three tools: read, parse, and filter to produce unspecified output.",
      "inputs": {
        "source": "data/input_data.csv",
        "options": {
          "transform": {
            "type": "filter",
            "criteria": {
              "column": "status",
              "value": "active"
            }
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "data": {
          "filtered_records": [
            {
              "id": 1,
              "name": "John Doe",
              "status": "active"
            },
            {
              "id": 2,
              "name": "Jane Smith",
              "status": "active"
            }
          ]
        },
        "metadata": {
          "record_count": 2,
          "processing_time": "50ms"
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:58.212824",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes raw data from a CSV file, transforms it to JSON format, and filters the data based on specific criteria, ultimately writing the refined dataset to a new file.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_3cfe6777",
      "task_type": "data_pipeline",
      "description": "Process unknown data through five tools to produce an unspecified output format with no fields.",
      "inputs": {
        "source": "path/to/input/data.csv",
        "options": {
          "delimiter": ",",
          "has_header": true
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_transformer",
        "data_processing_filter",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:28:03.506659",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes raw data from a CSV file, transforms it to JSON format, filters the data based on specific criteria, and then validates the final output against a predefined schema.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_4c59b9de",
      "task_type": "data_pipeline",
      "description": "Process unknown input data through five tools to produce an unspecified output result.",
      "inputs": {
        "source": "data/input.csv",
        "options": {
          "transform": {
            "filters": {
              "status": "active"
            }
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_transformer",
        "data_processing_filter",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:28:07.114931",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This data processing pipeline reads raw data from a CSV file, parses it into a structured format, transforms it into JSON format, filters the data based on specific criteria, and validates the final output against a predefined schema.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_e34505ea",
      "task_type": "basic_task",
      "description": "Read the input data, parse it, and filter the results to produce the final output.",
      "inputs": {
        "source": "path/to/data.csv",
        "options": {
          "delimiter": ",",
          "header": true
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "filtered_count": 100,
          "criteria": "specific_criteria"
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-10T04:27:37.517859",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task involves reading data from a CSV file, parsing it into a structured format, and filtering the data based on specific criteria. The final output will consist of a refined dataset that meets the filtering criteria.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_1c21fca9",
      "task_type": "basic_task",
      "description": "Read unknown data, parse it, and filter the results to produce an unspecified output.",
      "inputs": {
        "source": "path/to/input_file.csv",
        "options": {
          "filter": {
            "criteria": "value > 10"
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "records_filtered": 50
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-10T04:27:41.363994",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes raw data from a CSV file by reading its contents, parsing the data into a structured format, and then filtering the data based on specified criteria.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_a9d642cd",
      "task_type": "basic_task",
      "description": "Read the input data, parse it, and filter the results to produce the final output.",
      "inputs": {
        "source": "path/to/data.csv",
        "options": {
          "delimiter": ",",
          "header": true
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "filtered_count": 10
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-10T04:27:43.948508",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task reads data from a CSV file, parses it into a structured format, and then filters the data based on specified criteria.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_12f32536",
      "task_type": "basic_task",
      "description": "Read the input data, parse it, and filter the results to produce the final output.",
      "inputs": {
        "source": "path/to/user_data.csv",
        "options": {
          "delimiter": ",",
          "header": true
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "filtered_user_count": 10
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-10T04:27:46.488326",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task reads a CSV file containing user data, parses the data into a structured format, and filters the data to retrieve only users from a specific country.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_b52b1b63",
      "task_type": "basic_task",
      "description": "Read input data, parse it for structure, and filter results to produce the final output.",
      "inputs": {
        "source": "path/to/user_data.csv",
        "options": {
          "delimiter": ",",
          "header": true
        }
      },
      "expected_outputs": {
        "success": true,
        "data": [
          {
            "user_id": 1,
            "name": "John Doe",
            "status": "active"
          },
          {
            "user_id": 2,
            "name": "Jane Smith",
            "status": "active"
          }
        ],
        "metadata": {
          "record_count": 2
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-10T04:27:50.318570",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes a CSV file containing user data by reading the file, parsing the data into a structured format, and then filtering the data based on specific criteria to extract only active users.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_9d1d2f08",
      "task_type": "basic_task",
      "description": "Read the input data, parse it, and filter the results to produce the final output.",
      "inputs": {
        "source": "data/input_file.csv",
        "options": {
          "transform": {
            "filter": {
              "criteria": {
                "column": "age",
                "value": "30"
              }
            }
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "operation_time": "500ms",
          "record_count": 10
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-10T04:27:53.257325",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task involves reading data from a CSV file, parsing it into a structured format, and then filtering the parsed data based on specified criteria. The final output will provide a refined dataset along with metadata about the operation.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_f04d2775",
      "task_type": "basic_task",
      "description": "Read the input data, filter it, and validate it to produce the final processed result.",
      "inputs": {
        "source": "path/to/user_data.csv",
        "options": {
          "filter_criteria": {
            "age": "> 18",
            "active": true
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_filter",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-10T04:27:55.720066",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes a CSV file containing user data, filters the records based on specified criteria, and validates the filtered data against a predefined schema.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_1d487558",
      "task_type": "basic_task",
      "description": "Read the input data, parse it, and filter the results to produce the final output.",
      "inputs": {
        "source": "path/to/data.csv",
        "options": {
          "transform": {
            "filtering_criteria": {
              "column_name": "status",
              "value": "active"
            }
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "filtered_count": 100,
          "total_count": 200
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-10T04:27:59.602611",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task reads data from a CSV file, parses the raw data into a structured format, and then filters the structured data based on specified criteria.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_9c591ac5",
      "task_type": "basic_task",
      "description": "Read the input data, parse it, and filter the results to produce the final output.",
      "inputs": {
        "source": "path/to/user_data.csv",
        "options": {
          "delimiter": ",",
          "header": true
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "filtered_count": 150
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-10T04:28:04.798032",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task reads a CSV file containing user data, parses the raw data into a structured format, and then filters the data to include only active users.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_b1010be3",
      "task_type": "basic_task",
      "description": "Read unknown data, parse it, filter the results, and validate the output format.",
      "inputs": {
        "source": "path/to/user_data.csv",
        "options": {
          "delimiter": ",",
          "header": true
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-10T04:28:07.135761",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes a CSV file containing user data, parses the data into a structured format, filters the data based on specified criteria, and validates the final dataset against a predefined schema.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_8220af1c",
      "task_type": "basic_task",
      "description": "Read the input data, parse it, and filter the results for the final output.",
      "inputs": {
        "source": "path/to/sales_data.csv",
        "options": {
          "delimiter": ",",
          "has_header": true
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "filtered_count": 150
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-10T04:27:37.910413",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task involves reading a CSV file containing sales data, parsing the data into a structured format, and then filtering the data to include only sales above a certain threshold.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_3888e8d7",
      "task_type": "basic_task",
      "description": "Read the input data, parse it, and filter the results to generate the final output.",
      "inputs": {
        "source": "path/to/input_file.csv",
        "options": {
          "transformation": {
            "filter": {
              "criteria": "active = true"
            }
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "filtered_count": 150
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-10T04:27:42.950822",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes data from a CSV file by reading it, parsing it into a structured format, and then filtering the data based on specified criteria to output a refined dataset.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_7f24fa37",
      "task_type": "basic_task",
      "description": "Read input data, parse it for structure, and filter results for output.",
      "inputs": {
        "source": "path/to/user_data.csv",
        "options": {
          "format": "CSV"
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "filtered_count": 100,
          "country": "USA"
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-10T04:27:45.832500",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task reads a CSV file containing user data, parses it into a structured format, and then filters the data to include only users from a specific country.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_79bcb16d",
      "task_type": "basic_task",
      "description": "Read the input data, parse it, and filter the results to produce the final output.",
      "inputs": {
        "source": "path/to/input_data.csv",
        "options": {
          "delimiter": ",",
          "header": true
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "filtered_count": 50,
          "original_count": 100
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-10T04:27:48.406837",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task reads raw data from a CSV file, parses it into a structured format, and then filters the data based on specific criteria to produce a refined dataset.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_343daa38",
      "task_type": "basic_task",
      "description": "Read input data, parse it for structure, and filter results to generate the final output.",
      "inputs": {
        "source": "data/input_file.csv",
        "options": {
          "filter_criteria": {
            "column": "status",
            "value": "active"
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "record_count": 100
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-10T04:27:51.144061",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task reads data from a CSV file, parses it into a structured format, and filters the data based on specified criteria.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_bc3ef88e",
      "task_type": "basic_task",
      "description": "Read the input file, parse the data, and filter the results for output.",
      "inputs": {
        "source": "path/to/user_data.csv",
        "options": {
          "filter_criteria": {
            "age": ">30"
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "filtered_count": 150
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-10T04:27:53.544602",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes a CSV file containing user data by reading the file, parsing the data into a structured format, and then filtering the data based on specific criteria.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_10234c1d",
      "task_type": "basic_task",
      "description": "Read the input data, parse it, and filter the results to produce the final output.",
      "inputs": {
        "source": "path/to/data.csv",
        "options": {
          "filter": {
            "column": "status",
            "value": "active"
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "record_count": 10,
          "filtered_criteria": "status = active"
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-10T04:27:57.546868",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task involves reading data from a CSV file, parsing it into a structured format, and applying a filter to extract specific records based on given criteria.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_c6036265",
      "task_type": "basic_task",
      "description": "Read the input data, parse it, and filter the results to produce the final output.",
      "inputs": {
        "source": "data/input_file.csv",
        "options": {
          "filter": {
            "column": "status",
            "value": "active"
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "processed_count": 100,
          "filtered_count": 75
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-10T04:28:00.210466",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task reads data from a CSV file, parses it into a structured format, and filters the data based on specified criteria.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_81024246",
      "task_type": "basic_task",
      "description": "Read the input data, parse it, and filter the results to produce the final output.",
      "inputs": {
        "source": "path/to/data.csv",
        "options": {
          "delimiter": ",",
          "has_header": true
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "filtered_count": 100
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-10T04:28:04.955191",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task involves reading data from a CSV file, parsing it into a structured format, and then filtering the parsed data based on specific criteria to produce a refined dataset.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_4a56e7bf",
      "task_type": "basic_task",
      "description": "Read the input file, parse the data, and filter the results for output.",
      "inputs": {
        "source": "path/to/user_data.json",
        "options": {
          "filter": {
            "age": ">30",
            "location": "USA"
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "filtered_count": 50
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-10T04:28:07.272495",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task reads a JSON file containing user data, parses the data into a structured format, and then filters the data based on specific criteria such as age and location.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_2359dc11",
      "task_type": "data_pipeline",
      "description": "Process unknown data using four tools: read, parse, transform, and validate to produce unspecified results.",
      "inputs": {
        "source": "data/input_file.csv",
        "options": {
          "filter": {
            "column": "status",
            "value": "active"
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_transformer",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:37.720778",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task involves reading raw data from a CSV file, parsing it into a structured format, transforming it into JSON format, and then validating the transformed data against a predefined schema to ensure its integrity and correctness.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_3ba27911",
      "task_type": "data_pipeline",
      "description": "Process unknown data using four tools: read, parse, transform, and validate to produce unspecified output.",
      "inputs": {
        "source": "data/input.csv",
        "options": {
          "filter": {
            "active": true,
            "criteria": "valid_entries_only"
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_transformer",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:41.407424",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes raw data by reading it from a file, parsing it into a structured format, transforming it to a different format, and finally validating the transformed data against a predefined schema to ensure its integrity.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_809199be",
      "task_type": "data_pipeline",
      "description": "Process unknown data using four tools: read, parse, transform, and validate for unspecified output.",
      "inputs": {
        "source": "path/to/data.csv",
        "options": {
          "transform": "filter",
          "filter_condition": "valid"
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_transformer",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:44.528100",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes raw data by reading it from a CSV file, parsing it into a structured format, applying transformations to convert it to JSON format, and finally validating the structured data against a predefined schema to ensure data integrity.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_3c507f78",
      "task_type": "data_pipeline",
      "description": "Process unknown input data through five tools to produce an unspecified output result.",
      "inputs": {
        "source": "data/input.csv",
        "options": {
          "delimiter": ",",
          "has_header": true
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_transformer",
        "data_processing_filter",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:47.188310",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes data by reading from a CSV file, parsing it into a structured format, transforming it into JSON format, filtering based on specific criteria, and finally validating the processed data against a predefined schema.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_a364dbbb",
      "task_type": "data_pipeline",
      "description": "Process unknown data through four tools: read, parse, transform, and filter to produce unspecified output.",
      "inputs": {
        "source": "data/input_data.csv",
        "options": {
          "filter": {
            "column": "status",
            "value": "active"
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "data": {
          "filtered_records": 150,
          "metadata": {
            "processed_time": "2023-10-10T10:00:00Z",
            "record_count": 150
          }
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_transformer",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:50.137312",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes raw data from a CSV file, transforms it into JSON format, and filters it based on specified criteria to extract meaningful insights.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_0a32970e",
      "task_type": "data_pipeline",
      "description": "Process unknown data through five tools: read, parse, filter, transform, and validate to produce unspecified output.",
      "inputs": {
        "source": "path/to/input_data.csv",
        "options": {
          "filter": {
            "column": "status",
            "value": "active"
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": [],
        "metadata": {
          "operation_time": "2023-10-05T12:00:00Z",
          "row_count": 100
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter",
        "data_processing_transformer",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:54.105118",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes raw data by reading it from a CSV file, parsing it into a structured format, filtering the data based on specific criteria, transforming it into JSON format, and finally validating the data against a predefined schema.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_f458eb20",
      "task_type": "data_pipeline",
      "description": "Process unknown data using four tools: read, transform, filter, and validate to produce unspecified output.",
      "inputs": {
        "source": "path/to/raw_data.csv",
        "options": {}
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "data_processing_filter",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:56.591288",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This data processing pipeline reads raw data from a CSV file, transforms it into JSON format, filters it based on specific criteria, and then validates the filtered data against a defined schema to ensure its correctness.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_60ead5f0",
      "task_type": "data_pipeline",
      "description": "Process unknown data using four tools: read, filter, transform, and validate to produce unspecified output.",
      "inputs": {
        "source": "path/to/input/data.csv",
        "options": {
          "delimiter": ",",
          "header": true
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_filter",
        "data_processing_transformer",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:59.399419",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes raw data from a CSV file by reading it, filtering the necessary information, transforming it into JSON format, and validating the output data against a predefined schema.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_4cda403e",
      "task_type": "data_pipeline",
      "description": "Process unknown data through four tools: read, parse, transform, and filter to produce unspecified output.",
      "inputs": {
        "source": "path/to/input_data.csv",
        "options": {
          "filter": {
            "criteria": "some_filter_criteria"
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "filtered_data": "expected_filtered_data_output"
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_transformer",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:28:03.523678",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes raw data by reading it from a CSV file, parsing it into a structured format, transforming it into JSON, and filtering the results based on specified criteria.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_ab68318e",
      "task_type": "data_pipeline",
      "description": "Process unknown input data through five tools to produce an unspecified output result.",
      "inputs": {
        "source": "path/to/input_data.csv",
        "options": {
          "filter": {
            "criteria": "specific_condition"
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": [],
        "metadata": {
          "timestamp": "2023-10-01T12:00:00Z",
          "processed_records": 100
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_transformer",
        "data_processing_filter",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:28:07.410815",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes raw data from a CSV file, transforms it into JSON format, filters the data based on specified criteria, and validates the final dataset against a predefined schema.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_a44d6193",
      "task_type": "data_pipeline",
      "description": "Process unknown data through four tools: read, filter, transform, and validate to produce unspecified output.",
      "inputs": {
        "source": "data/input_records.csv",
        "options": {
          "filter_criteria": {
            "status": "active"
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_filter",
        "data_processing_transformer",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:36.761624",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes raw data from a CSV file by reading it, filtering specific records, transforming the format to JSON, and validating the structured data against a predefined schema.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_f0a5c3d3",
      "task_type": "data_pipeline",
      "description": "Process unknown data through five tools to produce an unspecified output format.",
      "inputs": {
        "source": "data/input_file.csv",
        "options": {
          "filter": {
            "column": "status",
            "value": "active"
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_transformer",
        "data_processing_filter",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:39.270722",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes raw data from a CSV file, transforms it into JSON format, filters the data based on specified criteria, and validates the processed data against a predefined schema.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_97956bac",
      "task_type": "data_pipeline",
      "description": "Process unknown data through five tools: read, transform, filter, validate, and aggregate to produce unspecified results.",
      "inputs": {
        "source": "data/input_file.csv",
        "options": {
          "delimiter": ",",
          "header": true
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "aggregated_count": 100
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "data_processing_filter",
        "data_processing_validator",
        "data_processing_aggregator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:42.418968",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task involves reading raw data from a CSV file, transforming it into JSON format, filtering the data based on specific criteria, validating the filtered data against a schema, and finally aggregating the results.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_5743ab78",
      "task_type": "data_pipeline",
      "description": "Process unknown input data through five tools to produce an unspecified output result.",
      "inputs": {
        "source": "data/input_file.csv",
        "options": {
          "delimiter": ",",
          "has_header": true
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_transformer",
        "data_processing_filter",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:45.041393",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes raw CSV data by reading it, parsing it into a structured format, transforming it into JSON, filtering the data based on specific criteria, and then validating the final output against a predefined schema.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_e71ce434",
      "task_type": "data_pipeline",
      "description": "Process unknown data through four steps: read, transform, filter, and validate for unspecified output.",
      "inputs": {
        "source": "path/to/input_data.csv",
        "options": {
          "filter": {
            "criteria": {
              "field": "status",
              "value": "active"
            }
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "data_processing_filter",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:47.615376",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes raw data from a CSV file, transforms it into JSON format, and filters the data based on specified criteria before validating it against a schema.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_1399d258",
      "task_type": "data_pipeline",
      "description": "Process unknown data using four tools: read, parse, transform, and filter to produce unspecified output.",
      "inputs": {
        "source": "data/input_file.csv",
        "options": {
          "filter": "active"
        }
      },
      "expected_outputs": {
        "success": true,
        "filtered_data": {
          "records": [
            {
              "id": 1,
              "name": "John Doe",
              "status": "active"
            }
          ]
        },
        "metadata": {
          "record_count": 1,
          "filter_applied": "active"
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_transformer",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:50.792443",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes raw CSV data by reading it, parsing it into a structured format, transforming it to JSON, and then filtering the data based on specified criteria before writing the final output.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_98bb0d4f",
      "task_type": "data_pipeline",
      "description": "Process unknown input data using file operations, transform it with data processing tools, and filter the output.",
      "inputs": {
        "source": "data/input_file.csv",
        "options": {
          "filter": "active",
          "columns": [
            "id",
            "name",
            "status"
          ]
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "row_count": 100,
          "filtered_rows": 75
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:54.306968",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes raw data by reading it from a specified file format, transforming it into a desired format, and filtering the resultant data based on specified criteria. The final output is a structured dataset ready for analysis.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_4b49c76e",
      "task_type": "data_pipeline",
      "description": "Process unknown data through four tools: read, transform, filter, and validate for unspecified output.",
      "inputs": {
        "source": "path/to/input.csv",
        "options": {
          "transform": {
            "type": "filter",
            "criteria": {
              "age": "> 18"
            }
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": [],
        "metadata": {
          "processed_records": 100,
          "valid_records": 95
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "data_processing_filter",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:57.519423",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes raw data from a CSV file, transforms it into JSON format, filters the data based on specific criteria, and validates the final dataset against a predefined schema.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_18148ebc",
      "task_type": "data_pipeline",
      "description": "Process unknown data using file operations, transform it with a data processor, and filter the results.",
      "inputs": {
        "source": "data/input.json",
        "options": {
          "filter": {
            "active": true,
            "criteria": {
              "status": "active"
            }
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "filtered_count": 100,
          "total_count": 200
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:28:03.233085",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This data processing pipeline reads data from a JSON file, transforms it into XML format, and filters the transformed data based on specific criteria. The final output is a refined dataset ready for analysis.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_abe1a81f",
      "task_type": "data_pipeline",
      "description": "Process unknown data using four tools: read, parse, filter, and transform to produce unspecified output.",
      "inputs": {
        "source": "data/source_file.csv",
        "options": {
          "filter_criteria": {
            "status": "active"
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "transformed_data": {
          "data": [
            {
              "id": 1,
              "name": "John Doe",
              "status": "active"
            },
            {
              "id": 2,
              "name": "Jane Smith",
              "status": "active"
            }
          ]
        },
        "metadata": {
          "timestamp": "2023-10-01T12:00:00Z"
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter",
        "data_processing_transformer"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:28:07.759269",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes raw data from a CSV file by reading it, parsing it into a structured format, filtering specific entries based on criteria, and finally transforming the data into JSON format for output.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_b2c5cb1f",
      "task_type": "basic_task",
      "description": "Read the input data, parse it, and filter the results to produce the final output.",
      "inputs": {
        "source": "path/to/user_data.csv",
        "options": {
          "delimiter": ",",
          "headers": true
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "filtered_count": 100,
          "processing_time": "500ms"
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-10T04:27:36.654252",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes a CSV file containing user data by reading it, parsing it into a structured format, and applying a filter to extract only active users.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_598737e8",
      "task_type": "basic_task",
      "description": "Read input data, parse it for structure, and filter results to produce the final output.",
      "inputs": {
        "source": "path/to/input_file.csv",
        "options": {
          "transformations": {
            "filter_column": "status",
            "filter_value": "active"
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "filtered_count": 100,
          "original_count": 200
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-10T04:27:39.443387",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task reads data from a CSV file, parses it into a structured format, and then filters the parsed data based on specified criteria.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_72ea0999",
      "task_type": "basic_task",
      "description": "Read the input data, parse it, and filter the results for final output.",
      "inputs": {
        "source": "data/input_file.csv",
        "options": {
          "filter": {
            "column": "status",
            "value": "active"
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "filtered_count": 100
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-10T04:27:42.196952",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task reads data from a CSV file, parses it into a structured format, and then filters the parsed data based on specified criteria.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_5d51a9fa",
      "task_type": "basic_task",
      "description": "Read the input data, parse it, and filter the results to produce the final output.",
      "inputs": {
        "source": "path/to/input/data.csv",
        "options": {
          "delimiter": ",",
          "has_header": true
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "filtered_count": 100
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-10T04:27:45.083120",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task reads data from a CSV file, parses it into a structured format, and then filters the data based on specified criteria to produce a refined dataset.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_ca6506a4",
      "task_type": "basic_task",
      "description": "Read the input data, parse it, and filter the results for final output.",
      "inputs": {
        "source": "path/to/input_data.csv",
        "options": {
          "filter": {
            "column": "status",
            "value": "active"
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "filtered_count": 100
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-10T04:27:47.820210",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task involves reading data from a CSV file, parsing it into a structured format, and then filtering the parsed data based on specific criteria.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_068b005e",
      "task_type": "basic_task",
      "description": "Read the input data, parse it, and filter the results to produce the final output.",
      "inputs": {
        "source": "path/to/data.csv",
        "options": {
          "transform": {
            "filter_criteria": {
              "column": "status",
              "value": "active"
            }
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "record_count": 50,
          "processing_time": "200ms"
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-10T04:27:51.039096",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task reads data from a CSV file, parses it into a structured format, and then filters the parsed data based on specified criteria to produce refined output.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_d39e1090",
      "task_type": "basic_task",
      "description": "Read the input file, parse the data, and filter the results for output.",
      "inputs": {
        "source": "path/to/sales_data.csv",
        "options": {
          "filter": {
            "column": "sales_amount",
            "threshold": 1000
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "data": [
          {
            "transaction_id": "TX123",
            "sales_amount": 1500,
            "date": "2023-10-01"
          },
          {
            "transaction_id": "TX124",
            "sales_amount": 2000,
            "date": "2023-10-02"
          }
        ],
        "metadata": {
          "record_count": 2,
          "filter_criteria": {
            "column": "sales_amount",
            "threshold": 1000
          }
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-10T04:27:54.829162",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task reads a CSV file containing raw sales data, parses the data into a structured format, and then filters the data to only include sales above a certain threshold.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_106e4b3b",
      "task_type": "basic_task",
      "description": "Read the input data, parse it, and validate it to ensure compliance with the schema.",
      "inputs": {
        "source": "path/to/user_data.csv",
        "options": {}
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-10T04:27:57.139127",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task involves reading a CSV file containing user data, parsing the data into a structured format, and then validating the parsed data against a predefined schema to ensure its correctness.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_1113146e",
      "task_type": "basic_task",
      "description": "Read the input data, parse it, and filter the results for final output.",
      "inputs": {
        "source": "path/to/data.csv",
        "options": {
          "delimiter": ",",
          "has_headers": true
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "filtered_count": 10
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-10T04:27:59.521165",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task reads data from a CSV file, parses it into a structured format, and then filters the parsed data based on specified criteria.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_6f9c82a4",
      "task_type": "basic_task",
      "description": "Read the input data, parse it, and filter the results to generate the output.",
      "inputs": {
        "source": "data/input_file.csv",
        "options": {
          "filter": {
            "column": "status",
            "value": "active"
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "record_count": 100,
          "filtered_count": 80
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-10T04:28:07.762901",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task involves reading data from a CSV file, parsing it into a structured format, and then filtering the data based on specific criteria to produce a refined dataset.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_85917dfc",
      "task_type": "multi_stage_pipeline",
      "description": "Process unknown input data through five tools to produce an unspecified output result.",
      "inputs": {
        "source": "path/to/datafile.json",
        "options": {}
      },
      "expected_outputs": {
        "success": true,
        "result": {
          "insights": "Statistical analysis and trends from computation results"
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_validator",
        "data_processing_transformer",
        "computation_analyzer"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "hard",
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-10T04:27:36.537766",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This multi-stage pipeline processes a dataset by reading from a source file, parsing the data, validating it against a schema, transforming the data format, and finally analyzing computation results derived from the transformed data.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_b7bb1e3f",
      "task_type": "multi_stage_pipeline",
      "description": "Process unknown input data through 6 tools to generate an unspecified output result.",
      "inputs": {
        "source": "path/to/raw_data.csv",
        "options": {}
      },
      "expected_outputs": {
        "success": true,
        "result": {
          "insights": "Statistical insights based on the processed data"
        },
        "metadata": {
          "timestamp": "2023-10-01T12:00:00Z"
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter",
        "data_processing_validator",
        "data_processing_transformer",
        "computation_analyzer"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "hard",
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-10T04:27:39.909071",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task represents a multi-stage data processing pipeline that involves reading raw data from a file, parsing it into a structured format, filtering the data based on specific criteria, validating the data against a schema, transforming the data into a different format, and finally performing analysis on the processed data.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_e319d62d",
      "task_type": "multi_stage_pipeline",
      "description": "Process unknown input data through 6 tools to produce an unspecified output format.",
      "inputs": {
        "source": "path/to/input.csv",
        "options": {}
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "files_written": 1,
          "destination": "path/to/output.json"
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_transformer",
        "data_processing_filter",
        "data_processing_validator",
        "file_operations_writer"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "hard",
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-10T04:27:42.468924",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task involves processing raw data from a CSV file, transforming it to JSON format, filtering the transformed data based on specific criteria, and then validating the final dataset against a predefined schema before writing the output to a new file.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_d3e62800",
      "task_type": "multi_stage_pipeline",
      "description": "Process unknown input data through five tools to produce an unspecified output result.",
      "inputs": {
        "source": "path/to/input_file.csv",
        "schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer"
            },
            "name": {
              "type": "string"
            },
            "value": {
              "type": "number"
            }
          },
          "required": [
            "id",
            "name",
            "value"
          ]
        },
        "data": {}
      },
      "expected_outputs": {
        "success": true,
        "result": {
          "statisticalInsights": {
            "mean": 50,
            "median": 48,
            "standardDeviation": 10
          },
          "metadata": {
            "analysisTime": "2023-10-01T12:00:00Z"
          }
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_validator",
        "data_processing_filter",
        "data_processing_transformer",
        "computation_analyzer"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "hard",
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-10T04:27:46.550742",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task involves processing raw data from a CSV file, validating its structure, filtering for specific criteria, transforming it into JSON format, and finally performing statistical analysis on the filtered data.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_2ad7af51",
      "task_type": "multi_stage_pipeline",
      "description": "Process unknown data through five tools: read, validate, filter, transform, and analyze for insights.",
      "inputs": {
        "source": "path/to/raw_data.csv",
        "schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer"
            },
            "name": {
              "type": "string"
            },
            "value": {
              "type": "number"
            }
          },
          "required": [
            "id",
            "name",
            "value"
          ]
        }
      },
      "expected_outputs": {
        "success": true,
        "result": {
          "average_value": 50,
          "trend": "increasing"
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_validator",
        "data_processing_filter",
        "data_processing_transformer",
        "computation_analyzer"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "hard",
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-10T04:27:50.209899",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This multi-stage pipeline processes raw data from a CSV file, validates it against a schema, filters the data based on specific criteria, transforms it to a different format, and then analyzes the computation results to provide insights.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_794be9a9",
      "task_type": "multi_stage_pipeline",
      "description": "Process unknown input data through four tools: parse, filter, transform, and validate for unspecified output.",
      "inputs": {
        "source": "path/to/input_file.csv",
        "options": {
          "delimiter": ",",
          "header": true
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "data_processing_parser",
        "data_processing_filter",
        "data_processing_transformer",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "hard",
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-10T04:27:52.798839",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task is designed to process raw data from a CSV file by parsing it, filtering the data based on specific criteria, transforming the filtered data to a different format, and finally validating the transformed data against a predefined schema.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_6b15c05b",
      "task_type": "multi_stage_pipeline",
      "description": "Process unknown input data through five tools: read, filter, validate, transform, and analyze. Output is unspecified.",
      "inputs": {
        "source": "path/to/raw_data.csv",
        "options": {}
      },
      "expected_outputs": {
        "success": true,
        "result": {
          "insights": "Statistical summary of the analysis"
        },
        "metadata": {}
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_filter",
        "data_processing_validator",
        "data_processing_transformer",
        "computation_analyzer"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "hard",
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-10T04:27:56.484611",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This multi-stage pipeline processes raw data from a CSV file, filters it based on specific criteria, validates the filtered data against a schema, transforms it into a JSON format, and finally performs an analysis of the transformed data to generate insights.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_6e0760ad",
      "task_type": "multi_stage_pipeline",
      "description": "Process unknown input data through five tools to produce an unspecified output format.",
      "inputs": {
        "source": "path/to/raw_data.json",
        "options": {}
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter",
        "data_processing_transformer",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "hard",
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-10T04:27:59.547598",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This multi-stage pipeline processes raw data by reading it from a file, parsing it into a structured format, filtering it based on specific criteria, transforming it into another format, and finally validating the transformed data against a defined schema.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_c48b9a53",
      "task_type": "multi_stage_pipeline",
      "description": "Process unknown input data through five tools to produce an unspecified output result.",
      "inputs": {
        "source": "data/input_file.csv",
        "options": {}
      },
      "expected_outputs": {
        "success": true,
        "result": {
          "insights": "Statistical insights generated from the computations."
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_validator",
        "data_processing_transformer",
        "computation_calculator",
        "computation_analyzer"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "hard",
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-10T04:28:04.311452",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This multi-stage pipeline processes raw data from a CSV file, validates it against a schema, transforms it into a JSON format, performs calculations on the transformed data, and finally analyzes the results to generate insights.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_6e95c0f0",
      "task_type": "multi_stage_pipeline",
      "description": "Process unknown input data through five tools to produce an unspecified output result.",
      "inputs": {
        "source": "path/to/input.csv",
        "options": {
          "hasHeader": true
        }
      },
      "expected_outputs": {
        "success": true,
        "result": {
          "mean": 50,
          "median": 45,
          "std_dev": 10
        },
        "metadata": {
          "analysis_time": "2023-10-01T12:00:00Z"
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_filter",
        "data_processing_validator",
        "computation_calculator",
        "computation_analyzer"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "hard",
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-10T04:28:09.502124",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This multi-stage pipeline processes raw data from a CSV file, filters it based on specific criteria, validates its integrity, performs calculations on the filtered data, and generates a report of the results.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_dd3cf79d",
      "task_type": "multi_stage_pipeline",
      "description": "Process unknown input data through five tools to produce an unspecified output result.",
      "inputs": {
        "source": "data/input_file.csv",
        "options": {
          "header": true,
          "delimiter": ","
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "processed_records": 100,
          "aggregated_value": 1500
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter",
        "data_processing_validator",
        "data_processing_aggregator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "hard",
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-10T04:27:37.107479",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task involves a multi-stage data processing pipeline that reads raw data from a file, parses it into a structured format, filters the parsed data based on specific criteria, validates the filtered data against a predefined schema, and finally aggregates the validated data for further analysis.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_9a395d19",
      "task_type": "multi_stage_pipeline",
      "description": "Process unknown input data through five tools to produce an unspecified output result.",
      "inputs": {
        "source": "path/to/raw_data.csv",
        "schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer"
            },
            "name": {
              "type": "string"
            },
            "value": {
              "type": "number"
            }
          },
          "required": [
            "id",
            "name",
            "value"
          ]
        },
        "data": null,
        "options": {}
      },
      "expected_outputs": {
        "success": true,
        "result": {
          "mean": 50,
          "median": 45,
          "std_dev": 10
        },
        "metadata": {}
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_validator",
        "data_processing_filter",
        "data_processing_transformer",
        "computation_analyzer"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "hard",
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-10T04:27:40.845857",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task involves processing raw data from a CSV file, validating its structure, filtering specific records, transforming the data format, and finally analyzing the computation results to generate statistical insights.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_d939558a",
      "task_type": "multi_stage_pipeline",
      "description": "Process unknown data through four tools: read, validate, transform, and analyze for insights.",
      "inputs": {
        "source": "data/input_file.csv",
        "schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer"
            },
            "name": {
              "type": "string"
            },
            "value": {
              "type": "number"
            }
          },
          "required": [
            "id",
            "name",
            "value"
          ]
        },
        "data": null,
        "input_format": "CSV",
        "output_format": "JSON",
        "precision": 2
      },
      "expected_outputs": {
        "success": true,
        "result": {
          "average_value": 100,
          "max_value": 200,
          "min_value": 10
        },
        "metadata": {}
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_validator",
        "data_processing_transformer",
        "computation_analyzer"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "hard",
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-10T04:27:44.616087",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task involves extracting raw data from a CSV file, validating it against a predefined schema, transforming it into JSON format, and finally analyzing the computation results to derive insights.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_c49ee8b3",
      "task_type": "multi_stage_pipeline",
      "description": "Process unknown input data through five steps: read, validate, transform, analyze, and write output.",
      "inputs": {
        "source": "data/input.csv",
        "options": {}
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "output_file": "data/output.json",
          "analysis_details": "Statistical insights generated"
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_validator",
        "data_processing_transformer",
        "computation_analyzer",
        "file_operations_writer"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "hard",
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-10T04:27:47.431636",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This multi-stage pipeline processes raw data from a CSV file, validates it against a predefined schema, transforms it into JSON format, analyzes computation results, and finally writes the analyzed results to a new output file.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_c49488d1",
      "task_type": "multi_stage_pipeline",
      "description": "Process unknown input data through five tools to produce an unspecified output format.",
      "inputs": {
        "source": "path/to/input_file.csv",
        "options": {}
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "operation": "write",
          "file": "path/to/output_file.json"
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_validator",
        "data_processing_transformer",
        "computation_analyzer",
        "file_operations_writer"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "hard",
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-10T04:27:50.370838",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This multi-stage pipeline processes raw data from a CSV file, validates the data against a predefined schema, transforms it into JSON format, analyzes the computations, and finally writes the results to a new file.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_d607b68d",
      "task_type": "multi_stage_pipeline",
      "description": "Process unknown input data through five tools to produce an unspecified output result.",
      "inputs": {
        "source": "data/input_data.csv",
        "schema": {
          "type": "object",
          "properties": {
            "field1": {
              "type": "string"
            },
            "field2": {
              "type": "number"
            },
            "field3": {
              "type": "string"
            }
          },
          "required": [
            "field1",
            "field2"
          ]
        },
        "options": {}
      },
      "expected_outputs": {
        "success": true,
        "result": {
          "insight": "Statistical summary of computations",
          "trends": "Trends over the analyzed dataset"
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_validator",
        "data_processing_filter",
        "data_processing_transformer",
        "computation_analyzer"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "hard",
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-10T04:27:54.464256",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task involves processing raw data from a CSV file, validating it against a predefined schema, filtering the valid data based on specific criteria, transforming the filtered data into a different format, and finally performing computations on the transformed data to generate insights.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_20b43be2",
      "task_type": "multi_stage_pipeline",
      "description": "Process unknown input data through four tools: read, filter, validate, and analyze for insights.",
      "inputs": {
        "source": "data/input.csv",
        "options": {
          "filter_criteria": {
            "age": ">30",
            "salary": ">50000"
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "result": {
          "average_salary": 75000,
          "total_count": 100
        },
        "metadata": {
          "execution_time": "150ms"
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_filter",
        "data_processing_validator",
        "computation_analyzer"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "hard",
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-10T04:27:58.307429",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This multi-stage pipeline processes raw CSV data, filters it based on specific criteria, validates the data against a schema, and finally analyzes the computational results to provide insights.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_a7872481",
      "task_type": "multi_stage_pipeline",
      "description": "Process unknown input data through four tools to produce an unspecified output result.",
      "inputs": {
        "source": "data/input_data.csv",
        "options": {
          "delimiter": ",",
          "header": true
        }
      },
      "expected_outputs": {
        "success": true,
        "result": {
          "average": 50,
          "max": 100,
          "min": 10
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_validator",
        "data_processing_transformer",
        "computation_analyzer"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "hard",
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-10T04:28:00.768340",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This multi-stage pipeline processes raw data from CSV files, validates it, transforms it into a desired format, and performs statistical analysis on the processed data.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_987ea2ec",
      "task_type": "multi_stage_pipeline",
      "description": "Process unknown input data through 5 tools to produce an unspecified output result.",
      "inputs": {
        "source": "path/to/data.csv",
        "input_format": "CSV",
        "output_format": "JSON",
        "options": {}
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "summary": "Aggregation completed successfully"
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "data_processing_filter",
        "computation_analyzer",
        "data_processing_aggregator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "hard",
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-10T04:28:05.607420",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes raw data from a CSV file, transforms it into JSON format, filters the data based on specific criteria, analyzes the results, and finally aggregates the findings into a summary report.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_9e8bc4c8",
      "task_type": "multi_stage_pipeline",
      "description": "Process unknown input data through 6 tools to generate an unspecified output result.",
      "inputs": {
        "source": "path/to/raw_data.csv",
        "options": {}
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "aggregated_results": "summary of computations"
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter",
        "data_processing_validator",
        "computation_analyzer",
        "data_processing_aggregator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "hard",
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-10T04:28:10.178489",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This multi-stage pipeline processes raw data from a file by first reading it, parsing it into a structured format, filtering unnecessary data, validating the structured data against a schema, analyzing computations on the filtered data, and finally aggregating the results.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_04b70016",
      "task_type": "data_pipeline",
      "description": "Process unknown input data through four tools: read, transform, filter, and validate to produce unspecified output.",
      "inputs": {
        "source": "path/to/input_file.csv",
        "options": {
          "filter": {
            "criteria": "valid_entries"
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "data_processing_filter",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:36.746492",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes raw data from a CSV file, transforms it into JSON format, filters the data based on specific criteria, and validates the final output against a predefined schema.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_e829331e",
      "task_type": "data_pipeline",
      "description": "Process unknown data using four tools: read, transform, filter, and validate to produce unspecified output.",
      "inputs": {
        "source": "path/to/input_data.csv",
        "options": {
          "filter": {
            "column": "status",
            "value": "active"
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": [],
        "metadata": {
          "validated_at": "2023-10-10T12:00:00Z"
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "data_processing_filter",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:39.721770",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This data processing pipeline reads raw data from a CSV file, transforms it into JSON format, filters the data based on specific criteria, and validates the final dataset against a predefined schema to ensure data integrity.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_5bad43b3",
      "task_type": "data_pipeline",
      "description": "Process unknown data through five tools: read, parse, transform, filter, and validate to produce unspecified output.",
      "inputs": {
        "source": "path/to/input/data.csv",
        "options": {
          "delimiter": ",",
          "has_header": true
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_transformer",
        "data_processing_filter",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:42.657069",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This data processing pipeline reads raw data from a CSV file, parses it into a structured format, transforms it into JSON, filters the data based on specific criteria, and validates the final output against a predefined schema to ensure data integrity.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_27a85e65",
      "task_type": "data_pipeline",
      "description": "Process unknown input data through four tools: read, transform, filter, and validate to produce unspecified output.",
      "inputs": {
        "source": "data/input.csv",
        "options": {
          "delimiter": ",",
          "encoding": "utf-8"
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "data_processing_filter",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:45.404089",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes raw data from a CSV file, transforms it into JSON format, filters the data based on specific criteria, and validates the final output against a predefined schema.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_9d24dcfb",
      "task_type": "data_pipeline",
      "description": "Process unknown data through four tools: read, transform, filter, and validate to produce unspecified output.",
      "inputs": {
        "source": "path/to/input_data.csv",
        "options": {
          "delimiter": ",",
          "header": true
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "data_processing_filter",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:50.508214",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes raw data from a CSV file, transforms it into JSON format, and then filters the resulting data based on specific criteria before validating the final output against a predefined schema.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_d5403cc4",
      "task_type": "data_pipeline",
      "description": "Process unknown input data through four tools to produce an unspecified output result.",
      "inputs": {
        "source": "path/to/input_data.json",
        "options": {
          "transform": true,
          "filter": {
            "criteria": {
              "status": "active"
            }
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "data_processing_filter",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:53.416690",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes raw data from a JSON file, transforms it into XML format, filters specific entries, and validates the resulting dataset against a predefined schema.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_972ef43b",
      "task_type": "data_pipeline",
      "description": "Process unknown data through four steps: read, filter, transform, and validate for output.",
      "inputs": {
        "source": "path/to/input_data.csv",
        "options": {
          "filter_criteria": {
            "column_name": "status",
            "desired_value": "active"
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": [],
        "metadata": {
          "timestamp": "2023-10-01T12:00:00Z",
          "records_checked": 100,
          "records_valid": 100
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_filter",
        "data_processing_transformer",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:27:59.257206",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This data processing pipeline reads raw data from a CSV file, filters the data based on specified criteria, transforms the filtered data into JSON format, and validates the final output against a predefined schema.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_0d6beebd",
      "task_type": "data_pipeline",
      "description": "Process unknown data through four tools: read, transform, filter, and validate to produce unspecified output.",
      "inputs": {
        "source": "data/input_data.json",
        "options": {
          "filter": "active"
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "data_processing_filter",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:28:03.572874",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This data processing pipeline reads data from a JSON file, transforms it into XML format, filters the data based on specified criteria, and validates the final output against a defined schema.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_8fc5d3f8",
      "task_type": "data_pipeline",
      "description": "Process unknown data through five tools: read, parse, filter, transform, and validate to produce unspecified output.",
      "inputs": {
        "source": "data/input.csv",
        "options": {}
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter",
        "data_processing_transformer",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:28:08.120179",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes raw CSV data by reading it, parsing it into a structured format, filtering it based on specific criteria, transforming it to a different format, and finally validating the transformed data against a predefined schema.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_cea7e6be",
      "task_type": "data_pipeline",
      "description": "Process unknown input data through four tools: read, parse, filter, and validate, to produce unspecified output.",
      "inputs": {
        "source": "data/input_file.csv",
        "options": {
          "delimiter": ",",
          "has_header": true
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-10T04:28:10.533302",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes raw data from a CSV file, transforming it into a structured JSON format, filtering the data based on specific criteria, and validating the final output against a predefined schema.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_a6d6152f",
      "task_type": "simple_task",
      "description": "Process unknown data by validating, transforming formats, and filtering results through three tools.",
      "inputs": {
        "schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "age": {
              "type": "integer"
            },
            "email": {
              "type": "string"
            }
          },
          "required": [
            "name",
            "age",
            "email"
          ]
        },
        "data": [
          {
            "name": "John Doe",
            "age": 30,
            "email": "john@example.com"
          },
          {
            "name": "Jane Smith",
            "age": "twenty",
            "email": "jane@example.com"
          }
        ]
      },
      "expected_outputs": {
        "success": true,
        "filtered_data": [
          {
            "name": "John Doe",
            "age": 30,
            "email": "john@example.com"
          }
        ]
      },
      "required_tools": [
        "data_processing_validator",
        "data_processing_transformer",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-10T04:27:36.719023",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task validates a dataset against a predefined schema, transforms the valid data into a different format, and finally filters the transformed data based on specified criteria.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_17c78b04",
      "task_type": "simple_task",
      "description": "Process unknown data by validating, transforming, and filtering it to produce an unspecified output.",
      "inputs": {
        "schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "age": {
              "type": "integer"
            }
          }
        },
        "data": [
          {
            "name": "Alice",
            "age": 30
          },
          {
            "name": "Bob",
            "age": "not a number"
          },
          {
            "name": "Charlie",
            "age": 25
          }
        ],
        "options": {}
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "count": 1,
          "filtered_names": [
            "Alice",
            "Charlie"
          ]
        }
      },
      "required_tools": [
        "data_processing_validator",
        "data_processing_transformer",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-10T04:27:40.046998",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task validates a dataset against a defined schema, transforms the validated data into a different format, and filters the transformed data based on specified criteria.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_3e873fac",
      "task_type": "simple_task",
      "description": "Process unknown data by validating, transforming, and filtering it through three tools for output.",
      "inputs": {
        "schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "age": {
              "type": "integer"
            },
            "email": {
              "type": "string",
              "format": "email"
            }
          },
          "required": [
            "name",
            "age",
            "email"
          ]
        },
        "data": [
          {
            "name": "John Doe",
            "age": 30,
            "email": "john.doe@example.com"
          },
          {
            "name": "Jane Smith",
            "age": 25,
            "email": "jane.smith@example.com"
          },
          {
            "name": "Invalid User",
            "age": "not-an-age",
            "email": "invalid.email"
          }
        ],
        "options": {}
      },
      "expected_outputs": {
        "success": true,
        "filtered_data": [
          {
            "name": "John Doe",
            "age": 30,
            "email": "john.doe@example.com"
          },
          {
            "name": "Jane Smith",
            "age": 25,
            "email": "jane.smith@example.com"
          }
        ]
      },
      "required_tools": [
        "data_processing_validator",
        "data_processing_transformer",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-10T04:27:44.238605",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task validates incoming raw data against a predefined schema, transforms it into a structured JSON format, and filters the data based on specified criteria to output a refined dataset.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_eca413ee",
      "task_type": "simple_task",
      "description": "Process unknown data through three steps: parse, validate, and transform to an unspecified format.",
      "inputs": {
        "source": "path/to/data.csv",
        "schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer"
            },
            "name": {
              "type": "string"
            },
            "email": {
              "type": "string",
              "format": "email"
            }
          },
          "required": [
            "id",
            "name",
            "email"
          ]
        },
        "data": null
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": [],
        "transformed_data": "path/to/output.json"
      },
      "required_tools": [
        "data_processing_parser",
        "data_processing_validator",
        "data_processing_transformer"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-10T04:27:46.925953",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task involves parsing raw data from a CSV file, validating the structured data against a predefined schema, and then transforming the validated data into a JSON format.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_69b213af",
      "task_type": "simple_task",
      "description": "Process unknown data by validating, transforming formats, and filtering results through three tools.",
      "inputs": {
        "schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer"
            },
            "name": {
              "type": "string"
            },
            "age": {
              "type": "integer"
            }
          }
        },
        "data": [
          {
            "id": 1,
            "name": "Alice",
            "age": 30
          },
          {
            "id": 2,
            "name": "Bob",
            "age": 25
          }
        ],
        "options": {}
      },
      "expected_outputs": {
        "success": true,
        "metadata": {},
        "filtered_data": [
          {
            "id": 1,
            "name": "Alice",
            "age": 30
          }
        ]
      },
      "required_tools": [
        "data_processing_validator",
        "data_processing_transformer",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-10T04:27:49.947411",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task validates a dataset against a predefined schema, transforms the validated data from JSON format to XML format, and filters the transformed data based on specific criteria.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_9906a3cc",
      "task_type": "simple_task",
      "description": "Process unknown data by validating, transforming formats, and filtering results through three tools.",
      "inputs": {
        "schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "age": {
              "type": "integer"
            }
          }
        },
        "data": [
          {
            "name": "Alice",
            "age": 30
          },
          {
            "name": "Bob",
            "age": "twenty-five"
          }
        ],
        "input_format": "json",
        "output_format": "xml",
        "options": {},
        "filter_criteria": {
          "age": {
            "greater_than": 25
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "filtered_data": "<data><person><name>Alice</name><age>30</age></person></data>"
      },
      "required_tools": [
        "data_processing_validator",
        "data_processing_transformer",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-10T04:27:53.526823",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task validates a dataset against a predefined schema, transforms the valid dataset into a different format, and filters the transformed data based on specified criteria.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_f5e3cd0d",
      "task_type": "simple_task",
      "description": "Process unknown data by validating, transforming formats, and filtering results through three tools.",
      "inputs": {
        "schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "age": {
              "type": "integer"
            },
            "email": {
              "type": "string"
            }
          }
        },
        "data": [
          {
            "name": "Alice",
            "age": 30,
            "email": "alice@example.com"
          },
          {
            "name": "Bob",
            "age": "not_a_number",
            "email": "bob@example.com"
          }
        ],
        "options": {}
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": [],
        "transformed_data": [
          {
            "name": "Alice",
            "age": 30,
            "email": "alice@example.com"
          }
        ],
        "metadata": {}
      },
      "required_tools": [
        "data_processing_validator",
        "data_processing_transformer",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-10T04:27:57.271118",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task validates a dataset against a predefined schema, transforms the validated data into a different format, and then filters the transformed data based on specified criteria.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_8966bbe9",
      "task_type": "simple_task",
      "description": "Process unknown data by validating, transforming formats, and filtering results through three tools.",
      "inputs": {
        "schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "age": {
              "type": "number"
            },
            "email": {
              "type": "string"
            }
          }
        },
        "data": [
          {
            "name": "John Doe",
            "age": 30,
            "email": "john.doe@example.com"
          },
          {
            "name": "Jane Doe",
            "age": "twenty-five",
            "email": "jane.doe@example.com"
          }
        ]
      },
      "expected_outputs": {
        "success": true,
        "metadata": {}
      },
      "required_tools": [
        "data_processing_validator",
        "data_processing_transformer",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-10T04:28:03.075502",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task validates a dataset against a predefined schema, transforms the valid data into a different format, and then filters the transformed data based on specified criteria.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_0f53bcfb",
      "task_type": "simple_task",
      "description": "Process unknown data through three steps: validate, transform format, and filter results.",
      "inputs": {
        "schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "age": {
              "type": "integer"
            }
          }
        },
        "data": [
          {
            "name": "John Doe",
            "age": 30
          },
          {
            "name": "Jane Smith",
            "age": "twenty-five"
          }
        ],
        "options": {}
      },
      "expected_outputs": {
        "success": true,
        "filtered_data": [
          {
            "name": "John Doe",
            "age": 30
          }
        ]
      },
      "required_tools": [
        "data_processing_validator",
        "data_processing_transformer",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-10T04:28:06.662372",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task validates raw data against a defined schema, transforms the valid data into a specified format, and filters the transformed data based on given criteria.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_001164f7",
      "task_type": "simple_task",
      "description": "Process unknown data through three steps: validate, transform format, and filter results.",
      "inputs": {
        "schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "age": {
              "type": "integer"
            },
            "email": {
              "type": "string"
            }
          }
        },
        "data": [
          {
            "name": "John Doe",
            "age": 30,
            "email": "john.doe@example.com"
          },
          {
            "name": "Jane Smith",
            "age": 25,
            "email": "jane.smith@example.com"
          }
        ]
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "filtered_count": 1,
          "message": "Filtering applied successfully"
        }
      },
      "required_tools": [
        "data_processing_validator",
        "data_processing_transformer",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-10T04:28:10.562565",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task validates a dataset against a predefined schema, transforms the validated data from JSON to XML format, and then filters the transformed data based on specified criteria.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_ba3e02b1",
      "task_type": "basic_task",
      "description": "Read the input data, parse it, and filter the results to produce the final output.",
      "inputs": {
        "source": "path/to/user_data.csv",
        "options": {
          "delimiter": ",",
          "header": true
        }
      },
      "expected_outputs": {
        "success": true,
        "data": [
          {
            "name": "John Doe",
            "age": 30,
            "location": "New York"
          },
          {
            "name": "Jane Smith",
            "age": 28,
            "location": "Los Angeles"
          }
        ],
        "metadata": {
          "record_count": 2,
          "filter_criteria": "age > 25 and location is not null"
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-10T04:27:38.573025",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes a CSV file containing user information, extracts the relevant data, and filters it based on specific criteria such as age and location. The final output is a structured dataset of users who meet the criteria.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_946da92e",
      "task_type": "basic_task",
      "description": "Read the unknown input, parse it, and filter the data to produce the unspecified output.",
      "inputs": {
        "source": "path/to/input_data.csv",
        "options": {
          "filter": {
            "column": "status",
            "value": "active"
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "filtered_count": 100,
          "total_count": 200
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-10T04:27:42.015236",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task reads data from a CSV file, parses it into a structured format, and then applies filtering based on specified criteria to refine the dataset.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_59171e9c",
      "task_type": "basic_task",
      "description": "Read the input data, parse it, and filter the results to produce the final output.",
      "inputs": {
        "source": "data/input_file.csv",
        "options": {
          "transform": {
            "filter": {
              "criteria": "column_name == 'desired_value'"
            }
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "record_count": 100
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-10T04:27:45.523998",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task reads data from a CSV file, parses it into a structured format, and then filters the parsed data based on specified criteria. The final output is a refined dataset containing only the relevant entries.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_9cfec8e6",
      "task_type": "basic_task",
      "description": "Read the input data, parse it, and filter the results for final output.",
      "inputs": {
        "source": "path/to/data.csv",
        "options": {
          "delimiter": ",",
          "header": true
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "filtered_count": 150
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-10T04:27:47.995101",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task involves reading data from a CSV file, parsing the raw data into a structured format, and then filtering the structured data based on specific criteria to create a refined dataset.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_ea2546c9",
      "task_type": "basic_task",
      "description": "Read the input data, parse it, and filter the results to produce the final output.",
      "inputs": {
        "source": "path/to/user_data.csv",
        "options": {
          "transform": {
            "filter_by_city": "New York"
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "filtered_count": 100
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-10T04:27:50.869907",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task reads a CSV file containing user data, parses it into a structured format, and then filters the data based on specific criteria (e.g., users from a particular city).",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_967431f8",
      "task_type": "basic_task",
      "description": "Read the input data, parse it, and filter the results to produce the final output.",
      "inputs": {
        "source": "path/to/data.csv",
        "options": {
          "filter": {
            "column": "status",
            "value": "active"
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "filtered_count": 150
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-10T04:27:53.224437",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task retrieves data from a CSV file, parses it into a structured format, and filters the data based on specific criteria.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_26512462",
      "task_type": "basic_task",
      "description": "Read the input data, parse it, and filter the results to produce the final output.",
      "inputs": {
        "source": "data/input_file.csv",
        "options": {
          "transform": {
            "filter_column": "status",
            "filter_value": "active"
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "data": [
          {
            "id": 1,
            "name": "John Doe",
            "status": "active"
          },
          {
            "id": 2,
            "name": "Jane Smith",
            "status": "active"
          }
        ],
        "metadata": {
          "row_count": 2
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-10T04:27:56.755280",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task reads data from a CSV file, parses it into a structured format, and then filters the data based on specified criteria to produce a refined dataset.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_88f40689",
      "task_type": "basic_task",
      "description": "Read the input data, parse it, and filter the results to generate the final output.",
      "inputs": {
        "source": "path/to/data.csv",
        "options": {
          "transform": {
            "filter": {
              "criteria": "age > 30"
            }
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "record_count": 100
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-10T04:27:59.135583",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task reads data from a CSV file, parses it into a structured format, and filters the data based on specified criteria.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_e0e497ae",
      "task_type": "basic_task",
      "description": "Read the input file, parse the data, and filter the results for output.",
      "inputs": {
        "source": "path/to/user_data.csv",
        "options": {
          "filter": {
            "age_threshold": 18
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "data": [
          {
            "name": "John Doe",
            "age": 25
          },
          {
            "name": "Jane Smith",
            "age": 30
          }
        ],
        "metadata": {
          "record_count": 2
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-10T04:28:07.835831",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task reads a CSV file containing user data, parses it into a structured format, and then filters the data to only include users over a specified age, returning the filtered list of users.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_570c8aa6",
      "task_type": "basic_task",
      "description": "Read the input data, parse it, and filter the results to produce the final output.",
      "inputs": {
        "source": "data/input_file.csv",
        "options": {
          "transform": {
            "filter": {
              "criteria": "age > 30"
            }
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "filtered_count": 150
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-10T04:28:11.120837",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task reads data from a CSV file, parses it into a structured format, and filters the data based on specific criteria.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_4d1378e7",
      "task_type": "multi_stage_pipeline",
      "description": "Process unknown data through five tools to produce an unspecified output format.",
      "inputs": {
        "source": "data/input_file.csv",
        "options": {
          "delimiter": ",",
          "header": true
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "report_generated": true,
          "aggregated_data": "aggregated report data"
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter",
        "computation_analyzer",
        "data_processing_aggregator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "hard",
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-10T04:27:36.670919",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes raw data from a CSV file, transforms it into JSON format, filters the data based on specific criteria, analyzes the computation results, and finally aggregates the findings into a structured report.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_fab19687",
      "task_type": "multi_stage_pipeline",
      "description": "Process unknown data through five tools: read, filter, validate, transform, and analyze for insights.",
      "inputs": {
        "source": "data/input_data.csv",
        "options": {}
      },
      "expected_outputs": {
        "success": true,
        "result": {
          "average": 50,
          "trend": "increasing"
        },
        "metadata": {
          "timestamp": "2023-10-15T12:00:00Z"
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_filter",
        "data_processing_validator",
        "data_processing_transformer",
        "computation_analyzer"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "hard",
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-10T04:27:39.511825",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This multi-stage pipeline processes raw data from a file, filters it based on specific criteria, validates the filtered data, transforms it into a different format, and finally performs statistical analysis on the results.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_f732811a",
      "task_type": "multi_stage_pipeline",
      "description": "Process unknown input data through five tools to produce an unspecified output result.",
      "inputs": {
        "source": "data/input.csv",
        "options": {
          "delimiter": ",",
          "header": true
        }
      },
      "expected_outputs": {
        "success": true,
        "result": {
          "statistics": {
            "mean": 50,
            "median": 45,
            "mode": 42
          },
          "metadata": {
            "analysis_time": "2023-10-03T12:00:00Z"
          }
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter",
        "data_processing_validator",
        "computation_analyzer"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "hard",
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-10T04:27:42.950106",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task involves processing raw data from a CSV file, transforming it into a structured JSON format, filtering based on specific criteria, and then validating the processed data against a predefined schema. Finally, the valid data will be analyzed to generate statistical insights.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_4f662dce",
      "task_type": "multi_stage_pipeline",
      "description": "Process unknown data through five steps: read, validate, transform, analyze, and write output.",
      "inputs": {
        "source": "data/input_data.csv",
        "options": {}
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "output_file": "data/output_data.json",
          "analysis_report": {
            "mean": 10,
            "standard_deviation": 2
          }
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_validator",
        "data_processing_transformer",
        "computation_analyzer",
        "file_operations_writer"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "hard",
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-10T04:27:45.982292",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This multi-stage pipeline processes raw data from a CSV file, validates its structure, transforms it into JSON format, performs statistical analysis, and finally writes the processed data to an output file.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_6375065e",
      "task_type": "multi_stage_pipeline",
      "description": "Process unknown input data through six tools to produce an unspecified output result.",
      "inputs": {
        "source": "path/to/input_data.csv",
        "options": {
          "delimiter": ",",
          "hasHeader": true
        }
      },
      "expected_outputs": {
        "success": true,
        "result": {
          "statistical_insights": {
            "mean": 50,
            "median": 45,
            "standard_deviation": 10
          }
        },
        "metadata": {
          "analysis_time": "2023-10-10T12:00:00Z",
          "data_size": 1000
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter",
        "data_processing_validator",
        "computation_calculator",
        "computation_analyzer"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "hard",
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-10T04:27:49.893334",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This multi-stage pipeline processes raw data from a CSV file, transforms it into JSON format, filters it based on specific criteria, validates the filtered data against a schema, performs calculations on validated data, and finally analyzes the computation results to generate insights.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_1967c13e",
      "task_type": "multi_stage_pipeline",
      "description": "Process unknown input data through five tools to produce an unspecified output format.",
      "inputs": {
        "source": "path/to/raw_data.json",
        "options": {}
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": [],
        "metadata": {
          "validation_time": "2023-10-03T12:00:00Z",
          "validator_version": "1.0"
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter",
        "data_processing_transformer",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "hard",
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-10T04:27:53.058765",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This multi-stage pipeline is designed to read raw data from a JSON file, parse it into a structured format, filter the data based on specific criteria, transform the filtered data into XML format, and finally validate the transformed data against a defined schema to ensure its integrity.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_5ef9c16b",
      "task_type": "multi_stage_pipeline",
      "description": "Process unknown data through four tools: read, filter, transform, and analyze for insights.",
      "inputs": {
        "source": "data/input_file.csv",
        "options": {
          "delimiter": ",",
          "header": true
        }
      },
      "expected_outputs": {
        "success": true,
        "result": {
          "mean": 50.5,
          "std_dev": 10.2,
          "trend": "increasing"
        },
        "metadata": {
          "analysis_time": "2023-10-10T12:30:00Z"
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_filter",
        "data_processing_transformer",
        "computation_analyzer"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "hard",
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-10T04:27:57.044161",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This multi-stage pipeline processes raw data from a CSV file, filters it based on specific criteria, transforms it to JSON format, and then performs statistical analysis on the processed data.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_c5d8140d",
      "task_type": "multi_stage_pipeline",
      "description": "Process unknown input data through five tools to produce an unspecified output result.",
      "inputs": {
        "source": "path/to/raw_data.csv",
        "options": {}
      },
      "expected_outputs": {
        "success": true,
        "result": {
          "mean": 50,
          "median": 45,
          "standard_deviation": 10
        },
        "metadata": {
          "analysis_time": "2023-10-01T12:00:00Z",
          "data_points": 100
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_validator",
        "data_processing_transformer",
        "computation_analyzer"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "hard",
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-10T04:28:03.052449",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This multi-stage pipeline processes raw data from a CSV file by parsing it, validating the structured data against a schema, transforming it into a different format, and finally performing a statistical analysis on the transformed data.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_f7e91d73",
      "task_type": "multi_stage_pipeline",
      "description": "Process unknown input data through four tools: read, filter, validate, and transform to unspecified output.",
      "inputs": {
        "source": "path/to/input/data.csv",
        "options": {
          "delimiter": ",",
          "header": true
        }
      },
      "expected_outputs": {
        "success": true,
        "transformed_data": {
          "field1": "value1",
          "field2": "value2"
        },
        "metadata": {
          "operation": "transformation",
          "time_taken": "2 seconds"
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_filter",
        "data_processing_validator",
        "data_processing_transformer"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "hard",
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-10T04:28:08.123191",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This multi-stage pipeline processes raw data from a CSV file, filters it based on specific criteria, validates the filtered data against a schema, and finally transforms the validated data into a JSON format for further analysis.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_4dd637c1",
      "task_type": "multi_stage_pipeline",
      "description": "Process unknown input data through five tools to produce an unspecified output result.",
      "inputs": {
        "source": "path/to/input/data.csv",
        "options": {}
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "file_written": "path/to/output/results.json"
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_validator",
        "data_processing_transformer",
        "computation_analyzer",
        "file_operations_writer"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "hard",
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-10T04:28:11.143210",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This multi-stage pipeline processes raw data from a CSV file, validates it against a schema, transforms it into a JSON format, analyzes computation results, and finally writes the results to a new file.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_f97de6ef",
      "task_type": "multi_stage_pipeline",
      "description": "Process unknown input data through four tools: read, validate, filter, and analyze for insights.",
      "inputs": {
        "source": "path/to/raw_data.json",
        "schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer"
            },
            "name": {
              "type": "string"
            },
            "value": {
              "type": "number"
            }
          },
          "required": [
            "id",
            "name",
            "value"
          ]
        },
        "data": {}
      },
      "expected_outputs": {
        "success": true,
        "result": {
          "mean": 50,
          "median": 45,
          "standard_deviation": 10
        },
        "metadata": {
          "analysis_time": "2023-10-01T12:00:00Z"
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_validator",
        "data_processing_filter",
        "computation_analyzer"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "hard",
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-10T04:27:39.161073",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This multi-stage pipeline processes raw data from a JSON file, validates it against a predefined schema, filters the valid data based on specific criteria, and finally analyzes the results to generate statistical insights.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_8d80c29b",
      "task_type": "multi_stage_pipeline",
      "description": "Process unknown input data through four tools: parse, validate, calculate, and analyze for unspecified output.",
      "inputs": {
        "source": "path/to/raw_data.csv",
        "schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer"
            },
            "value": {
              "type": "number"
            }
          },
          "required": [
            "id",
            "value"
          ]
        },
        "data": {
          "raw_data": "parsed_data"
        },
        "precision": 2,
        "options": {}
      },
      "expected_outputs": {
        "success": true,
        "result": {
          "average": 50.5,
          "sum": 102.0
        },
        "metadata": {
          "execution_time": "200ms"
        }
      },
      "required_tools": [
        "data_processing_parser",
        "data_processing_validator",
        "computation_calculator",
        "computation_analyzer"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "hard",
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-10T04:27:42.701738",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task involves processing raw CSV data to extract relevant information, validate it against a schema, perform calculations, and finally generate a report of the analyzed results.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_63187468",
      "task_type": "multi_stage_pipeline",
      "description": "Process unknown input data through five tools to produce an unspecified output result.",
      "inputs": {
        "source": "data/input.csv",
        "options": {}
      },
      "expected_outputs": {
        "success": true,
        "result": {
          "mean": 50,
          "median": 45,
          "std_dev": 10
        },
        "metadata": {}
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter",
        "data_processing_transformer",
        "computation_analyzer"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "hard",
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-10T04:27:45.774596",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task involves reading raw data from a CSV file, parsing it into a structured format, filtering the data based on specific criteria, transforming it into JSON format, and finally analyzing the computed results for statistical insights.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_c16797cb",
      "task_type": "multi_stage_pipeline",
      "description": "Process unknown input data through five tools to produce an unspecified output result.",
      "inputs": {
        "source": "path/to/input/data.csv",
        "options": {}
      },
      "expected_outputs": {
        "success": true,
        "result": {
          "insights": "Statistical trends and analysis results here"
        },
        "metadata": {}
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_validator",
        "computation_calculator",
        "computation_analyzer"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "hard",
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-10T04:27:48.509329",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task involves a multi-stage pipeline for processing raw data from a CSV file, transforming it into JSON format, validating its structure, performing computations on the validated data, and finally analyzing the results for insights.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_b04b4bf4",
      "task_type": "multi_stage_pipeline",
      "description": "Process unknown data through five tools to produce an unspecified output format.",
      "inputs": {
        "source": "path/to/input/data.json",
        "options": {
          "error_handling": true
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "aggregated_result": "summary statistics about the computations"
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter",
        "computation_calculator",
        "data_processing_aggregator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "hard",
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-10T04:27:51.185058",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task involves reading data from a JSON file, parsing it into a structured format, filtering the parsed data based on specific criteria, performing computations on the filtered data, and finally aggregating the results for analysis.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_56d401b1",
      "task_type": "multi_stage_pipeline",
      "description": "Process unknown input data through five tools to produce an unspecified output format.",
      "inputs": {
        "source": "path/to/input.csv",
        "options": {}
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "file_written": "path/to/output.json",
          "analysis_time": "2 seconds"
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter",
        "computation_analyzer",
        "file_operations_writer"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "hard",
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-10T04:27:54.213908",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task involves processing raw data from a CSV file, transforming it into a structured JSON format, filtering specific records, and performing analysis on the filtered results. Finally, the analysis results are written to a new JSON file for further use.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_57e6c247",
      "task_type": "multi_stage_pipeline",
      "description": "Process unknown input data through six tools to produce an unspecified output result.",
      "inputs": {
        "source": "data/input_file.csv",
        "options": {
          "delimiter": ",",
          "columns": [
            "id",
            "value",
            "category"
          ]
        }
      },
      "expected_outputs": {
        "success": true,
        "result": {
          "mean": 10.5,
          "max": 20,
          "min": 1
        },
        "metadata": {
          "timestamp": "2023-10-15T12:00:00Z"
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter",
        "data_processing_validator",
        "computation_calculator",
        "computation_analyzer"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "hard",
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-10T04:27:58.815272",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task involves a multi-stage data processing pipeline that reads raw data from a file, parses it into a structured format, filters the data based on specific criteria, validates the filtered data against a defined schema, performs calculations on the validated data, and finally analyzes the computation results to provide insights.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_1b17922a",
      "task_type": "multi_stage_pipeline",
      "description": "Process unknown input data through five tools to produce an unspecified output result.",
      "inputs": {
        "source": "path/to/input_data.csv",
        "options": {}
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter",
        "data_processing_transformer",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "hard",
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-10T04:28:03.346905",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task involves reading raw data from a CSV file, parsing it into a structured format, filtering the parsed data based on specific criteria, transforming the filtered data into JSON format, and finally validating the transformed data against a predefined schema to ensure its correctness and integrity.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_10d284ea",
      "task_type": "multi_stage_pipeline",
      "description": "Process unknown input data through five tools to produce an unspecified output result.",
      "inputs": {
        "source": "path/to/input/data.csv",
        "schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "age": {
              "type": "integer"
            },
            "email": {
              "type": "string",
              "format": "email"
            }
          },
          "required": [
            "name",
            "age",
            "email"
          ]
        },
        "data": {}
      },
      "expected_outputs": {
        "success": true,
        "result": {
          "statistics": {
            "average_age": 30,
            "total_entries": 100
          }
        },
        "metadata": {}
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_validator",
        "data_processing_transformer",
        "computation_analyzer",
        "file_operations_writer"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "hard",
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-10T04:28:08.165797",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This pipeline processes raw data from a CSV file, validates it against a predefined schema, transforms it into JSON format, performs statistical analysis on the data, and finally writes the processed results to an output file.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_1a9995be",
      "task_type": "multi_stage_pipeline",
      "description": "Process unknown input data through 6 tools to produce an unspecified output result.",
      "inputs": {
        "source": "path/to/input/data.csv",
        "options": {}
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "operation": "write",
          "timestamp": "2023-10-01T12:00:00Z"
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_transformer",
        "computation_analyzer",
        "data_processing_validator",
        "file_operations_writer"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "hard",
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-10T04:28:12.209121",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This multi-stage pipeline is designed to read raw data from a CSV file, parse and transform it into a structured format, analyze the computation results, and then validate the data against a predefined schema before writing the final results to an output file.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_4d8d1f83",
      "task_type": "simple_task",
      "description": "Process unknown data by validating, transforming, and filtering it to generate an unspecified output.",
      "inputs": {
        "schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "age": {
              "type": "integer"
            },
            "email": {
              "type": "string"
            }
          }
        },
        "data": [
          {
            "name": "John Doe",
            "age": 30,
            "email": "john.doe@example.com"
          },
          {
            "name": "Jane Smith",
            "age": "twenty-five",
            "email": "jane.smith@example.com"
          }
        ]
      },
      "expected_outputs": {
        "success": true,
        "metadata": {},
        "filtered_data": [
          {
            "name": "John Doe",
            "age": 30,
            "email": "john.doe@example.com"
          }
        ]
      },
      "required_tools": [
        "data_processing_validator",
        "data_processing_transformer",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-10T04:27:36.960007",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task validates a dataset against a predefined schema, transforms the valid data into a different format, and then filters the transformed data based on specified criteria.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:40"
    },
    {
      "instance_id": "task_53bc31e7",
      "task_type": "simple_task",
      "description": "Process unknown data through three steps: validate, transform format, and filter results.",
      "inputs": {
        "schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "age": {
              "type": "integer"
            },
            "email": {
              "type": "string"
            }
          }
        },
        "data": [
          {
            "name": "John Doe",
            "age": 30,
            "email": "john.doe@example.com"
          },
          {
            "name": "Jane Smith",
            "age": 25,
            "email": "jane.smith@example.com"
          },
          {
            "name": "Invalid User",
            "age": "not a number",
            "email": "invalid.email"
          }
        ]
      },
      "expected_outputs": {
        "success": true,
        "transformed_data": "<users><user><name>John Doe</name><age>30</age><email>john.doe@example.com</email></user><user><name>Jane Smith</name><age>25</age><email>jane.smith@example.com</email></user></users>",
        "metadata": {}
      },
      "required_tools": [
        "data_processing_validator",
        "data_processing_transformer",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-10T04:27:41.096779",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task validates a dataset against a predefined schema, transforms the validated data from JSON format to XML format, and then filters the transformed data based on specific criteria.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_74fbf4a8",
      "task_type": "simple_task",
      "description": "Process unknown data by validating, transforming formats, and filtering results through three tools.",
      "inputs": {
        "schema": {
          "type": "object",
          "properties": {
            "field1": {
              "type": "string"
            },
            "field2": {
              "type": "number"
            }
          }
        },
        "data": [
          {
            "field1": "example1",
            "field2": 123
          },
          {
            "field1": "example2",
            "field2": 456
          }
        ]
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "filtered_count": 1
        }
      },
      "required_tools": [
        "data_processing_validator",
        "data_processing_transformer",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-10T04:27:43.789003",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task validates a dataset against a predefined schema, transforms the valid data into a different format, and then filters the transformed data based on specified criteria.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_675cc8af",
      "task_type": "simple_task",
      "description": "Process unknown data using three tools: validate, transform format, and filter results.",
      "inputs": {
        "schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "age": {
              "type": "integer"
            },
            "email": {
              "type": "string"
            }
          }
        },
        "data": [
          {
            "name": "John Doe",
            "age": 30,
            "email": "john@example.com"
          },
          {
            "name": "Jane Doe",
            "age": 25,
            "email": "jane@example.com"
          },
          {
            "name": "Invalid User",
            "age": "not a number",
            "email": "invalid@example.com"
          }
        ]
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": [],
        "transformed_data": [
          {
            "fullName": "John Doe",
            "years": 30,
            "contact": "john@example.com"
          },
          {
            "fullName": "Jane Doe",
            "years": 25,
            "contact": "jane@example.com"
          }
        ],
        "filtered_data": [
          {
            "fullName": "John Doe",
            "years": 30,
            "contact": "john@example.com"
          }
        ]
      },
      "required_tools": [
        "data_processing_validator",
        "data_processing_transformer",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-10T04:27:47.914555",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task validates a dataset against a predefined schema, transforms the validated data into a different format, and then filters the transformed data based on specified criteria.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_461d2a8a",
      "task_type": "simple_task",
      "description": "Process unknown input data through three tools: validate, transform format, and filter results.",
      "inputs": {
        "schema": {
          "type": "object",
          "properties": {
            "field1": {
              "type": "string"
            },
            "field2": {
              "type": "integer"
            }
          }
        },
        "data": [
          {
            "field1": "value1",
            "field2": 10
          },
          {
            "field1": "value2",
            "field2": 20
          },
          {
            "field1": "value3",
            "field2": "invalid"
          }
        ],
        "options": {}
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "filtered_count": 2
        }
      },
      "required_tools": [
        "data_processing_validator",
        "data_processing_transformer",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-10T04:27:50.910935",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task validates a dataset against a predefined schema, transforms the validated data from JSON to XML format, and then filters the transformed data based on specified criteria.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_03e24716",
      "task_type": "simple_task",
      "description": "Process unknown data by validating, transforming formats, and filtering results through three tools.",
      "inputs": {
        "schema": {
          "type": "object",
          "properties": {
            "field1": {
              "type": "string"
            },
            "field2": {
              "type": "number"
            }
          }
        },
        "data": [
          {
            "field1": "value1",
            "field2": 10
          },
          {
            "field1": "value2",
            "field2": 20
          }
        ],
        "input_format": "json",
        "output_format": "xml",
        "options": {},
        "filter_options": {
          "criteria": {
            "field2": {
              "$gt": 15
            }
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "filtered_data": "<data><item><field1>value2</field1><field2>20</field2></item></data>"
      },
      "required_tools": [
        "data_processing_validator",
        "data_processing_transformer",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-10T04:27:54.391036",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task validates a dataset against a predefined schema, transforms the validated data into a different format, and then filters the transformed data based on specified criteria.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_79dff6a7",
      "task_type": "simple_task",
      "description": "Process unknown data by validating it, then transform it into an unspecified format.",
      "inputs": {
        "schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "age": {
              "type": "integer"
            }
          }
        },
        "data": [
          {
            "id": "1",
            "name": "John Doe",
            "age": 30
          },
          {
            "id": "2",
            "name": "Jane Smith",
            "age": 25
          }
        ],
        "options": {}
      },
      "expected_outputs": {
        "success": true,
        "transformed_data": [
          {
            "Id": "1",
            "FullName": "John Doe",
            "Age": 30
          },
          {
            "Id": "2",
            "FullName": "Jane Smith",
            "Age": 25
          }
        ],
        "metadata": {}
      },
      "required_tools": [
        "data_processing_validator",
        "data_processing_transformer"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-10T04:27:58.146875",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task validates a dataset against a predefined schema, then transforms the validated data into a different format for further processing.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_bc5cf944",
      "task_type": "simple_task",
      "description": "Process unknown data by validating, transforming formats, and filtering results through three tools.",
      "inputs": {
        "schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "age": {
              "type": "integer"
            }
          }
        },
        "data": [
          {
            "name": "John",
            "age": 30
          },
          {
            "name": "Jane",
            "age": 25
          },
          {
            "name": "Doe",
            "age": "not a number"
          }
        ],
        "input_format": "json",
        "output_format": "xml",
        "options": {},
        "filter_options": {
          "age": {
            "$gte": 18
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "filtered_data": [
          {
            "name": "John",
            "age": 30
          },
          {
            "name": "Jane",
            "age": 25
          }
        ]
      },
      "required_tools": [
        "data_processing_validator",
        "data_processing_transformer",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-10T04:28:04.430636",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task validates a dataset against a defined schema, transforms the validated data into a different format, and finally filters the transformed data based on specified criteria.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_beab1d8c",
      "task_type": "simple_task",
      "description": "Process unknown data by validating, transforming formats, and filtering results through three tools.",
      "inputs": {
        "schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "age": {
              "type": "integer"
            },
            "email": {
              "type": "string"
            }
          }
        },
        "data": [
          {
            "name": "Alice",
            "age": 30,
            "email": "alice@example.com"
          },
          {
            "name": "Bob",
            "age": "twenty-five",
            "email": "bob@example.com"
          }
        ],
        "options": {}
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": [],
        "transformed_data": [
          {
            "fullName": "Alice",
            "userAge": 30,
            "userEmail": "alice@example.com"
          }
        ],
        "metadata": {}
      },
      "required_tools": [
        "data_processing_validator",
        "data_processing_transformer",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-10T04:28:08.591064",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task validates a dataset against a predefined schema, transforms the valid data into a different format, and finally filters the transformed data based on specific criteria.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_f974c09c",
      "task_type": "simple_task",
      "description": "Process unknown data by validating, transforming formats, and filtering results through three tools.",
      "inputs": {
        "schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "age": {
              "type": "integer"
            },
            "email": {
              "type": "string"
            }
          }
        },
        "data": [
          {
            "name": "John Doe",
            "age": 30,
            "email": "john@example.com"
          },
          {
            "name": "Jane Doe",
            "age": 25,
            "email": "jane@example.com"
          },
          {
            "name": "Invalid User",
            "age": "not a number",
            "email": "invalid@example.com"
          }
        ]
      },
      "expected_outputs": {
        "success": true,
        "valid": false,
        "errors": [
          {
            "field": "age",
            "message": "Expected integer but got string"
          }
        ],
        "filtered_data": [
          {
            "name": "John Doe",
            "age": 30,
            "email": "john@example.com"
          },
          {
            "name": "Jane Doe",
            "age": 25,
            "email": "jane@example.com"
          }
        ]
      },
      "required_tools": [
        "data_processing_validator",
        "data_processing_transformer",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-10T04:28:13.061764",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task validates a dataset against a predefined schema, transforms it to a different format, and finally filters the transformed data based on specific criteria.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_ac278ee8",
      "task_type": "api_integration",
      "description": "Integrate an API to fetch, validate, and parse unknown data into an unspecified format.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "options": {}
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": [],
        "data": {
          "parsed_data": "Structured data ready for processing"
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "data_processing_parser"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:27:36.624977",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task fetches data from a specified API endpoint, validates the retrieved data against a defined schema, and processes the valid data for further use.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_0a0c39ae",
      "task_type": "api_integration",
      "description": "Fetch unknown data, validate it, and post the processed result in an unspecified format.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer"
            },
            "name": {
              "type": "string"
            },
            "email": {
              "type": "string",
              "format": "email"
            }
          },
          "required": [
            "id",
            "name",
            "email"
          ]
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "message": "Data posted successfully",
          "timestamp": "2023-10-01T12:00:00Z"
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "network_poster"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:27:40.855802",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task fetches data from an external API, validates the data against a predefined schema, and processes it to ensure compliance and correctness before sending it to a specified destination.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_77506a5f",
      "task_type": "api_integration",
      "description": "Integrate an API to fetch, validate, and parse unknown data into an unspecified format.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "options": {}
      },
      "expected_outputs": {
        "success": true,
        "data": {
          "parsed_data": "structured data output"
        },
        "metadata": {
          "operation_time": "2023-10-01T12:00:00Z"
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "data_processing_parser"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:27:44.974995",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task fetches data from a specified API, validates the retrieved data against a defined schema, and processes it into a structured format for further use.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_bd1a6b3f",
      "task_type": "api_integration",
      "description": "Integrate an API to fetch data, validate it, and parse it into a structured format.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "options": {}
      },
      "expected_outputs": {
        "success": true,
        "data": {
          "parsed_data": "structured format of the fetched data"
        },
        "metadata": {
          "validation_status": "valid",
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "data_processing_parser"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:27:47.762446",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task fetches data from a specified API, validates it against a schema, and processes it into a structured format for further use.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_8ceb6937",
      "task_type": "api_integration",
      "description": "Retrieve unknown data, validate it, and parse it through three tools to produce an unspecified result.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer"
            },
            "name": {
              "type": "string"
            },
            "email": {
              "type": "string",
              "format": "email"
            }
          },
          "required": [
            "id",
            "name",
            "email"
          ]
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": [],
        "data": {
          "parsed_data": [
            {
              "id": 1,
              "name": "John Doe",
              "email": "john.doe@example.com"
            },
            {
              "id": 2,
              "name": "Jane Smith",
              "email": "jane.smith@example.com"
            }
          ]
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "data_processing_parser"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:27:52.628378",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task integrates an API to fetch data from a specified source, validate it against a defined schema, and then process the valid data for further use.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_3d7bceaf",
      "task_type": "api_integration",
      "description": "Integrate an API to fetch data, validate it, and parse it into a structured format.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "options": {}
      },
      "expected_outputs": {
        "success": true,
        "data": {
          "parsed_data": {
            "field1": "value1",
            "field2": "value2"
          },
          "metadata": {
            "source": "https://api.example.com/data",
            "timestamp": "2023-10-01T12:00:00Z"
          }
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "data_processing_parser"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:27:56.034191",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task fetches data from a specified API endpoint, validates the retrieved data against a predefined schema, and processes it into a structured format for further analysis or storage.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_46437197",
      "task_type": "api_integration",
      "description": "Integrate an API to fetch data, validate it, and transform it into a new format.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer"
            },
            "name": {
              "type": "string"
            },
            "email": {
              "type": "string",
              "format": "email"
            }
          },
          "required": [
            "id",
            "name",
            "email"
          ]
        }
      },
      "expected_outputs": {
        "success": true,
        "transformed_data": {
          "userId": 1,
          "fullName": "John Doe",
          "contact": "john.doe@example.com"
        },
        "metadata": {
          "timestamp": "2023-10-10T12:00:00Z",
          "processing_time": "50ms"
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "data_processing_transformer"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:28:00.884945",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task fetches data from a specified API source, validates the retrieved data against a predefined schema, and processes it to ensure it is in the correct format for further use.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_ba8f64b9",
      "task_type": "api_integration",
      "description": "Retrieve unknown data, validate it, and parse it through three tools to produce unspecified output.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "options": {}
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": [],
        "data": {
          "parsedData": "structured data output"
        },
        "metadata": {
          "operationTime": "timestamp",
          "source": "API"
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "data_processing_parser"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:28:06.175343",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task fetches data from a specified API, validates the retrieved data against a predefined schema, and then processes the valid data for further use.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_7ab9a788",
      "task_type": "api_integration",
      "description": "Integrate an API to fetch data, validate it, and transform it into a new format.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "options": {}
      },
      "expected_outputs": {
        "success": true,
        "transformed_data": {
          "newField1": "value1",
          "newField2": "value2"
        },
        "metadata": {
          "processing_time": "2 seconds",
          "transform_info": "Data transformed from JSON to XML"
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "data_processing_transformer"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:28:09.555443",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task fetches data from a specified API endpoint, validates the retrieved data against a predefined schema, and processes it to transform the data structure before returning the final output.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_9e7f943e",
      "task_type": "api_integration",
      "description": "Fetch unknown data, validate it, and parse it into an unspecified format with no fields.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "options": {}
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "data": {
          "parsed_data": {
            "id": 1,
            "name": "Sample Data",
            "value": "Example Value"
          }
        },
        "metadata": {
          "fetched_at": "2023-10-10T12:00:00Z",
          "data_source": "api.example.com"
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "data_processing_parser"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:28:13.201552",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task fetches data from a specified API endpoint, validates the retrieved data against a predefined schema, and processes the valid data for further use.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_098f93c8",
      "task_type": "multi_stage_pipeline",
      "description": "Process unknown input data through five tools to produce an unspecified output result.",
      "inputs": {
        "source": "data/input_data.csv",
        "options": {
          "filter_criteria": {
            "column": "status",
            "value": "active"
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "result": {
          "statistics": {
            "count": 100,
            "average": 50.5
          },
          "metadata": {
            "analysis_date": "2023-10-01"
          }
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_filter",
        "data_processing_validator",
        "data_processing_aggregator",
        "computation_analyzer"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "hard",
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-10T04:27:37.016479",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task involves processing raw data from a CSV file, filtering it based on specific criteria, validating the filtered data against a predefined schema, and finally aggregating the validated data for statistical analysis.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_9e7bbf8b",
      "task_type": "multi_stage_pipeline",
      "description": "Process unknown input data through four tools: read, validate, transform, and analyze for insights.",
      "inputs": {
        "source": "path/to/raw_data.csv",
        "options": {}
      },
      "expected_outputs": {
        "success": true,
        "result": {
          "mean": 50.5,
          "median": 50,
          "std_dev": 10.2
        },
        "metadata": {
          "analysis_time": "2023-10-01T10:00:00Z"
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_validator",
        "data_processing_transformer",
        "computation_analyzer"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "hard",
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-10T04:27:39.814815",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This multi-stage pipeline processes raw data from a CSV file, validates it against a defined schema, transforms it into a JSON format, and performs statistical analysis on the transformed data.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_17e44ba1",
      "task_type": "multi_stage_pipeline",
      "description": "Process unknown input data through five tools to produce an unspecified output format.",
      "inputs": {
        "source": "path/to/data.csv",
        "schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer"
            },
            "name": {
              "type": "string"
            },
            "value": {
              "type": "number"
            }
          },
          "required": [
            "id",
            "name",
            "value"
          ]
        },
        "data": {}
      },
      "expected_outputs": {
        "success": true,
        "result": {
          "mean": 50,
          "median": 45,
          "std_dev": 10
        }
      },
      "required_tools": [
        "data_processing_parser",
        "data_processing_validator",
        "data_processing_filter",
        "data_processing_transformer",
        "computation_analyzer"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "hard",
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-10T04:27:43.518334",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task involves parsing raw data from a CSV file, validating the parsed data against a predefined schema, filtering the valid data based on specific criteria, transforming the filtered data into JSON format, and finally analyzing the computed results to generate statistical insights.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_16302342",
      "task_type": "multi_stage_pipeline",
      "description": "Process unknown input data through six tools to produce an unspecified output result.",
      "inputs": {
        "source": "data/input_data.csv",
        "options": {
          "delimiter": ",",
          "header": true
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "aggregated_results": {
            "total_entries": 100,
            "valid_entries": 95,
            "filtered_entries": 90,
            "analysis": {
              "mean": 50,
              "median": 48
            }
          }
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_validator",
        "data_processing_filter",
        "data_processing_transformer",
        "computation_analyzer",
        "data_processing_aggregator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "hard",
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-10T04:27:47.479586",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This multi-stage pipeline processes raw data from a CSV file, validates it against a defined schema, filters relevant entries, transforms the data to JSON format, performs statistical analysis, and finally aggregates the results.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_b51eabe4",
      "task_type": "multi_stage_pipeline",
      "description": "Process unknown input data through five tools to produce an unspecified output result.",
      "inputs": {
        "source": "path/to/input/data.csv",
        "schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer"
            },
            "name": {
              "type": "string"
            },
            "value": {
              "type": "number"
            }
          },
          "required": [
            "id",
            "name",
            "value"
          ]
        },
        "options": {}
      },
      "expected_outputs": {
        "success": true,
        "result": {
          "mean": 50.5,
          "count": 100,
          "trend": "increasing"
        },
        "metadata": {
          "operation_time": "200ms",
          "tool_used": "computation_analyzer"
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_validator",
        "data_processing_filter",
        "data_processing_transformer",
        "computation_analyzer"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "hard",
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-10T04:27:51.492667",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task involves processing raw data from a CSV file, validating it against a schema, filtering the validated data, transforming it to a different format, and then performing statistical analysis on the transformed data.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_70291071",
      "task_type": "multi_stage_pipeline",
      "description": "Process unknown input data through 6 tools to produce an unspecified output result.",
      "inputs": {
        "source": "path/to/input/data.csv",
        "options": {
          "delimiter": ",",
          "header": true
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "rows_written": 150,
          "file_path": "path/to/output/data.csv"
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter",
        "data_processing_transformer",
        "computation_analyzer",
        "file_operations_writer"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "hard",
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-10T04:27:55.644210",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task involves reading raw data from a CSV file, parsing it into a structured format, filtering the data based on specific criteria, transforming it into JSON format, analyzing the results, and finally writing the processed data back to a new CSV file.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_9bdc3e4e",
      "task_type": "multi_stage_pipeline",
      "description": "Process unknown input data through five tools to produce an unspecified output result.",
      "inputs": {
        "source": "path/to/raw_data.csv",
        "options": {
          "error_handling": "ignore"
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "data_processing_parser",
        "data_processing_filter",
        "data_processing_transformer",
        "computation_analyzer",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "hard",
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-10T04:27:59.140690",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This multi-stage pipeline processes raw CSV data by parsing, filtering, transforming, analyzing, and finally validating the results to ensure data integrity and quality.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_7a7c3242",
      "task_type": "multi_stage_pipeline",
      "description": "Process unknown input data through four tools: read, parse, filter, and analyze for insights.",
      "inputs": {
        "source": "data/input_file.csv",
        "options": {
          "delimiter": ",",
          "has_header": true
        }
      },
      "expected_outputs": {
        "success": true,
        "result": {
          "mean": 50,
          "median": 48,
          "mode": 45
        },
        "metadata": {
          "analysis_time": "2023-10-01T12:34:56Z"
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter",
        "computation_analyzer"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "hard",
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-10T04:28:04.647907",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task involves reading raw data from a CSV file, parsing it into a structured format, filtering the data based on specific criteria, analyzing the filtered results for statistical insights, and finally outputting the analysis results.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_051b6357",
      "task_type": "multi_stage_pipeline",
      "description": "Process unknown input data through five tools: read, validate, transform, filter, and analyze for insights.",
      "inputs": {
        "source": "path/to/input/data.csv",
        "schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer"
            },
            "name": {
              "type": "string"
            },
            "value": {
              "type": "number"
            }
          },
          "required": [
            "id",
            "name",
            "value"
          ]
        },
        "data": {}
      },
      "expected_outputs": {
        "success": true,
        "result": {
          "average_value": 10.5,
          "max_value": 20,
          "min_value": 5
        },
        "metadata": {}
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_validator",
        "data_processing_transformer",
        "data_processing_filter",
        "computation_analyzer"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "hard",
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-10T04:28:09.871975",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This multi-stage pipeline processes raw data from a CSV file, validating its format, transforming it into JSON, filtering specific entries, and finally analyzing the computation results for insights.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_71a4af3f",
      "task_type": "multi_stage_pipeline",
      "description": "Process unknown input data using five tools to produce an unspecified output result.",
      "inputs": {
        "source": "data/input_file.csv",
        "schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer"
            },
            "name": {
              "type": "string"
            },
            "value": {
              "type": "number"
            }
          },
          "required": [
            "id",
            "name",
            "value"
          ]
        },
        "data": null,
        "options": {}
      },
      "expected_outputs": {
        "success": true,
        "result": {
          "total": 100,
          "count": 10
        },
        "metadata": {}
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_validator",
        "data_processing_filter",
        "computation_calculator",
        "data_processing_aggregator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "hard",
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-10T04:28:14.676639",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task is designed to process raw data from a CSV file, validate it against a schema, filter the validated data based on specific criteria, and perform a computation on the filtered results, ultimately aggregating the outputs for reporting.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_b4643c9d",
      "task_type": "simple_task",
      "description": "Process unknown data by validating, transforming formats, and filtering results through three tools.",
      "inputs": {
        "schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "age": {
              "type": "integer"
            },
            "email": {
              "type": "string"
            }
          },
          "required": [
            "name",
            "age",
            "email"
          ]
        },
        "data": [
          {
            "name": "John Doe",
            "age": 30,
            "email": "john.doe@example.com"
          },
          {
            "name": "Jane Smith",
            "age": "twenty-five",
            "email": "jane.smith@example.com"
          }
        ],
        "options": {}
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": [],
        "metadata": {},
        "transformed_data": [
          {
            "name": "John Doe",
            "age": 30,
            "email": "john.doe@example.com"
          }
        ],
        "filtered_data": [
          {
            "name": "John Doe",
            "age": 30,
            "email": "john.doe@example.com"
          }
        ]
      },
      "required_tools": [
        "data_processing_validator",
        "data_processing_transformer",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-10T04:27:37.915198",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task validates a dataset against a predefined schema, transforms the valid data into a different format, and finally filters the transformed data based on specified criteria.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_afb12a1f",
      "task_type": "simple_task",
      "description": "Process unknown data through three steps: validate, transform format, and filter results.",
      "inputs": {
        "schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "age": {
              "type": "integer"
            },
            "email": {
              "type": "string",
              "format": "email"
            }
          },
          "required": [
            "name",
            "age",
            "email"
          ]
        },
        "data": [
          {
            "name": "John Doe",
            "age": 30,
            "email": "john.doe@example.com"
          },
          {
            "name": "Jane Smith",
            "age": "twenty-five",
            "email": "jane.smith@example.com"
          }
        ]
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "filtered_count": 1
        }
      },
      "required_tools": [
        "data_processing_validator",
        "data_processing_transformer",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-10T04:27:41.809409",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task validates a dataset against a defined schema, transforms the valid data into a different format, and then filters the transformed data based on specific criteria.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_90ea5b4f",
      "task_type": "simple_task",
      "description": "Process unknown data through three steps: validate, transform format, and filter results.",
      "inputs": {
        "schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "age": {
              "type": "integer"
            }
          }
        },
        "data": [
          {
            "name": "Alice",
            "age": 30
          },
          {
            "name": "Bob",
            "age": "not_a_number"
          },
          {
            "name": "Charlie",
            "age": 25
          }
        ],
        "input_format": "JSON",
        "output_format": "XML",
        "options": {},
        "filter_criteria": {
          "age": 30
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": [],
        "transformed_data": "<data><person><name>Alice</name><age>30</age></person></data>",
        "metadata": {}
      },
      "required_tools": [
        "data_processing_validator",
        "data_processing_transformer",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-10T04:27:45.312751",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task validates a dataset against a defined schema, transforms the validated data into a different format, and finally filters the transformed data based on specified criteria.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_9906269c",
      "task_type": "simple_task",
      "description": "Process unknown data by validating, transforming, and filtering it through three tools to produce an unspecified output.",
      "inputs": {
        "schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "age": {
              "type": "integer"
            },
            "email": {
              "type": "string"
            }
          }
        },
        "data": [
          {
            "name": "John Doe",
            "age": 30,
            "email": "john@example.com"
          },
          {
            "name": "Jane Doe",
            "age": 25,
            "email": "jane@example.com"
          },
          {
            "name": "Invalid User",
            "age": "not-a-number",
            "email": "invalid-email"
          }
        ]
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": [],
        "transformed_data": [
          {
            "fullName": "John Doe",
            "ageInYears": 30,
            "contactEmail": "john@example.com"
          },
          {
            "fullName": "Jane Doe",
            "ageInYears": 25,
            "contactEmail": "jane@example.com"
          }
        ],
        "filtered_data": [
          {
            "fullName": "John Doe",
            "ageInYears": 30,
            "contactEmail": "john@example.com"
          }
        ]
      },
      "required_tools": [
        "data_processing_validator",
        "data_processing_transformer",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-10T04:27:49.813797",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task validates a dataset against a predefined schema, transforms the validated data into a different format, and then filters the transformed data according to specified criteria.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_bc64f7f2",
      "task_type": "simple_task",
      "description": "Process unknown data by validating, transforming, and filtering it through three tools to produce an unspecified result.",
      "inputs": {
        "schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "age": {
              "type": "integer"
            }
          }
        },
        "data": [
          {
            "name": "John Doe",
            "age": 30
          },
          {
            "name": "Jane Smith",
            "age": "not a number"
          }
        ],
        "options": {}
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": [],
        "metadata": {},
        "transformed_data": [
          {
            "name": "John Doe",
            "age": 30
          }
        ]
      },
      "required_tools": [
        "data_processing_validator",
        "data_processing_transformer",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-10T04:27:53.316297",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task validates raw data against a predefined schema, transforms the validated data into a different format, and finally filters the transformed data based on specified criteria.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_151e1893",
      "task_type": "simple_task",
      "description": "Process unknown data through three steps: validate, transform format, and filter results.",
      "inputs": {
        "schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "age": {
              "type": "integer"
            }
          }
        },
        "data": [
          {
            "name": "Alice",
            "age": 30
          },
          {
            "name": "Bob",
            "age": "not a number"
          }
        ],
        "options": {}
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": [],
        "metadata": {},
        "transformed_data": [
          {
            "name": "Alice",
            "age": 30
          }
        ],
        "filtered_data": [
          {
            "name": "Alice",
            "age": 30
          }
        ]
      },
      "required_tools": [
        "data_processing_validator",
        "data_processing_transformer",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-10T04:27:56.803788",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task validates incoming data against a defined schema, transforms the validated data into a different format, and then filters the transformed data based on specified criteria.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_562aacc4",
      "task_type": "simple_task",
      "description": "Process unknown data through three steps: validate, transform format, and filter results.",
      "inputs": {
        "schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "age": {
              "type": "integer"
            },
            "email": {
              "type": "string"
            }
          }
        },
        "data": [
          {
            "name": "John Doe",
            "age": 30,
            "email": "john@example.com"
          },
          {
            "name": "Jane Doe",
            "age": "not_a_number",
            "email": "jane@example.com"
          }
        ],
        "options": {}
      },
      "expected_outputs": {
        "success": true,
        "valid": false,
        "errors": [
          {
            "field": "age",
            "message": "must be an integer"
          }
        ],
        "metadata": {}
      },
      "required_tools": [
        "data_processing_validator",
        "data_processing_transformer",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-10T04:28:03.024831",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task validates a dataset against a predefined schema, transforms the data format, and filters the data based on specified criteria.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_1afc59ca",
      "task_type": "simple_task",
      "description": "Process unknown data by validating, transforming format, and filtering results to produce unspecified output.",
      "inputs": {
        "schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "age": {
              "type": "integer"
            }
          }
        },
        "data": [
          {
            "name": "John Doe",
            "age": 30
          },
          {
            "name": "Jane Smith",
            "age": "twenty-five"
          }
        ],
        "input_format": "JSON",
        "output_format": "XML",
        "options": {
          "filter_criteria": {
            "age": {
              "min": 18
            }
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "filtered_data": "<data><person><name>John Doe</name><age>30</age></person></data>"
      },
      "required_tools": [
        "data_processing_validator",
        "data_processing_transformer",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-10T04:28:07.234922",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task validates a dataset against a predefined schema, transforms the validated data into a different format, and filters the transformed data based on specified criteria.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_27ae95ea",
      "task_type": "simple_task",
      "description": "Process unknown data through three tools: validate, transform format, and filter results.",
      "inputs": {
        "schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "age": {
              "type": "integer"
            }
          }
        },
        "data": [
          {
            "name": "John Doe",
            "age": 30
          },
          {
            "name": "Jane Smith",
            "age": "twenty-five"
          }
        ],
        "input_format": "JSON",
        "output_format": "XML",
        "options": {
          "filter_criteria": {
            "age": {
              "$gt": 25
            }
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {},
        "filtered_data": "<data><person><name>John Doe</name><age>30</age></person></data>"
      },
      "required_tools": [
        "data_processing_validator",
        "data_processing_transformer",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-10T04:28:10.951589",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task validates a dataset against a predefined schema, transforms the valid data into a different format, and finally filters the transformed data based on specific criteria.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_e987154d",
      "task_type": "simple_task",
      "description": "Process unknown data through three steps: validate, transform format, and filter results.",
      "inputs": {
        "schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "age": {
              "type": "integer"
            }
          }
        },
        "data": [
          {
            "id": "1",
            "name": "John Doe",
            "age": 30
          },
          {
            "id": "2",
            "name": "Jane Smith",
            "age": 25
          }
        ]
      },
      "expected_outputs": {
        "success": true,
        "transformed_data": "<data><user><id>1</id><name>John Doe</name><age>30</age></user><user><id>2</id><name>Jane Smith</name><age>25</age></user></data>",
        "filtered_data": [
          {
            "id": "1",
            "name": "John Doe",
            "age": 30
          }
        ]
      },
      "required_tools": [
        "data_processing_validator",
        "data_processing_transformer",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-10T04:28:15.067272",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task validates a dataset against a predefined schema, transforms the validated data from JSON to XML format, and then filters the transformed data based on specified criteria.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_36d29f4d",
      "task_type": "api_integration",
      "description": "Retrieve unknown data, validate it, and parse it through three tools to produce unspecified output.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "options": {}
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": [],
        "metadata": {}
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "data_processing_parser"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:27:36.880337",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task fetches data from a specified API endpoint, validates the retrieved data against a predefined schema, and processes it to ensure it meets the necessary quality standards before preparing it for further use.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_329f0473",
      "task_type": "api_integration",
      "description": "Retrieve unknown data, validate it, and parse it into an unspecified format using three tools.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "age": {
              "type": "integer"
            }
          },
          "required": [
            "id",
            "name",
            "age"
          ]
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": [],
        "data": {
          "id": "123",
          "name": "John Doe",
          "age": 30
        },
        "metadata": {
          "processing_time": "150ms"
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "data_processing_parser"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:27:41.343341",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This API integration task fetches data from a specified network source, validates it against a predefined schema, and processes the validated data for further use.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_da3ca53f",
      "task_type": "api_integration",
      "description": "Retrieve unknown data, validate it, and parse it into an unspecified format using three tools.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "options": {}
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "data": {
          "structured_data": {
            "id": 1,
            "name": "Example Item",
            "value": 100
          }
        },
        "metadata": {
          "fetched_at": "2023-10-01T12:00:00Z"
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "data_processing_parser"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:27:46.104064",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task fetches data from a specified API, validates the retrieved data against a predefined schema, and processes it to ensure it is structured correctly for further use.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_7378d17b",
      "task_type": "api_integration",
      "description": "Integrate an API to fetch data, validate it, and parse it into a structured format.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "options": {}
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": [],
        "data": {
          "field1": "value1",
          "field2": "value2"
        },
        "metadata": {
          "fetched_time": "2023-10-01T12:00:00Z",
          "data_size": 1024
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "data_processing_parser"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:27:50.505964",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task fetches data from a specified API, validates the retrieved data against a defined schema, and processes the valid data for further use.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_7ab0933b",
      "task_type": "api_integration",
      "description": "Fetch unknown data, validate it, then parse it to produce an unspecified output format.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "options": {}
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": [],
        "data": {
          "parsed_data": "structured data output"
        },
        "metadata": {
          "request_time": "2023-10-01T12:00:00Z",
          "data_size": 1024
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "data_processing_parser"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:27:54.188065",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task fetches data from an external API, validates the retrieved data against a predefined schema, and then processes the validated data for further use.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_fcd2f00c",
      "task_type": "api_integration",
      "description": "Retrieve unknown data, validate it, and parse it into an unspecified format using three tools.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "options": {}
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": [],
        "metadata": {
          "validation_time": "2023-10-01T12:00:00Z",
          "data_processed": 100
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "data_processing_parser"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:27:58.341883",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task fetches data from a specified API endpoint, validates the data against a predefined schema to ensure its correctness, and processes the data accordingly.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_07bda4c6",
      "task_type": "api_integration",
      "description": "Integrate an API to fetch data, validate it, and transform it into a new format.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer"
            },
            "name": {
              "type": "string"
            },
            "email": {
              "type": "string",
              "format": "email"
            }
          },
          "required": [
            "id",
            "name",
            "email"
          ]
        }
      },
      "expected_outputs": {
        "success": true,
        "transformed_data": {
          "userId": 1,
          "fullName": "John Doe",
          "contact": "john.doe@example.com"
        },
        "metadata": {
          "processTime": "200ms"
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "data_processing_transformer"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:28:04.930384",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task integrates multiple tools to fetch data from a specified API, validate it against a defined schema, and process it into a structured format. The workflow begins with data retrieval from the network, followed by validation, and ends with data transformation into a desired format.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_a95da676",
      "task_type": "api_integration",
      "description": "Fetch unknown data, validate it, and parse it to produce an unspecified output format.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "options": {}
      },
      "expected_outputs": {
        "success": true,
        "data": {
          "parsedData": "structured format of validated data"
        },
        "metadata": {
          "validationTimestamp": "2023-10-01T12:00:00Z"
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "data_processing_parser"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:28:08.074739",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task fetches data from a specified API, validates the retrieved data against a predefined schema, and processes the valid data for further use.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_c8fd1b4a",
      "task_type": "api_integration",
      "description": "Retrieve unknown data, validate it, and parse it into an unspecified format using three tools.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "options": {}
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": [],
        "metadata": {
          "data_source": "API",
          "validation_time": "2023-10-12T10:30:00Z"
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "data_processing_parser"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:28:11.534967",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task fetches data from a specified API endpoint, validates the data against a defined schema, and then processes the validated data for further use.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_27c5b9de",
      "task_type": "api_integration",
      "description": "Integrate an API to fetch data, validate it, and parse it into a structured format.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "options": {}
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": [],
        "data": {
          "parsed_field_1": "value1",
          "parsed_field_2": "value2"
        },
        "metadata": {
          "fetch_time": "2023-10-01T12:00:00Z",
          "validation_time": "2023-10-01T12:00:01Z"
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "data_processing_parser"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:28:15.562879",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task fetches data from a specified API, validates it against a predefined schema, and processes the validated data for further use.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_139958a0",
      "task_type": "api_integration",
      "description": "Integrate an API to fetch, validate, and parse unknown data into an unspecified format.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "options": {}
      },
      "expected_outputs": {
        "success": true,
        "data": {
          "parsed_data": {
            "field1": "value1",
            "field2": "value2"
          },
          "metadata": {
            "source": "api",
            "processed_time": "2023-10-01T12:00:00Z"
          }
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "data_processing_parser"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:27:37.857022",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task fetches data from a specified API, validates the retrieved data against a predefined schema, and then processes it into a structured format for further use.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_12ebf8c9",
      "task_type": "api_integration",
      "description": "Integrate an API to fetch data, validate it, and parse it into a structured format.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "options": {}
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": [],
        "data": {
          "parsedData": "structured data based on the API response"
        },
        "metadata": {
          "operation_time": "2023-10-01T10:00:00Z"
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "data_processing_parser"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:27:41.252454",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task fetches data from a specified API endpoint, validates the retrieved data against a defined schema, and processes the valid data further for eventual use.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_623bc55f",
      "task_type": "api_integration",
      "description": "Retrieve unknown data, validate it, and parse it into an unspecified format using three tools.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "options": {}
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": [],
        "metadata": {}
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "data_processing_parser"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:27:44.993990",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task fetches data from a specified API, validates the data against a predefined schema, and processes the validated data for further use.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_99daa23a",
      "task_type": "api_integration",
      "description": "Retrieve unknown data, validate it, and post the processed result to an unspecified destination.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "age": {
              "type": "integer"
            }
          },
          "required": [
            "id",
            "name",
            "age"
          ]
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "destination": "https://api.example.com/submit",
          "status": "Data posted successfully"
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "network_poster"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:27:49.319546",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task integrates multiple tools to fetch data from a network source, validate it against a predefined schema, and process the data to ensure its correctness and integrity before sending it to a specified destination.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_6ba15ca9",
      "task_type": "api_integration",
      "description": "Integrate an API to fetch, validate, and parse unknown data into an unspecified format.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer"
            },
            "name": {
              "type": "string"
            },
            "email": {
              "type": "string",
              "format": "email"
            }
          },
          "required": [
            "id",
            "name",
            "email"
          ]
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": [],
        "data": {
          "id": 1,
          "name": "John Doe",
          "email": "john.doe@example.com"
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "data_processing_parser"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:27:54.354362",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task integrates an API to fetch data from a specified source, validate it against a defined schema, and process the validated data for further use.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_fe07426e",
      "task_type": "api_integration",
      "description": "Fetch unknown data, validate it, and post the processed result in an unspecified format.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer"
            },
            "name": {
              "type": "string"
            },
            "value": {
              "type": "number"
            }
          },
          "required": [
            "id",
            "name",
            "value"
          ]
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "timestamp": "2023-10-01T12:00:00Z",
          "status": "Data posted successfully."
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "network_poster"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:27:58.501695",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task integrates an API to fetch, validate, and process data from a specified source, ensuring data quality and integrity before sending it to a designated destination.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_32d3e5df",
      "task_type": "api_integration",
      "description": "Integrate an API to fetch data, validate it, and parse it into a structured format.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "options": {}
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": [],
        "data": {
          "parsed_data": {
            "field1": "value1",
            "field2": "value2"
          },
          "metadata": {
            "source": "API",
            "fetch_time": "2023-10-10T10:00:00Z"
          }
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "data_processing_parser"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:28:03.726382",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task fetches data from a specified API endpoint, validates it against a predefined schema, and processes the structured data for further use.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_d93307c8",
      "task_type": "api_integration",
      "description": "Integrate an API to fetch data, validate it, and parse it into a structured format.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "options": {}
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": [],
        "data": {
          "parsed_data": {
            "id": 1,
            "name": "Example Data",
            "value": 100
          }
        },
        "metadata": {
          "fetched_time": "2023-10-12T12:00:00Z",
          "validation_time": "2023-10-12T12:01:00Z"
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "data_processing_parser"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:28:07.746259",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task fetches data from a specified API endpoint, validates the retrieved data against a defined schema, and processes the validated data for further use.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_b535d09d",
      "task_type": "api_integration",
      "description": "Integrate an API to fetch data, validate it, and parse it into a structured format.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer"
            },
            "name": {
              "type": "string"
            },
            "email": {
              "type": "string",
              "format": "email"
            }
          },
          "required": [
            "id",
            "name",
            "email"
          ]
        }
      },
      "expected_outputs": {
        "success": true,
        "data": {
          "id": 123,
          "name": "John Doe",
          "email": "john.doe@example.com"
        },
        "metadata": {
          "operation_time": "100ms",
          "source": "https://api.example.com/data"
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "data_processing_parser"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:28:12.828026",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task retrieves data from a specified API, validates it against a defined schema, and processes it into a structured format for further use.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_5646d7ab",
      "task_type": "api_integration",
      "description": "Integrate an API to fetch data, validate it, and parse it into a structured format.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "options": {}
      },
      "expected_outputs": {
        "success": true,
        "data": {
          "parsed_data": {
            "id": 1,
            "name": "Sample Data"
          },
          "metadata": {
            "source": "https://api.example.com/data",
            "fetched_at": "2023-10-01T10:00:00Z"
          }
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "data_processing_parser"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:28:17.602588",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task integrates an API to fetch data from a specified source, validate it against a predefined schema, and process the validated data into a structured format for further use.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_796be335",
      "task_type": "api_integration",
      "description": "Integrate an API to fetch unknown data, validate it, and parse it into an unspecified format.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer"
            },
            "name": {
              "type": "string"
            },
            "email": {
              "type": "string",
              "format": "email"
            }
          },
          "required": [
            "id",
            "name",
            "email"
          ]
        },
        "data": {}
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": [],
        "metadata": {}
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "data_processing_parser"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:27:39.383253",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task integrates an API to fetch data from a specified source, validate it against a predefined schema, and then process the validated data for further use. It ensures data integrity and correctness before any downstream processing.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_8d89c4ec",
      "task_type": "api_integration",
      "description": "Integrate an API to fetch data, validate it, and parse it into a structured format.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer"
            },
            "name": {
              "type": "string"
            },
            "email": {
              "type": "string",
              "format": "email"
            }
          },
          "required": [
            "id",
            "name",
            "email"
          ]
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": [],
        "metadata": {
          "validation_time": "2023-10-01T12:00:00Z",
          "input_data_count": 50,
          "valid_data_count": 50
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "data_processing_parser"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:27:44.831398",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task fetches data from a specified API endpoint, validates the retrieved data against a predefined schema, and processes it to ensure it meets quality standards. It integrates several tools to efficiently manage data retrieval, validation, and processing.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_1903b342",
      "task_type": "api_integration",
      "description": "Integrate an API to fetch, validate, parse, and post data from an unknown source.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "value": {
              "type": "number"
            }
          },
          "required": [
            "id",
            "name",
            "value"
          ]
        },
        "data": null
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "status": "Data successfully posted",
          "timestamp": "2023-10-01T12:00:00Z"
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "data_processing_parser",
        "network_poster"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:27:49.045520",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task fetches data from a specified API, validates the data against a predefined schema, and processes it into a structured format before sending it to a specified destination.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_e97079b2",
      "task_type": "api_integration",
      "description": "Retrieve unknown data, validate it, and parse it into an unspecified format using three tools.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "options": {}
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": [],
        "data": {
          "parsed": "structured data based on the API response"
        },
        "metadata": {
          "operation_timestamp": "2023-10-01T12:00:00Z"
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "data_processing_parser"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:27:52.438385",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task fetches data from a specified API, validates it against a predefined schema, and processes the validated data for further use.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_f71975a1",
      "task_type": "api_integration",
      "description": "Retrieve unknown data, validate it, then parse and structure it into an unspecified format.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "options": {}
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": [],
        "data": {
          "parsed_field1": "value1",
          "parsed_field2": "value2"
        },
        "metadata": {
          "fetch_time": "2023-10-01T12:00:00Z",
          "validation_time": "2023-10-01T12:00:01Z"
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "data_processing_parser"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:27:56.471132",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task fetches data from a specified API endpoint, validates it against a predefined schema, and processes it for further use.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_bf4d623b",
      "task_type": "api_integration",
      "description": "Integrate an API to fetch data, validate it, and parse it into a structured format.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "options": {}
      },
      "expected_outputs": {
        "success": true,
        "data": {
          "parsed_data": {
            "field1": "value1",
            "field2": "value2"
          },
          "metadata": {
            "timestamp": "2023-10-01T12:00:00Z",
            "source": "API"
          }
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "data_processing_parser"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:28:00.146438",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task fetches data from a specified API endpoint, validates the retrieved data against a defined schema, and processes the data into a structured format for further use.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_1d5f7174",
      "task_type": "api_integration",
      "description": "Retrieve unknown data, validate it, and parse it into an unspecified format using three tools.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "options": {}
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": [],
        "data": {
          "parsed_data": "structured data based on the API response"
        },
        "metadata": {}
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "data_processing_parser"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:28:05.078469",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task fetches data from a specified API, validates the retrieved data against a predefined schema, and processes the validated data for further use.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_6f8c95fc",
      "task_type": "api_integration",
      "description": "Retrieve unknown data, validate it, and post the processed result to an unspecified destination.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer"
            },
            "name": {
              "type": "string"
            },
            "email": {
              "type": "string",
              "format": "email"
            }
          },
          "required": [
            "id",
            "name",
            "email"
          ]
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "status": "Data posted successfully",
          "timestamp": "2023-10-01T12:00:00Z"
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "network_poster"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:28:10.170459",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task integrates an API to fetch data from a specified source, validate the retrieved data against a predefined schema, and process it for further use. The process includes fetching data, validating its structure, and preparing it for submission to another system.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_30d566e8",
      "task_type": "api_integration",
      "description": "Integrate an API to fetch data, validate it, and parse it into a structured format.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "options": {}
      },
      "expected_outputs": {
        "success": true,
        "data": {
          "parsed_data": {
            "field1": "value1",
            "field2": "value2"
          },
          "metadata": {
            "source": "API",
            "timestamp": "2023-10-01T12:00:00Z"
          }
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "data_processing_parser"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:28:14.681298",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task fetches data from a specified API, validates the data against a predefined schema, and processes it into a structured format for further use.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_24111f7d",
      "task_type": "api_integration",
      "description": "Integrate an API to fetch data, validate it, and parse it into a structured format.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "options": {}
      },
      "expected_outputs": {
        "success": true,
        "data": {
          "parsed_data": {
            "field1": "value1",
            "field2": "value2"
          },
          "metadata": {
            "source": "https://api.example.com/data",
            "fetched_at": "2023-10-05T12:00:00Z"
          }
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "data_processing_parser"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:28:18.371279",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task fetches data from a specified source, validates the data against a predefined schema, and processes it into a structured format, ensuring data integrity throughout the workflow.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_191c8e5f",
      "task_type": "multi_stage_pipeline",
      "description": "Process unknown input data through five tools: read, transform, filter, validate, and analyze results.",
      "inputs": {
        "source": "path/to/input/data.csv",
        "input_format": "CSV",
        "output_format": "JSON",
        "options": {}
      },
      "expected_outputs": {
        "success": true,
        "result": {
          "insights": "Statistical analysis results",
          "trends": "Identified trends over the data"
        },
        "metadata": {
          "execution_time": "20ms"
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "data_processing_filter",
        "data_processing_validator",
        "computation_analyzer"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "hard",
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-10T04:27:38.865330",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This multi-stage pipeline processes raw data from a CSV file, transforms it into JSON format, filters out unnecessary data, validates the data against a schema, and finally performs computations to analyze the results.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_e4b0d02d",
      "task_type": "multi_stage_pipeline",
      "description": "Process unknown input data through five tools to produce an unspecified output format.",
      "inputs": {
        "source": "data/input_file.json",
        "options": {}
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "written_file": "data/output_analysis.txt",
          "record_count": 100
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter",
        "computation_analyzer",
        "file_operations_writer"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "hard",
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-10T04:27:42.554850",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task is designed to read raw data from a file, parse it into a structured format, filter the data based on specific criteria, analyze the filtered results, and finally write the analysis results to a new file.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_0cc73903",
      "task_type": "multi_stage_pipeline",
      "description": "Process unknown input data through five tools to produce an unspecified output result.",
      "inputs": {
        "source": "path/to/raw_data.json",
        "options": {}
      },
      "expected_outputs": {
        "success": true,
        "result": {
          "mean": 50.5,
          "median": 51,
          "std_dev": 5.3
        },
        "metadata": {
          "execution_time": "1.2s",
          "version": "1.0"
        }
      },
      "required_tools": [
        "data_processing_parser",
        "data_processing_validator",
        "data_processing_filter",
        "computation_calculator",
        "computation_analyzer"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "hard",
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-10T04:27:46.017181",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This multi-stage pipeline processes raw data from JSON format, validates it against a schema, filters relevant entries, and finally analyzes the computation results, providing statistical insights.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_4ac7bb30",
      "task_type": "multi_stage_pipeline",
      "description": "Process unknown input data through 6 tools to produce an unspecified output result.",
      "inputs": {
        "source": "data/input_file.csv",
        "options": {}
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "message": "Data written successfully",
          "file": "data/output_file.json"
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter",
        "data_processing_transformer",
        "computation_analyzer",
        "file_operations_writer"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "hard",
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-10T04:27:49.331719",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task involves reading raw data from a CSV file, parsing it into a structured format, filtering the data based on specified criteria, transforming it into a different format, analyzing the computation results, and finally writing the summarized results to a new file.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_1c309541",
      "task_type": "multi_stage_pipeline",
      "description": "Process unknown input data through five tools to produce an unspecified output result.",
      "inputs": {
        "source": "data/input_file.json",
        "schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer"
            },
            "value": {
              "type": "number"
            }
          },
          "required": [
            "id",
            "value"
          ]
        },
        "data": {}
      },
      "expected_outputs": {
        "success": true,
        "result": {
          "mean": 50,
          "max": 100,
          "min": 0
        },
        "metadata": {}
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_validator",
        "data_processing_transformer",
        "computation_calculator",
        "computation_analyzer"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "hard",
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-10T04:27:54.781273",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This multi-stage pipeline processes raw data from a file, validates it against a schema, transforms it into a different format, and finally analyzes the computation results to provide insights.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_d497d673",
      "task_type": "multi_stage_pipeline",
      "description": "Process unknown data through four tools: read, validate, filter, and transform to unspecified output.",
      "inputs": {
        "source": "path/to/input.csv",
        "schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "age": {
              "type": "integer"
            },
            "email": {
              "type": "string"
            }
          },
          "required": [
            "name",
            "age",
            "email"
          ]
        },
        "options": {}
      },
      "expected_outputs": {
        "success": true,
        "transformed_data": {
          "type": "object",
          "data": [
            {
              "name": "John Doe",
              "age": 30,
              "email": "john.doe@example.com"
            },
            {
              "name": "Jane Smith",
              "age": 25,
              "email": "jane.smith@example.com"
            }
          ]
        },
        "metadata": {
          "timestamp": "2023-10-02T12:00:00Z",
          "records_processed": 2
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_validator",
        "data_processing_filter",
        "data_processing_transformer"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "hard",
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-10T04:28:01.084283",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes raw data from a CSV file, validates its structure against a predefined schema, filters the data based on specific criteria, and then performs a transformation to convert it into a JSON format for further analysis.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_ad99fddd",
      "task_type": "multi_stage_pipeline",
      "description": "Process unknown input data through five tools to produce an unspecified output result.",
      "inputs": {
        "source": "path/to/raw_data.csv",
        "options": {}
      },
      "expected_outputs": {
        "success": true,
        "result": {
          "analysis": {
            "mean": 10.5,
            "median": 10,
            "std_dev": 2.3
          },
          "metadata": {
            "analysis_time": "2023-10-01T12:00:00Z"
          }
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_validator",
        "computation_calculator",
        "computation_analyzer"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "hard",
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-10T04:28:07.164958",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task involves processing a raw data file to extract relevant information, validate it against a schema, and then analyze computation results for statistical insights, culminating in the generation of a report based on the analysis.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_29ddc973",
      "task_type": "multi_stage_pipeline",
      "description": "Process unknown input data through five tools to produce an unspecified output result.",
      "inputs": {
        "source": "data/input.csv",
        "options": {
          "delimiter": ",",
          "header": true
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "total_records": 100,
          "valid_records": 90,
          "aggregated_value": 1500
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_filter",
        "data_processing_validator",
        "computation_calculator",
        "data_processing_aggregator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "hard",
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-10T04:28:11.429050",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This multi-stage pipeline processes raw data from a CSV file, filters it based on specific criteria, validates the filtered data against a schema, performs computations on the validated data, and finally aggregates the results into a structured output.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_e9ac06b9",
      "task_type": "multi_stage_pipeline",
      "description": "Process unknown input data through five tools to produce an unspecified output format.",
      "inputs": {
        "source": "path/to/input_data.json",
        "options": {
          "filter_criteria": {
            "status": "active"
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "file_written": "path/to/output_data.xml",
          "record_count": 100
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_filter",
        "data_processing_transformer",
        "computation_analyzer",
        "file_operations_writer"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "hard",
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-10T04:28:15.466622",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This multi-stage pipeline processes raw JSON data from a file, filters it based on specific criteria, transforms it into XML format, analyzes the computation results, and finally writes the processed data to a new file.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_f8db73ba",
      "task_type": "multi_stage_pipeline",
      "description": "Process unknown input data through five tools to generate an unspecified output result.",
      "inputs": {
        "source": "path/to/input/data.csv",
        "options": {}
      },
      "expected_outputs": {
        "success": true,
        "result": {
          "insights": "Statistical trends and visualizations based on valid data."
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter",
        "data_processing_validator",
        "computation_analyzer"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "hard",
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-10T04:28:18.438131",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task involves processing raw data from a CSV file, transforming it into JSON format, filtering it based on specific criteria, validating the filtered data against a schema, and finally analyzing the computation results derived from the valid data.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_b2cee74d",
      "task_type": "multi_stage_pipeline",
      "description": "Process unknown data through five steps: read, filter, validate, transform, and analyze for insights.",
      "inputs": {
        "source": "path/to/input/data.csv",
        "options": {
          "filter_criteria": {
            "column": "status",
            "value": "active"
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "result": {
          "mean": 50,
          "standard_deviation": 10
        },
        "metadata": {
          "analysis_time": "2023-10-31T12:00:00Z",
          "data_points": 100
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_filter",
        "data_processing_validator",
        "data_processing_transformer",
        "computation_analyzer"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "hard",
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-10T04:27:39.093706",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This multi-stage pipeline processes raw data from a CSV file, filters it based on specific criteria, validates its structure, transforms it into a JSON format, and finally performs statistical analysis on the processed data.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_e10b8368",
      "task_type": "multi_stage_pipeline",
      "description": "Process unknown input data through four tools: parse, filter, transform, and validate to produce unspecified output.",
      "inputs": {
        "source": "path/to/input/data.csv",
        "options": {
          "error_handling": "strict"
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "data_processing_parser",
        "data_processing_filter",
        "data_processing_transformer",
        "data_processing_validator"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "hard",
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-10T04:27:42.799943",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task involves parsing raw data from a CSV file, filtering the parsed output based on specific criteria, transforming the filtered data into a JSON format, and finally validating the transformed data against a predefined schema. The objective is to ensure data quality and integrity through a multi-stage processing pipeline.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_1c87a2d2",
      "task_type": "multi_stage_pipeline",
      "description": "Process unknown input data through five tools, transforming it into an unspecified output format.",
      "inputs": {
        "source": "data/input_file.csv",
        "options": {
          "filter_criteria": {
            "column": "status",
            "value": "active"
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "result": {
          "statistical_insights": {
            "mean": 50,
            "median": 45,
            "count": 100
          }
        },
        "metadata": {
          "operation_time": "200ms"
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_filter",
        "data_processing_transformer",
        "data_processing_validator",
        "computation_analyzer"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "hard",
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-10T04:27:46.887104",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes raw CSV data, filters it based on specific criteria, performs a transformation to JSON format, validates the transformed data against a schema, and finally analyzes the computation results to generate insights.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_4a3517a0",
      "task_type": "multi_stage_pipeline",
      "description": "Process unknown input data through five tools to produce an unspecified output result.",
      "inputs": {
        "source": "path/to/input/file.csv",
        "options": {}
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "file_written": "path/to/output/results.json"
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_filter",
        "computation_analyzer",
        "file_operations_writer"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "hard",
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-10T04:27:50.352038",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This multi-stage pipeline processes raw data from a CSV file, transforms it into JSON format, filters the data based on specific criteria, analyzes the filtered data for statistical insights, and finally writes the results to a new file.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_d4cf7cd9",
      "task_type": "multi_stage_pipeline",
      "description": "Process unknown input data through four tools: parse, transform, validate, and analyze for insights.",
      "inputs": {
        "source": "path/to/raw_data.json",
        "options": {
          "error_handling": true
        }
      },
      "expected_outputs": {
        "success": true,
        "result": {
          "insights": "Statistical insights from computation results",
          "trends": "Trends over multiple computations"
        },
        "metadata": {
          "operation_time": "2s",
          "data_processed": 1000
        }
      },
      "required_tools": [
        "data_processing_parser",
        "data_processing_transformer",
        "data_processing_validator",
        "computation_analyzer"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "hard",
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-10T04:27:55.118781",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This multi-stage pipeline processes raw JSON data by parsing it, transforming it to a different format, validating it against a schema, and then performing a computation analysis on the validated data.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_0733dc08",
      "task_type": "multi_stage_pipeline",
      "description": "Process unknown input data through four tools: read, validate, filter, and analyze for insights.",
      "inputs": {
        "source": "data/input.csv",
        "schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer"
            },
            "value": {
              "type": "number"
            },
            "timestamp": {
              "type": "string",
              "format": "date-time"
            }
          },
          "required": [
            "id",
            "value",
            "timestamp"
          ]
        }
      },
      "expected_outputs": {
        "success": true,
        "result": {
          "mean": 50,
          "median": 45,
          "std_dev": 10
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_validator",
        "data_processing_filter",
        "computation_analyzer"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "hard",
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-10T04:27:59.549954",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task involves processing raw data from a CSV file, validating it against a predefined schema, and then performing statistical analysis on the valid data to generate insights.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_fc67d2f3",
      "task_type": "multi_stage_pipeline",
      "description": "Process unknown data through five tools: read, filter, validate, calculate, and analyze for output.",
      "inputs": {
        "source": "path/to/raw_data.csv",
        "options": {
          "delimiter": ",",
          "headers": true
        }
      },
      "expected_outputs": {
        "success": true,
        "result": {
          "mean": 50,
          "standard_deviation": 10
        },
        "metadata": {
          "analysis_time": "2023-10-01T12:00:00Z"
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_filter",
        "data_processing_validator",
        "computation_calculator",
        "computation_analyzer"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "hard",
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-10T04:28:06.484318",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This multi-stage pipeline is designed to process raw data from a CSV file, filter it based on certain criteria, validate the filtered data against a predefined schema, perform calculations on the validated data, and finally generate statistical insights from the calculation results.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_d3932789",
      "task_type": "multi_stage_pipeline",
      "description": "Process unknown input data through five tools to produce an unspecified output format.",
      "inputs": {
        "source": "path/to/input/data.csv",
        "options": {
          "delimiter": ",",
          "has_header": true
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "file_written": "path/to/output/results.txt"
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_filter",
        "computation_analyzer",
        "data_processing_aggregator",
        "file_operations_writer"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "hard",
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-10T04:28:09.768217",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes raw data from a CSV file, filters it based on specific criteria, analyzes the filtered results, and then aggregates the findings before writing the final results to an output file.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_796ea32f",
      "task_type": "multi_stage_pipeline",
      "description": "Process unknown input data through 6 tools to produce an unspecified output result.",
      "inputs": {
        "source": "path/to/input/data.csv",
        "options": {}
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "file_written": "path/to/output/validated_data.json",
          "record_count": 100
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_transformer",
        "data_processing_filter",
        "data_processing_validator",
        "file_operations_writer"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "hard",
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-10T04:28:14.400405",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task involves processing raw data from a CSV file, transforming it to a JSON format, filtering specific entries based on criteria, and then validating the resulting data against a predefined schema before writing the final output to a new file.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_a4f55a26",
      "task_type": "multi_stage_pipeline",
      "description": "Process unknown input data through 6 tools to produce an unspecified output format.",
      "inputs": {
        "source": "path/to/input_file.csv",
        "options": {}
      },
      "expected_outputs": {
        "success": true,
        "transformed_data": {
          "report": "aggregated report data",
          "summary": "summary of the data transformation"
        },
        "metadata": {
          "operation": "data transformation",
          "timestamp": "2023-10-01T12:00:00Z"
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_parser",
        "data_processing_validator",
        "data_processing_filter",
        "data_processing_aggregator",
        "data_processing_transformer"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "hard",
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-10T04:28:18.631836",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task involves reading raw data from a file, parsing it into a structured format, validating the data against a specified schema, filtering the valid data based on certain criteria, aggregating the filtered data, and finally transforming the aggregated data into a different format for reporting purposes.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_fd4fa3b6",
      "task_type": "api_integration",
      "description": "Integrate an API to fetch data, validate it, and parse it into a structured format.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "options": {}
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": [],
        "metadata": {}
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "data_processing_parser"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:27:37.088945",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task fetches data from a specified API, validates the retrieved data against a defined schema, and processes the valid data for further use.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_e1ddbbc7",
      "task_type": "api_integration",
      "description": "Integrate an API to fetch data, validate it, and parse it into a structured format.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "options": {}
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": [],
        "data": {
          "processed": "structured data output"
        },
        "metadata": {
          "fetched_time": "2023-10-11T12:00:00Z",
          "validation_passed": true
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "data_processing_parser"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:27:40.434236",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task fetches data from a specified API endpoint, validates the data against a predefined schema to ensure its correctness, and processes the data for further use.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_741bd44c",
      "task_type": "api_integration",
      "description": "Integrate an API to fetch unknown data, validate it, and parse it into an unspecified format.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "options": {}
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": [],
        "metadata": {
          "validation_time": "2023-10-01T12:00:00Z",
          "records_checked": 100
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "data_processing_parser"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:27:44.683766",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task fetches data from a specified API endpoint, validates it against a predefined schema to ensure its integrity, and then processes the validated data for further use.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_2bf03172",
      "task_type": "api_integration",
      "description": "Integrate an API to fetch data, validate it, and transform it into a new format.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer"
            },
            "name": {
              "type": "string"
            },
            "email": {
              "type": "string",
              "format": "email"
            }
          },
          "required": [
            "id",
            "name",
            "email"
          ]
        }
      },
      "expected_outputs": {
        "success": true,
        "transformed_data": {
          "user_id": 1,
          "full_name": "John Doe",
          "contact": "john.doe@example.com"
        },
        "metadata": {
          "processing_time": "50ms",
          "format": "JSON"
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "data_processing_transformer"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:27:49.213706",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task integrates multiple tools to fetch data from a specified API, validate it against a predefined schema, and transform the validated data into a different format for further usage.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_07b20f4e",
      "task_type": "api_integration",
      "description": "Fetch unknown data, validate it, then parse and structure it into an unspecified format.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer"
            },
            "name": {
              "type": "string"
            },
            "email": {
              "type": "string",
              "format": "email"
            }
          },
          "required": [
            "id",
            "name",
            "email"
          ]
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "data": {
          "id": 123,
          "name": "John Doe",
          "email": "john.doe@example.com"
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "data_processing_parser"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:27:53.505319",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task retrieves data from a specified API, validates it against a predefined schema, and processes the data for further use.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_bca126a4",
      "task_type": "api_integration",
      "description": "Retrieve unknown data, validate it, and post the processed result in an unspecified format.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "value": {
              "type": "number"
            }
          },
          "required": [
            "id",
            "name",
            "value"
          ]
        },
        "data": {
          "id": "1234",
          "name": "Sample Item",
          "value": 42
        },
        "destination": "https://api.example.com/submit",
        "data_to_post": {
          "id": "1234",
          "name": "Sample Item",
          "value": 42
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "timestamp": "2023-10-01T12:00:00Z",
          "request_id": "abcd-1234"
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "network_poster"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:27:58.732247",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task integrates API data fetching, validation, and processing to ensure data integrity before posting it to a destination. It retrieves data from a specified source, validates it against a defined schema, and prepares it for further use.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_d1707ba7",
      "task_type": "api_integration",
      "description": "Integrate an API to fetch unknown data, validate it, and parse it into an unspecified format.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "options": {}
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "data_processing_parser"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:28:03.080850",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task fetches data from a specified API endpoint, validates the data against a defined schema, and processes the validated data for further use.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_1952a364",
      "task_type": "api_integration",
      "description": "Integrate an API to fetch, validate, and transform unknown data into an unspecified format.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer"
            },
            "name": {
              "type": "string"
            },
            "status": {
              "type": "string"
            }
          },
          "required": [
            "id",
            "name"
          ]
        },
        "data": {
          "id": 123,
          "name": "Sample Data",
          "status": "active"
        },
        "input_format": "json",
        "output_format": "xml"
      },
      "expected_outputs": {
        "success": true,
        "transformed_data": "<data><id>123</id><name>Sample Data</name><status>active</status></data>",
        "metadata": {
          "transform_time": "2023-10-01T12:00:00Z",
          "records_processed": 1
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "data_processing_transformer"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:28:10.156552",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task integrates several tools to fetch data from a network source, validate it against a defined schema, and then process it for further use. The workflow begins by retrieving data from a specified API endpoint, validating the data structure and content, and finally transforming it into a desired format.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_9ed200f9",
      "task_type": "api_integration",
      "description": "Integrate an API to fetch data, validate it, and parse it into a structured format.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "options": {}
      },
      "expected_outputs": {
        "success": true,
        "data": {
          "structuredData": "expected structured data output based on parsing"
        },
        "metadata": {
          "operation": "data parsing",
          "timestamp": "2023-10-01T12:00:00Z"
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "data_processing_parser"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:28:14.669072",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task fetches data from a specified API, validates the data against a predefined schema, and processes it into a structured format for further use.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_95b83350",
      "task_type": "api_integration",
      "description": "Fetch unknown data, validate it, and parse it into an unspecified format using three tools.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "age": {
              "type": "integer"
            }
          },
          "required": [
            "id",
            "name",
            "age"
          ]
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": []
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "data_processing_parser"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:28:18.739187",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task integrates multiple API tools to fetch data from a specified source, validate it against a predefined schema for correctness, and then process it for further use. The workflow ensures data integrity and quality before final output.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_f37ea506",
      "task_type": "api_integration",
      "description": "Fetch unknown data, validate it, then post the processed result in an unspecified format.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "options": {}
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "timestamp": "2023-10-31T12:00:00Z",
          "status": "Data posted successfully"
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "network_poster"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:27:37.977067",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task fetches data from a specified API endpoint, validates it against a predefined schema, and processes the valid data for further use.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_03aa3a11",
      "task_type": "api_integration",
      "description": "Fetch unknown data, validate it, then post the processed result in an unspecified format.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "options": {}
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "status": "Data successfully posted"
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "network_poster"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:27:41.275597",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task fetches data from a specified API, validates it against a predefined schema, and processes it to ensure data integrity before sending it to a designated endpoint.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_949297f3",
      "task_type": "api_integration",
      "description": "Retrieve unknown data, validate it, and parse it into an unspecified format using three tools.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer"
            },
            "name": {
              "type": "string"
            },
            "email": {
              "type": "string",
              "format": "email"
            }
          },
          "required": [
            "id",
            "name",
            "email"
          ]
        }
      },
      "expected_outputs": {
        "success": true,
        "data": {
          "id": 1,
          "name": "John Doe",
          "email": "john.doe@example.com"
        },
        "metadata": {
          "processed_at": "2023-10-01T12:00:00Z"
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "data_processing_parser"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:27:46.119246",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task fetches data from a specified API, validates the data against a predefined schema, and processes the validated data into a structured format for further use.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_a04d9569",
      "task_type": "api_integration",
      "description": "Retrieve unknown data, validate it, and parse it into an unspecified format using three tools.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "options": {}
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": [],
        "metadata": {}
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "data_processing_parser"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:27:48.622736",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task fetches data from a specified API, validates it against a predefined schema, and processes it for downstream applications.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_870c24c6",
      "task_type": "api_integration",
      "description": "Retrieve unknown data, validate it, and parse it into an unspecified format using three tools.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer"
            },
            "name": {
              "type": "string"
            },
            "email": {
              "type": "string",
              "format": "email"
            }
          },
          "required": [
            "id",
            "name",
            "email"
          ]
        }
      },
      "expected_outputs": {
        "success": true,
        "data": {
          "parsed_data": [
            {
              "id": 1,
              "name": "John Doe",
              "email": "john.doe@example.com"
            },
            {
              "id": 2,
              "name": "Jane Smith",
              "email": "jane.smith@example.com"
            }
          ]
        },
        "metadata": {
          "timestamp": "2023-10-03T12:00:00Z"
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "data_processing_parser"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:27:54.190544",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task integrates an API to fetch data from a specified source, validate it against a predefined schema, and process the valid data into a structured format.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_ad8cb711",
      "task_type": "api_integration",
      "description": "Fetch data, validate it, and parse it into a structured format for further use.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer"
            },
            "name": {
              "type": "string"
            },
            "email": {
              "type": "string",
              "format": "email"
            }
          },
          "required": [
            "id",
            "name",
            "email"
          ]
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": [],
        "metadata": {
          "fetched_time": "2023-10-01T12:00:00Z",
          "data_count": 100
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "data_processing_parser"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:27:59.553627",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task fetches data from a specified network source, validates it against a predefined schema, and processes the data to prepare it for further usage or storage.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_4e3a67e8",
      "task_type": "api_integration",
      "description": "Retrieve unknown data, validate it, and parse it into an unspecified format using three tools.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer"
            },
            "name": {
              "type": "string"
            },
            "value": {
              "type": "number"
            }
          },
          "required": [
            "id",
            "name",
            "value"
          ]
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "data": {
          "id": 1,
          "name": "Sample Data",
          "value": 100.0
        },
        "metadata": {
          "timestamp": "2023-10-01T12:00:00Z",
          "source": "https://api.example.com/data"
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "data_processing_parser"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:28:06.062569",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task integrates multiple tools to fetch data from a specified network source, validate the retrieved data against a predefined schema, and finally process the validated data for further use.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_aff5fbd8",
      "task_type": "api_integration",
      "description": "Integrate an API to fetch data, validate it, and parse it into a structured format.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer"
            },
            "name": {
              "type": "string"
            },
            "value": {
              "type": "number"
            }
          },
          "required": [
            "id",
            "name",
            "value"
          ]
        }
      },
      "expected_outputs": {
        "success": true,
        "data": {
          "id": 1,
          "name": "Sample Data",
          "value": 123.45
        },
        "metadata": {
          "processed_time": "2023-10-01T10:00:00Z",
          "records_count": 1
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "data_processing_parser"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:28:10.542701",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task integrates multiple tools to fetch data from a specified API, validate the retrieved data against a defined schema, and process the validated data into a structured format for further use.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:40"
    },
    {
      "instance_id": "task_b799c66c",
      "task_type": "api_integration",
      "description": "Integrate an API to fetch data, validate it, and transform it into a new format.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer"
            },
            "name": {
              "type": "string"
            },
            "value": {
              "type": "number"
            }
          },
          "required": [
            "id",
            "name",
            "value"
          ]
        }
      },
      "expected_outputs": {
        "success": true,
        "transformed_data": {
          "data": [
            {
              "identifier": 1,
              "fullName": "Example Name",
              "amount": 100.0
            }
          ]
        },
        "metadata": {
          "process_time": "50ms",
          "records_processed": 1
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "data_processing_transformer"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:28:16.412403",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task integrates an API to fetch data from a specified source, validate the retrieved data against a predefined schema, and then transform the data into a different format for further use.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_0ea7789a",
      "task_type": "api_integration",
      "description": "Fetch unknown data, validate it, and post the processed result in an unspecified format.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "options": {}
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "status": "Data posted successfully",
          "timestamp": "2023-10-05T12:00:00Z"
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "network_poster"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:28:19.378648",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task fetches data from a specified API, validates it against a defined schema, and processes it to ensure it meets quality standards before posting the validated data to a destination API.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_a83ae546",
      "task_type": "api_integration",
      "description": "Integrate an API to fetch data, validate it, and transform it into a new format.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer"
            },
            "name": {
              "type": "string"
            },
            "email": {
              "type": "string",
              "format": "email"
            }
          },
          "required": [
            "id",
            "name",
            "email"
          ]
        }
      },
      "expected_outputs": {
        "success": true,
        "transformed_data": {
          "userId": 123,
          "fullName": "John Doe",
          "contact": "john.doe@example.com"
        },
        "metadata": {
          "timestamp": "2023-10-01T12:00:00Z",
          "process_duration": 150
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "data_processing_transformer"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:27:38.941998",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task integrates an API to fetch data from a specified source, validate it against a predefined schema, and process the validated data for further use.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_37ae88b8",
      "task_type": "api_integration",
      "description": "Integrate an API to fetch data, validate it, and parse it into a structured format.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "value": {
              "type": "number"
            }
          },
          "required": [
            "id",
            "name",
            "value"
          ]
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": [],
        "data": {
          "processedData": [
            {
              "id": "1",
              "name": "Item 1",
              "value": 100
            },
            {
              "id": "2",
              "name": "Item 2",
              "value": 200
            }
          ]
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "data_processing_parser"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:27:44.534666",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task integrates data retrieval, validation, and processing through a logical sequence of API tools. The task fetches data from a specified source, validates it against a defined schema, and processes the data to ensure its correctness and integrity.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_fb4ebb3c",
      "task_type": "api_integration",
      "description": "Retrieve unknown data, validate it, and parse it into an unspecified format using three tools.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "options": {}
      },
      "expected_outputs": {
        "success": true,
        "data": {
          "parsed": true,
          "structure": "valid"
        },
        "metadata": {
          "validation_time": "2023-10-23T10:00:00Z",
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "data_processing_parser"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:27:48.099091",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task fetches data from a specified source, validates the data against a predefined schema, and processes it to ensure it is correctly structured and ready for further use.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_08d24fe0",
      "task_type": "api_integration",
      "description": "Retrieve unknown data, validate it, and post the processed result in an unspecified format.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer"
            },
            "name": {
              "type": "string"
            },
            "email": {
              "type": "string",
              "format": "email"
            }
          },
          "required": [
            "id",
            "name",
            "email"
          ]
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "destination": "https://api.example.com/submit",
          "status": "Data successfully posted"
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "network_poster"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:27:52.177824",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task integrates an API to fetch data from a specified source, validates the data against a schema, and processes it to ensure quality and integrity before sending it to a designated destination.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_e551843d",
      "task_type": "api_integration",
      "description": "Integrate an API to fetch data, validate it, and transform it into a new format.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer"
            },
            "name": {
              "type": "string"
            },
            "value": {
              "type": "number"
            }
          },
          "required": [
            "id",
            "name",
            "value"
          ]
        }
      },
      "expected_outputs": {
        "success": true,
        "transformed_data": {
          "item_id": 1,
          "item_name": "Sample Item",
          "item_value": 100.5
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "data_processing_transformer"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:27:56.072573",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task integrates multiple tools to fetch data from a specified API, validate it against a predefined schema, and then transform the data into a different format for further use.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_3455bb59",
      "task_type": "api_integration",
      "description": "Integrate an API to fetch data, validate it, and transform it into a new format.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer"
            },
            "name": {
              "type": "string"
            },
            "email": {
              "type": "string",
              "format": "email"
            }
          },
          "required": [
            "id",
            "name",
            "email"
          ]
        }
      },
      "expected_outputs": {
        "success": true,
        "transformed_data": {
          "userId": 123,
          "userName": "John Doe",
          "userEmail": "john.doe@example.com"
        },
        "metadata": {
          "timestamp": "2023-10-01T12:00:00Z",
          "operation": "data transformation"
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "data_processing_transformer"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:28:00.965247",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task integrates multiple API calls to fetch data from a specified source, validate the retrieved data against a defined schema, and transform the validated data into a different format for further usage.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_4d37d649",
      "task_type": "api_integration",
      "description": "Integrate an API to fetch data, validate it, and parse it into a structured format.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "value": {
              "type": "number"
            }
          },
          "required": [
            "id",
            "name",
            "value"
          ]
        }
      },
      "expected_outputs": {
        "success": true,
        "data": {
          "id": "12345",
          "name": "Sample Data",
          "value": 100
        },
        "metadata": {
          "source": "https://api.example.com/data",
          "processed_at": "2023-10-01T12:00:00Z"
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "data_processing_parser"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:28:07.570029",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task integrates an API to fetch data from a network source, validate it against a defined schema, and then process it into a structured format for further use.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_c9935ff3",
      "task_type": "api_integration",
      "description": "Integrate an API to fetch unknown data, validate it, and parse it into an unspecified format.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "age": {
              "type": "integer"
            }
          },
          "required": [
            "id",
            "name",
            "age"
          ]
        }
      },
      "expected_outputs": {
        "success": true,
        "data": {
          "id": "12345",
          "name": "John Doe",
          "age": 30
        },
        "metadata": {
          "processed_at": "2023-10-01T12:00:00Z"
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "data_processing_parser"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:28:12.885873",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task fetches data from a network source, validates the data against a defined schema, and processes the validated data into a structured format for further use.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_9508181c",
      "task_type": "api_integration",
      "description": "Retrieve unknown data, validate it, and post the processed result in an unspecified format.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "options": {}
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "status": "Data posted successfully",
          "timestamp": "2023-10-10T12:00:00Z"
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "network_poster"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:28:16.348915",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task fetches data from a specified API, validates it against a defined schema, and processes it to ensure quality and integrity before posting it to a destination API.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_769b14da",
      "task_type": "api_integration",
      "description": "Integrate an API to fetch data, validate it, and parse it into a structured format.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "number"
            },
            "name": {
              "type": "string"
            },
            "email": {
              "type": "string",
              "format": "email"
            }
          },
          "required": [
            "id",
            "name",
            "email"
          ]
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "data": {
          "id": 123,
          "name": "John Doe",
          "email": "john.doe@example.com"
        },
        "metadata": {
          "validation_time": "2023-10-03T12:00:00Z"
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "data_processing_parser"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:28:20.336319",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task fetches data from a specified API endpoint, validates the retrieved data against a predefined schema, and processes it if valid. The task ensures that data integrity is maintained throughout the workflow.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_86b7deec",
      "task_type": "api_integration",
      "description": "Integrate an API to fetch data, validate it, and parse it into a structured format.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "options": {}
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": [],
        "data": {
          "parsed_data": "structured data after validation"
        },
        "metadata": {
          "operation_time": "time taken for validation"
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "data_processing_parser"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:27:37.086309",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task fetches data from a specified API, validates the retrieved data against a predefined schema, and processes it for further use.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_8caa4bc1",
      "task_type": "api_integration",
      "description": "Integrate an API to fetch unknown data, validate it, and parse it into an unspecified format.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer"
            },
            "name": {
              "type": "string"
            },
            "email": {
              "type": "string",
              "format": "email"
            }
          },
          "required": [
            "id",
            "name",
            "email"
          ]
        },
        "options": {}
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": [],
        "data": [
          {
            "id": 1,
            "name": "John Doe",
            "email": "john.doe@example.com"
          }
        ],
        "metadata": {
          "parsed_count": 1,
          "total_count": 1
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "data_processing_parser"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:27:41.695808",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task integrates data fetching, validation, and parsing to ensure data integrity from an API source to a structured format, suitable for downstream processes.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_06322d5f",
      "task_type": "api_integration",
      "description": "Integrate an API to fetch data, validate it, and transform it into a new format.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "options": {}
      },
      "expected_outputs": {
        "success": true,
        "transformed_data": {
          "field1": "value1",
          "field2": "value2"
        },
        "metadata": {
          "operation": "data transformation",
          "timestamp": "2023-10-01T12:00:00Z"
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "data_processing_transformer"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:27:46.204035",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task fetches data from a specified API, validates the retrieved data against a schema for correctness, and transforms it into a desired format for further use.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_3602dd21",
      "task_type": "api_integration",
      "description": "Retrieve unknown data, validate it, and parse it into an unspecified format using three tools.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer"
            },
            "name": {
              "type": "string"
            },
            "value": {
              "type": "number"
            }
          },
          "required": [
            "id",
            "name",
            "value"
          ]
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": [],
        "data": {
          "id": 1,
          "name": "Sample Data",
          "value": 100.5
        },
        "metadata": {
          "timestamp": "2023-10-01T12:00:00Z",
          "source": "API"
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "data_processing_parser"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:27:52.210430",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task integrates multiple tools to fetch data from a specified API, validate the fetched data against a predefined schema, and then process the valid data for further use.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_042ec29f",
      "task_type": "api_integration",
      "description": "Integrate an API to fetch data, validate it, and transform it into a new format.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer"
            },
            "name": {
              "type": "string"
            },
            "value": {
              "type": "number"
            }
          },
          "required": [
            "id",
            "name",
            "value"
          ]
        }
      },
      "expected_outputs": {
        "success": true,
        "transformed_data": {
          "data_id": 1,
          "data_name": "Sample Data",
          "data_value": 100.0
        },
        "metadata": {
          "timestamp": "2023-10-01T12:00:00Z"
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "data_processing_transformer"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:27:57.111619",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task integrates multiple tools to fetch data from a specified API, validate the retrieved data against a predefined schema, and then transform the validated data into a different format for further processing or storage.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_1542562f",
      "task_type": "api_integration",
      "description": "Retrieve unknown data, validate it, and parse it into an unspecified format using three tools.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "age": {
              "type": "integer"
            }
          },
          "required": [
            "id",
            "name",
            "age"
          ]
        },
        "data": {}
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": [],
        "data": {
          "id": "123",
          "name": "John Doe",
          "age": 30
        },
        "metadata": {}
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "data_processing_parser"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:28:04.070229",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task integrates various tools to fetch data from a specified API, validate its structure against a predefined schema, and process the data for further usage. The workflow ensures that only valid data is processed and passed along.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_4c01c5ad",
      "task_type": "api_integration",
      "description": "Integrate an API to fetch data, validate it, and transform it into a new format.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "number"
            },
            "name": {
              "type": "string"
            },
            "email": {
              "type": "string",
              "format": "email"
            }
          },
          "required": [
            "id",
            "name",
            "email"
          ]
        }
      },
      "expected_outputs": {
        "success": true,
        "transformed_data": {
          "userId": 1,
          "fullName": "John Doe",
          "contact": "john.doe@example.com"
        },
        "metadata": {
          "processing_time": "200ms",
          "transformation_format": "JSON to XML"
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "data_processing_transformer"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:28:08.586463",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task integrates multiple tools to fetch data from a specified API, validate it against a schema, and then transform the validated data into a desired format for further processing.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_a70aacd2",
      "task_type": "api_integration",
      "description": "Integrate an API to fetch data, validate it, and post the result.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "options": {}
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "status": "Data posted successfully",
          "timestamp": "2023-10-10T10:00:00Z"
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "network_poster"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:28:11.961805",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task fetches data from a specified API, validates it against a predefined schema, and processes it to ensure data quality before sending it to a destination.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_9fd8775a",
      "task_type": "api_integration",
      "description": "Integrate an API to fetch unknown data, validate it, parse it, and post the result.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "value": {
              "type": "number"
            }
          },
          "required": [
            "id",
            "name",
            "value"
          ]
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "posted_at": "2023-10-01T12:00:00Z",
          "destination": "https://api.example.com/submit"
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "data_processing_parser",
        "network_poster"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:28:17.355535",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task fetches data from a specified network source, validates the data against a predefined schema, and processes it into a structured format before posting it to a destination endpoint.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_b9f8bc81",
      "task_type": "api_integration",
      "description": "Retrieve unknown data, validate it, and parse it through three tools to produce an unspecified result.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer"
            },
            "name": {
              "type": "string"
            },
            "email": {
              "type": "string",
              "format": "email"
            }
          },
          "required": [
            "id",
            "name",
            "email"
          ]
        }
      },
      "expected_outputs": {
        "success": true,
        "data": {
          "id": 123,
          "name": "John Doe",
          "email": "john.doe@example.com"
        },
        "metadata": {
          "validation_status": "valid",
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "data_processing_parser"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:28:21.059920",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task fetches data from a specified network source, validates it against a defined schema to ensure integrity, and processes it into a structured format for further use.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_8763a651",
      "task_type": "api_integration",
      "description": "Retrieve unknown data, validate it, and parse it into an unspecified format using three tools.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "age": {
              "type": "integer"
            }
          },
          "required": [
            "id",
            "name",
            "age"
          ]
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": [],
        "data": {
          "id": "123",
          "name": "John Doe",
          "age": 30
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "data_processing_parser"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:27:38.061439",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task integrates an API to fetch data from a specified source, validate the data against a predefined schema, and then process the validated data for further use. The workflow ensures data integrity and compliance before proceeding with the next steps.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_e798d3f7",
      "task_type": "api_integration",
      "description": "Fetch unknown data, validate it, and parse it to produce an unspecified output format.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "options": {}
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": [],
        "data": {
          "parsedField1": "value1",
          "parsedField2": "value2"
        },
        "metadata": {
          "timestamp": "2023-10-01T12:00:00Z",
          "source": "API"
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "data_processing_parser"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:27:41.395712",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task fetches data from a specified API endpoint, validates the retrieved data against a predefined schema, and processes the valid data for further usage.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_d7d3bda8",
      "task_type": "api_integration",
      "description": "Integrate an API to fetch unknown data, validate it, and transform it into an unspecified format.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "value": {
              "type": "number"
            }
          },
          "required": [
            "id",
            "name"
          ]
        },
        "data": {}
      },
      "expected_outputs": {
        "success": true,
        "transformed_data": {
          "identifier": "string",
          "fullName": "string",
          "numericValue": "number"
        },
        "metadata": {}
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "data_processing_transformer"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:27:46.844961",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task integrates an API to fetch data from a remote source, validate it against a predefined schema, and transform it into a desired format for further processing. It ensures data quality and compatibility at each step.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_7901c503",
      "task_type": "api_integration",
      "description": "Integrate an API to fetch data, validate it, and transform it into a new format.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer"
            },
            "name": {
              "type": "string"
            },
            "email": {
              "type": "string",
              "format": "email"
            }
          },
          "required": [
            "id",
            "name",
            "email"
          ]
        }
      },
      "expected_outputs": {
        "success": true,
        "transformed_data": {
          "userId": 1,
          "fullName": "John Doe",
          "contact": "john.doe@example.com"
        },
        "metadata": {
          "operation_time": "2023-10-01T12:00:00Z",
          "records_processed": 100
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "data_processing_transformer"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:27:51.703703",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task integrates an API to fetch data from a specified source, validate it against a defined schema, and transform the validated data into a different format for further processing.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_3d160dd0",
      "task_type": "api_integration",
      "description": "Integrate an API to fetch data, validate it, and transform it into a new format.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer"
            },
            "name": {
              "type": "string"
            },
            "email": {
              "type": "string",
              "format": "email"
            }
          },
          "required": [
            "id",
            "name",
            "email"
          ]
        }
      },
      "expected_outputs": {
        "success": true,
        "transformed_data": {
          "user_id": 1,
          "full_name": "John Doe",
          "contact": "john.doe@example.com"
        },
        "metadata": {}
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "data_processing_transformer"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:27:57.257919",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task integrates an API to fetch data from a specified source, validate it against a predefined schema, and then transform the validated data into a different format for further processing.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_b3cfcdfd",
      "task_type": "api_integration",
      "description": "Integrate an API to fetch data, validate it, and parse it into an unspecified format.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "options": {}
      },
      "expected_outputs": {
        "success": true,
        "data": {
          "structured_data": "Parsed and validated data from API"
        },
        "metadata": {
          "processing_time": "150ms",
          "validation_errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "data_processing_parser"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:28:00.397489",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task retrieves data from a specified API endpoint, validates the data against a predefined schema to ensure its correctness, and processes the validated data into a structured format for further use.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_a8f9d1b1",
      "task_type": "api_integration",
      "description": "Retrieve unknown data, validate it, and parse it through three tools to produce an unspecified output.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer"
            },
            "name": {
              "type": "string"
            },
            "email": {
              "type": "string",
              "format": "email"
            }
          },
          "required": [
            "id",
            "name",
            "email"
          ]
        },
        "data": {}
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": [],
        "data": {
          "id": 1,
          "name": "John Doe",
          "email": "john.doe@example.com"
        },
        "metadata": {}
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "data_processing_parser"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:28:07.421665",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task integrates multiple API operations to fetch data from a network source, validate the data against a predefined schema, and process the validated data further. It ensures that the retrieved data is both accurate and ready for use in subsequent applications.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_fc3d39b0",
      "task_type": "api_integration",
      "description": "Integrate an API to fetch data, validate it, and parse it into a structured format.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer"
            },
            "name": {
              "type": "string"
            },
            "email": {
              "type": "string",
              "format": "email"
            }
          },
          "required": [
            "id",
            "name",
            "email"
          ]
        }
      },
      "expected_outputs": {
        "success": true,
        "data": {
          "id": 123,
          "name": "John Doe",
          "email": "john.doe@example.com"
        },
        "metadata": {
          "source": "https://api.example.com/data",
          "validation_time": "2023-10-01T12:00:00Z"
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "data_processing_parser"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:28:12.774752",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task integrates an API to fetch data from a specified source, validate the retrieved data against a defined schema, and then process the validated data into a structured format for further use.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_8b6a2ba5",
      "task_type": "api_integration",
      "description": "Fetch unknown data, validate it, then transform it into an unspecified format using three tools.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer"
            },
            "name": {
              "type": "string"
            },
            "email": {
              "type": "string",
              "format": "email"
            }
          },
          "required": [
            "id",
            "name",
            "email"
          ]
        }
      },
      "expected_outputs": {
        "success": true,
        "transformed_data": {
          "userId": 1,
          "fullName": "John Doe",
          "contact": "john.doe@example.com"
        },
        "metadata": {
          "processing_time": "150ms",
          "format": "JSON"
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "data_processing_transformer"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:28:17.782605",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task integrates multiple tools to fetch data from a specified API, validate the retrieved data against a schema, and then transform it into a different format for further processing.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_22f1b098",
      "task_type": "api_integration",
      "description": "Retrieve unknown data, validate it, and parse it into an unspecified format using three tools.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer"
            },
            "name": {
              "type": "string"
            },
            "email": {
              "type": "string",
              "format": "email"
            }
          },
          "required": [
            "id",
            "name",
            "email"
          ]
        },
        "data": {}
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": [],
        "metadata": {}
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "data_processing_parser"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:28:21.654464",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task integrates multiple tools to fetch data from a specified source, validate it against a defined schema, and then process the validated data for further usage.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_3331e34a",
      "task_type": "api_integration",
      "description": "Integrate an API to fetch data, validate it, and transform it into a new format.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "age": {
              "type": "integer"
            }
          },
          "required": [
            "id",
            "name"
          ]
        }
      },
      "expected_outputs": {
        "success": true,
        "transformed_data": {
          "userId": "string",
          "fullName": "string",
          "userAge": "integer"
        },
        "metadata": {
          "transform_time": "2023-10-10T10:00:00Z"
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "data_processing_transformer"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:27:40.674616",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task integrates various tools to fetch data from a network source, validate the retrieved data against a predefined schema, and then transform the validated data into a different format for further processing.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_0ef5f0dc",
      "task_type": "api_integration",
      "description": "Retrieve unknown data, validate it, and parse it through three tools to produce an unspecified output.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "options": {}
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": [],
        "data": {
          "parsed_data": "structured data output"
        },
        "metadata": {
          "operation_time": "specific time metrics"
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "data_processing_parser"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:27:45.089775",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task fetches data from a specified API endpoint, validates the data against a predefined schema, and processes the validated data for further use.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_4871eade",
      "task_type": "api_integration",
      "description": "Integrate an API to fetch data, validate it, and transform it into a new format.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer"
            },
            "name": {
              "type": "string"
            },
            "email": {
              "type": "string",
              "format": "email"
            }
          },
          "required": [
            "id",
            "name",
            "email"
          ]
        },
        "data": {}
      },
      "expected_outputs": {
        "success": true,
        "transformed_data": {
          "user_id": 1,
          "full_name": "John Doe",
          "contact_email": "john.doe@example.com"
        },
        "metadata": {
          "processing_time": "200ms",
          "transformation_details": "Converted JSON to a structured format"
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "data_processing_transformer"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:27:50.395753",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task integrates an API to fetch data from a specified source, validates it against a defined schema, and then processes the validated data. The workflow ensures data integrity and prepares it for further usage.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_30107336",
      "task_type": "api_integration",
      "description": "Retrieve unknown data, validate it, and post the processed result using three tools.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer"
            },
            "name": {
              "type": "string"
            },
            "email": {
              "type": "string",
              "format": "email"
            }
          },
          "required": [
            "id",
            "name",
            "email"
          ]
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "timestamp": "2023-10-01T12:00:00Z",
          "records_sent": 100
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "network_poster"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:27:56.291021",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task fetches data from a specified API, validates the data against a defined schema, and processes the data for further use. It ensures that only valid data is processed and can be sent to a designated endpoint.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_907e542c",
      "task_type": "api_integration",
      "description": "Integrate an API to fetch data, validate it, and parse it into a structured format.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "age": {
              "type": "integer"
            }
          },
          "required": [
            "id",
            "name",
            "age"
          ]
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": [],
        "data": {
          "id": "123",
          "name": "John Doe",
          "age": 30
        },
        "metadata": {
          "retrieval_time": "2023-10-01T12:00:00Z",
          "validation_time": "2023-10-01T12:00:01Z"
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "data_processing_parser"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:28:03.049822",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task fetches data from a specified API, validates the retrieved data against a predefined schema, and processes the validated data for further use.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_b383079a",
      "task_type": "api_integration",
      "description": "Fetch unknown data, validate it, and parse it into an unspecified format using three tools.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer"
            },
            "name": {
              "type": "string"
            },
            "email": {
              "type": "string",
              "format": "email"
            }
          },
          "required": [
            "id",
            "name",
            "email"
          ]
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "data": [
          {
            "id": 1,
            "name": "John Doe",
            "email": "john.doe@example.com"
          },
          {
            "id": 2,
            "name": "Jane Smith",
            "email": "jane.smith@example.com"
          }
        ],
        "metadata": {
          "validation_timestamp": "2023-10-01T12:00:00Z"
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "data_processing_parser"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:28:08.586708",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This API integration task fetches data from a specified network source, validates the retrieved data against a defined schema, and processes the valid data for further use.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_dc9936b0",
      "task_type": "api_integration",
      "description": "Fetch data, validate it, and parse it through three tools to produce a processed result.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "options": {}
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "parsed_data": {
          "field1": "value1",
          "field2": "value2"
        },
        "metadata": {
          "fetched_at": "2023-10-01T12:00:00Z",
          "validation_errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "data_processing_parser"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:28:12.411735",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task fetches data from a specified API, validates it against a predefined schema to ensure data quality, and processes the validated data for further use.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_d342beac",
      "task_type": "api_integration",
      "description": "Retrieve unknown data, validate it, and parse it to produce an unspecified output format.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "options": {}
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": [],
        "metadata": {}
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "data_processing_parser"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:28:15.598621",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task fetches data from a specified API, validates it against a predefined schema to ensure data integrity, and processes the validated data for further use.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_2bc7041f",
      "task_type": "api_integration",
      "description": "Retrieve unknown data, validate it, then parse and structure it for unspecified output.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "options": {}
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": [],
        "metadata": {}
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "data_processing_parser"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:28:18.639978",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task integrates multiple tools to fetch data from a specified API, validate the retrieved data against a defined schema, and process the validated data for further use.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_35a8f602",
      "task_type": "api_integration",
      "description": "Integrate an API to fetch data, validate it, and parse it into a structured format.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "options": {}
      },
      "expected_outputs": {
        "success": true,
        "data": {
          "parsed_data": {
            "field1": "value1",
            "field2": "value2"
          },
          "metadata": {}
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "data_processing_parser"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:28:22.086578",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task fetches data from a specified API, validates it against a predefined schema, and then processes the validated data into a structured format for further use.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_bc2ef432",
      "task_type": "api_integration",
      "description": "Integrate an API to fetch data, validate it, and transform it into a new format.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "value": {
              "type": "number"
            }
          },
          "required": [
            "id",
            "name",
            "value"
          ]
        }
      },
      "expected_outputs": {
        "success": true,
        "transformed_data": {
          "data": [
            {
              "identifier": "1",
              "fullName": "Item One",
              "amount": 100
            },
            {
              "identifier": "2",
              "fullName": "Item Two",
              "amount": 200
            }
          ]
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "data_processing_transformer"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:27:40.890256",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task integrates an API to fetch data from a specified source, validate that data against a defined schema, and finally transform the validated data into a different format for further processing or storage.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_5dc7b297",
      "task_type": "api_integration",
      "description": "Retrieve unknown data, validate it, and parse it into an unspecified format using three tools.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer"
            },
            "name": {
              "type": "string"
            },
            "email": {
              "type": "string",
              "format": "email"
            }
          },
          "required": [
            "id",
            "name",
            "email"
          ]
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": [],
        "data": {
          "id": 1,
          "name": "John Doe",
          "email": "john.doe@example.com"
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "data_processing_parser"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:27:46.405276",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task integrates an API to fetch data from a specified network source, validate the data against a defined schema, and process the validated data for further use.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_3073f111",
      "task_type": "api_integration",
      "description": "Retrieve unknown data, validate it, then transform it into an unspecified format using three tools.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer"
            },
            "name": {
              "type": "string"
            },
            "value": {
              "type": "number"
            }
          },
          "required": [
            "id",
            "name",
            "value"
          ]
        }
      },
      "expected_outputs": {
        "success": true,
        "transformed_data": {
          "data": [
            {
              "identifier": 1,
              "full_name": "Sample Name 1",
              "amount": 100.0
            },
            {
              "identifier": 2,
              "full_name": "Sample Name 2",
              "amount": 200.0
            }
          ]
        },
        "metadata": {
          "transformation_status": "completed"
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "data_processing_transformer"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:27:51.596582",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task integrates API calls to fetch raw data from a specified source, validate it against a defined schema, and then transform it into a desired format for further processing.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_af615c25",
      "task_type": "api_integration",
      "description": "Integrate an API to fetch, validate, and parse unknown data into an unspecified format.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "options": {}
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": [],
        "metadata": {}
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "data_processing_parser"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:27:54.240534",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task fetches data from a specified API, validates it against a predefined schema, and processes the data for further use.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_45da54d3",
      "task_type": "api_integration",
      "description": "Integrate an API to fetch data, validate it, and parse it into a structured format.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "age": {
              "type": "integer"
            }
          },
          "required": [
            "id",
            "name"
          ]
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": [],
        "data": {
          "id": "123",
          "name": "John Doe",
          "age": 30
        },
        "metadata": {
          "fetched_at": "2023-10-10T12:00:00Z",
          "validation_time": "2023-10-10T12:01:00Z"
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "data_processing_parser"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:27:58.963689",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task integrates an API to fetch data from a specified source, validate the retrieved data against a defined schema, and process the validated data for further use.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_86a7e829",
      "task_type": "api_integration",
      "description": "Retrieve unknown data, validate it, and post the processed result to an unspecified destination.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "options": {}
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "status": "Data posted successfully",
          "timestamp": "2023-10-30T12:00:00Z"
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "network_poster"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:28:03.804084",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task fetches data from a specified API endpoint, validates the retrieved data against a predefined schema, and processes it for further use or storage.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_12dd36ca",
      "task_type": "api_integration",
      "description": "Retrieve unknown data, validate it, and post the processed result in an unspecified format.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer"
            },
            "name": {
              "type": "string"
            },
            "email": {
              "type": "string",
              "format": "email"
            }
          },
          "required": [
            "id",
            "name",
            "email"
          ]
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "message": "Data successfully posted."
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "network_poster"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:28:07.771075",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task integrates multiple tools to fetch data from a specified API, validate it against a predefined schema, and then process the validated data for further use. The workflow ensures data integrity and quality before sending it to a designated destination.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_12adc02e",
      "task_type": "api_integration",
      "description": "Fetch unknown data, validate it, and post the processed result in an unspecified format.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "options": {}
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "status": "Data posted successfully",
          "timestamp": "2023-10-05T12:00:00Z"
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "network_poster"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:28:10.790148",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task integrates multiple tools to fetch data from a specified API, validate the retrieved data against a defined schema, and process it for further use.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_43ffffe8",
      "task_type": "api_integration",
      "description": "Fetch data, validate it, and post the result after processing through three tools.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer"
            },
            "name": {
              "type": "string"
            },
            "email": {
              "type": "string",
              "format": "email"
            }
          },
          "required": [
            "id",
            "name",
            "email"
          ]
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "timestamp": "2023-10-01T12:00:00Z",
          "message": "Data successfully posted"
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "network_poster"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:28:16.001637",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task fetches data from a specified source, validates it against a predefined schema, and processes it to ensure integrity before sending it to a designated destination.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_3189fd09",
      "task_type": "api_integration",
      "description": "Integrate an API to fetch data, validate it, and parse it into a structured format.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "value": {
              "type": "number"
            }
          },
          "required": [
            "id",
            "name",
            "value"
          ]
        },
        "data": {}
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": [],
        "data": {
          "parsed_data": [
            {
              "id": "1",
              "name": "Sample Data",
              "value": 123
            }
          ]
        },
        "metadata": {}
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "data_processing_parser"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:28:22.282012",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task integrates an API to fetch data from a specified source, validate it against a predefined schema, and process the data for further use. It ensures that only valid data is passed through the workflow.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_d864f4ec",
      "task_type": "api_integration",
      "description": "Retrieve unknown data, validate it, and parse it into an unspecified format using three tools.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "value": {
              "type": "number"
            }
          },
          "required": [
            "id",
            "name",
            "value"
          ]
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": [],
        "data": {
          "id": "12345",
          "name": "Sample Data",
          "value": 100
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "data_processing_parser"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:27:38.391448",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task integrates multiple API calls to fetch data from a remote source, validate the data against a predefined schema, and then process the validated data for further use.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_2206a310",
      "task_type": "api_integration",
      "description": "Retrieve unknown data, validate it, and parse it into an unspecified format using three tools.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "options": {}
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": [],
        "data": {
          "field1": "value1",
          "field2": "value2"
        },
        "metadata": {
          "timestamp": "2023-10-10T12:00:00Z",
          "source": "API"
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "data_processing_parser"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:27:41.786565",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task fetches data from a specified API, validates it against a predefined schema, and processes the valid data for further use.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_6839f216",
      "task_type": "api_integration",
      "description": "Fetch unknown data, validate it, and parse it into an unspecified format using three tools.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "value": {
              "type": "number"
            }
          },
          "required": [
            "id",
            "name",
            "value"
          ]
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": [],
        "data": {
          "id": "123",
          "name": "Sample Data",
          "value": 100
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "data_processing_parser"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:27:46.327010",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task integrates multiple tools to fetch data from a specified network source, validate the data against a predefined schema, and process the valid data for further usage or storage.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_08a6e77f",
      "task_type": "api_integration",
      "description": "Retrieve unknown data, validate it, then parse it to produce an unspecified output format.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "number"
            },
            "name": {
              "type": "string"
            },
            "email": {
              "type": "string",
              "format": "email"
            }
          },
          "required": [
            "id",
            "name",
            "email"
          ]
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": [],
        "data": {
          "id": 1,
          "name": "John Doe",
          "email": "john.doe@example.com"
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "data_processing_parser"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:27:51.965753",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task integrates an API to fetch data from a specified source, validate it against a schema to ensure its correctness, and then process the validated data for further use.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_54444f08",
      "task_type": "api_integration",
      "description": "Retrieve unknown data, validate it, and parse it into an unspecified format using three tools.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer"
            },
            "name": {
              "type": "string"
            },
            "email": {
              "type": "string",
              "format": "email"
            }
          },
          "required": [
            "id",
            "name",
            "email"
          ]
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "data": {
          "parsed_data": [
            {
              "id": 1,
              "name": "John Doe",
              "email": "john.doe@example.com"
            },
            {
              "id": 2,
              "name": "Jane Smith",
              "email": "jane.smith@example.com"
            }
          ]
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "data_processing_parser"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:27:57.116502",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task fetches data from a specified source, validates it against a predefined schema, and finally processes the validated data for further use. The workflow ensures that only valid data is processed, improving data quality and integrity.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_91ae442e",
      "task_type": "api_integration",
      "description": "Integrate an API to fetch data, validate it, and transform it into a new format.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer"
            },
            "name": {
              "type": "string"
            },
            "email": {
              "type": "string",
              "format": "email"
            }
          },
          "required": [
            "id",
            "name",
            "email"
          ]
        },
        "data": {}
      },
      "expected_outputs": {
        "success": true,
        "transformed_data": {
          "userId": 1,
          "fullName": "John Doe",
          "contact": "john.doe@example.com"
        },
        "metadata": {}
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "data_processing_transformer"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:28:03.664191",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task integrates an API to fetch data from a specified source, validate the retrieved data against a predefined schema, and then transform the validated data into a different format.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_63f83d00",
      "task_type": "api_integration",
      "description": "Retrieve unknown data, validate it, and parse it into an unspecified format using three tools.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "options": {}
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": [],
        "data": {
          "parsed_data": "structured format of the fetched data"
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "data_processing_parser"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:28:06.532109",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task fetches data from a specified API, validates the data against a predefined schema, and processes the validated data for further use.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_1d690545",
      "task_type": "api_integration",
      "description": "Retrieve unknown data, validate it, and parse it through three tools to produce an unspecified output.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "options": {}
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": [],
        "data": {
          "parsed_data": "structured data from the API"
        },
        "metadata": {
          "fetch_time": "2023-10-10T12:00:00Z"
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "data_processing_parser"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:28:09.996593",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task fetches data from a specified API endpoint, validates the retrieved data against a predefined schema, and processes it for further use.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_1b0d5ef8",
      "task_type": "api_integration",
      "description": "Integrate an API to fetch data, validate it, and transform it into a specified format.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer"
            },
            "name": {
              "type": "string"
            },
            "email": {
              "type": "string",
              "format": "email"
            }
          },
          "required": [
            "id",
            "name",
            "email"
          ]
        },
        "data": null,
        "input_format": "JSON",
        "output_format": "XML"
      },
      "expected_outputs": {
        "success": true,
        "transformed_data": "<data><id>1</id><name>John Doe</name><email>john.doe@example.com</email></data>",
        "metadata": {
          "operation_time": "200ms",
          "records_transformed": 1
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "data_processing_transformer"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:28:16.269095",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task integrates multiple APIs to fetch data from a specified source, validate the retrieved data against a defined schema, and transform the valid data into a different format for further processing.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_c38e52d7",
      "task_type": "api_integration",
      "description": "Fetch unknown data, validate it, and transform it into an unspecified format using three tools.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer"
            },
            "name": {
              "type": "string"
            },
            "email": {
              "type": "string",
              "format": "email"
            }
          },
          "required": [
            "id",
            "name",
            "email"
          ]
        }
      },
      "expected_outputs": {
        "success": true,
        "transformed_data": {
          "userId": 1,
          "fullName": "John Doe",
          "contact": "john.doe@example.com"
        },
        "metadata": {
          "processing_time": "200ms",
          "input_format": "JSON",
          "output_format": "XML"
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "data_processing_transformer"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:28:22.604991",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task integrates multiple tools to fetch data from a specified API, validate its format against a predefined schema, and transform the data into a different format for further processing.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_f15c0a31",
      "task_type": "api_integration",
      "description": "Fetch unknown data, validate it, and parse it through three tools to produce an unspecified output.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "options": {}
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": [],
        "metadata": {
          "validation_time": "2023-10-03T12:00:00Z",
          "data_source": "https://api.example.com/data"
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "data_processing_parser"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:27:37.687980",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task fetches data from a specified API, validates the data against a defined schema, and processes the validated data for further use.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_d0cc9539",
      "task_type": "api_integration",
      "description": "Retrieve unknown data, validate it, and parse it through three tools to produce an unspecified result.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer"
            },
            "name": {
              "type": "string"
            },
            "email": {
              "type": "string",
              "format": "email"
            }
          },
          "required": [
            "id",
            "name",
            "email"
          ]
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "data": {
          "id": 123,
          "name": "John Doe",
          "email": "john.doe@example.com"
        },
        "metadata": {}
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "data_processing_parser"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:27:42.002064",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task fetches data from a specified API, validates the data against a predefined schema, and processes it into a structured format for further use.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_389cf01b",
      "task_type": "api_integration",
      "description": "Integrate an API to fetch data, validate it, and parse it into a structured format.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer"
            },
            "name": {
              "type": "string"
            },
            "email": {
              "type": "string",
              "format": "email"
            }
          },
          "required": [
            "id",
            "name",
            "email"
          ]
        }
      },
      "expected_outputs": {
        "success": true,
        "data": {
          "parsed_data": [
            {
              "id": 1,
              "name": "John Doe",
              "email": "john.doe@example.com"
            },
            {
              "id": 2,
              "name": "Jane Smith",
              "email": "jane.smith@example.com"
            }
          ]
        },
        "metadata": {
          "timestamp": "2023-10-01T12:00:00Z",
          "source": "https://api.example.com/data"
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "data_processing_parser"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:27:48.104745",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task fetches data from a specified network source, validates the data against a predefined schema to ensure its correctness, and processes the data into a structured format for further use.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_79a75042",
      "task_type": "api_integration",
      "description": "Retrieve unknown data, validate it, and parse it through three tools to produce an unspecified result.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "options": {}
      },
      "expected_outputs": {
        "success": true,
        "data": {
          "parsed_data": {
            "id": "123",
            "name": "Sample Data",
            "value": "Some value"
          },
          "metadata": {
            "timestamp": "2023-10-01T12:00:00Z",
            "source": "API"
          }
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "data_processing_parser"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:27:51.715631",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task fetches data from a specified API, validates the retrieved data against a predefined schema, and processes the valid data into a structured format for further use.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_1658a4c0",
      "task_type": "api_integration",
      "description": "Integrate an API to fetch unknown data, validate it, and parse it into an unspecified format.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "options": {}
      },
      "expected_outputs": {
        "success": true,
        "data": {
          "parsed_data": "structured format of the data",
          "metadata": "metadata about the parsing operation"
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "data_processing_parser"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:27:54.880236",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task fetches data from a specified API endpoint, validates the data against a predefined schema, and processes it into a structured format for further use.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_5d01bfe7",
      "task_type": "api_integration",
      "description": "Retrieve unknown data, validate it, and parse it into an unspecified format using three tools.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer"
            },
            "name": {
              "type": "string"
            },
            "value": {
              "type": "number"
            }
          },
          "required": [
            "id",
            "name",
            "value"
          ]
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": [],
        "metadata": {
          "fetch_time": "2023-10-01T12:00:00Z",
          "validation_time": "2023-10-01T12:01:00Z"
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "data_processing_parser"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:27:59.209652",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task integrates an API that fetches data from a specified source, validates the fetched data against a predefined schema, and processes the data if it is valid.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_1f1b950c",
      "task_type": "api_integration",
      "description": "Integrate an API to fetch, validate, parse, and post data with an unknown structure.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer"
            },
            "name": {
              "type": "string"
            },
            "email": {
              "type": "string",
              "format": "email"
            }
          },
          "required": [
            "id",
            "name",
            "email"
          ]
        },
        "data": null,
        "destination": "https://api.example.com/submit"
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "timestamp": "2023-10-10T12:00:00Z",
          "requestId": "12345"
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "data_processing_parser",
        "network_poster"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:28:07.443819",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task fetches data from a specified network source, validates it against a predefined schema to ensure its correctness, and processes the data into a structured format before sending it to a specified destination.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_e0d79f87",
      "task_type": "api_integration",
      "description": "Integrate an API to fetch data, validate it, and parse it into a structured format.",
      "inputs": {
        "source": "https://api.example.com/users",
        "timeout": 30,
        "retry_count": 3,
        "schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer"
            },
            "name": {
              "type": "string"
            },
            "email": {
              "type": "string",
              "format": "email"
            }
          },
          "required": [
            "id",
            "name",
            "email"
          ]
        }
      },
      "expected_outputs": {
        "success": true,
        "data": {
          "users": [
            {
              "id": 1,
              "name": "John Doe",
              "email": "john.doe@example.com"
            },
            {
              "id": 2,
              "name": "Jane Smith",
              "email": "jane.smith@example.com"
            }
          ]
        },
        "metadata": {
          "total_users": 2,
          "valid_count": 2,
          "invalid_count": 0
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "data_processing_parser"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:28:14.067799",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task integrates an API to fetch user data from a remote source, validates the retrieved data against a predefined schema, and processes it into a structured format for further use.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_ff25c81e",
      "task_type": "api_integration",
      "description": "Integrate an API to fetch data, validate it, and transform it into a new format.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer"
            },
            "name": {
              "type": "string"
            },
            "email": {
              "type": "string",
              "format": "email"
            }
          },
          "required": [
            "id",
            "name",
            "email"
          ]
        },
        "data": {}
      },
      "expected_outputs": {
        "success": true,
        "transformed_data": {
          "userId": 1,
          "userName": "John Doe",
          "userEmail": "john.doe@example.com"
        },
        "metadata": {}
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "data_processing_transformer"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:28:18.826359",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task integrates an API to fetch data from a specified source, validate it against a defined schema, and then transform it into a desired format. The workflow ensures that the data is retrieved, checked for correctness, and reformatted for further use.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_df038dd1",
      "task_type": "api_integration",
      "description": "Fetch unknown data, validate it, and post the processed result to an unspecified destination.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "value": {
              "type": "number"
            }
          },
          "required": [
            "id",
            "name",
            "value"
          ]
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "destination": "https://api.example.com/submit",
          "timestamp": "2023-10-04T12:00:00Z"
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "network_poster"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:28:22.818614",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task fetches data from a specified source, validates it against a predefined schema, and processes it to ensure quality and integrity before sending it to a destination.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_d0810d85",
      "task_type": "api_integration",
      "description": "Integrate an API to fetch data, validate it, and transform it into a new format.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer"
            },
            "name": {
              "type": "string"
            },
            "email": {
              "type": "string",
              "format": "email"
            }
          },
          "required": [
            "id",
            "name",
            "email"
          ]
        },
        "data": {}
      },
      "expected_outputs": {
        "success": true,
        "transformed_data": {
          "userId": 1,
          "userName": "John Doe",
          "userEmail": "john.doe@example.com"
        },
        "metadata": {}
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "data_processing_transformer"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:27:38.587346",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task integrates multiple tools to fetch data from a network source, validate it against a predefined schema, and then transform it into a specified format, ensuring data quality and compliance throughout the process.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_773826e5",
      "task_type": "api_integration",
      "description": "Fetch unknown data, validate its structure, and transform it into an unspecified format.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "options": {}
      },
      "expected_outputs": {
        "success": true,
        "transformed_data": {
          "key": "value"
        },
        "metadata": {
          "processing_time": "100ms"
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "data_processing_transformer"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:27:41.949839",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task fetches data from a specified API, validates the data against a defined schema for correctness, and transforms the valid data into a different format for further use.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_66b97bce",
      "task_type": "api_integration",
      "description": "Integrate an API to fetch data, validate it, parse it, and post the result.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer"
            },
            "name": {
              "type": "string"
            },
            "email": {
              "type": "string",
              "format": "email"
            }
          },
          "required": [
            "id",
            "name",
            "email"
          ]
        },
        "data": {
          "exampleData": [
            {
              "id": 1,
              "name": "John Doe",
              "email": "john.doe@example.com"
            },
            {
              "id": 2,
              "name": "Jane Smith",
              "email": "jane.smith@example.com"
            }
          ]
        },
        "destination": "https://api.example.com/submit"
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "status": "Data posted successfully",
          "timestamp": "2023-10-01T12:00:00Z"
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "data_processing_parser",
        "network_poster"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:27:48.452946",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task retrieves data from a network source, validates it against a specified schema, and processes it into a structured format before sending it to a destination endpoint.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_9f276e6c",
      "task_type": "api_integration",
      "description": "Retrieve unknown data, validate it, then post the processed result in an unspecified format.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer"
            },
            "name": {
              "type": "string"
            },
            "email": {
              "type": "string",
              "format": "email"
            }
          },
          "required": [
            "id",
            "name",
            "email"
          ]
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "timestamp": "2023-10-12T12:00:00Z",
          "message": "Data posted successfully"
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "network_poster"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:27:52.391698",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task retrieves data from a specified API source, validates the data against a defined schema, and processes it to ensure data quality and integrity before posting it to a designated destination.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_44a7290f",
      "task_type": "api_integration",
      "description": "Integrate an API to fetch data, validate it, and parse it into a structured format.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer"
            },
            "name": {
              "type": "string"
            },
            "email": {
              "type": "string",
              "format": "email"
            }
          },
          "required": [
            "id",
            "name",
            "email"
          ]
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": [],
        "data": {
          "id": 1,
          "name": "John Doe",
          "email": "john.doe@example.com"
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "data_processing_parser"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:27:56.550655",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task is designed to fetch data from a specified API, validate the retrieved data against a predefined schema, and then process the validated data for further use.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_7c391b98",
      "task_type": "api_integration",
      "description": "Integrate an API to fetch, validate, and parse input data, producing a structured output.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer"
            },
            "name": {
              "type": "string"
            },
            "email": {
              "type": "string",
              "format": "email"
            }
          },
          "required": [
            "id",
            "name",
            "email"
          ]
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "data": {
          "parsedData": [
            {
              "id": 1,
              "name": "John Doe",
              "email": "john.doe@example.com"
            },
            {
              "id": 2,
              "name": "Jane Smith",
              "email": "jane.smith@example.com"
            }
          ]
        },
        "metadata": {
          "timestamp": "2023-10-01T12:00:00Z",
          "source": "https://api.example.com/data"
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "data_processing_parser"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:28:04.333671",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task fetches data from a specified API endpoint, validates the data against a predefined schema, and processes the validated data for further usage.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_a3a2e420",
      "task_type": "api_integration",
      "description": "Fetch unknown data, validate it, and parse it into an unspecified format using three tools.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "options": {}
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": [],
        "metadata": {
          "fetch_time": "2023-10-10T12:00:00Z",
          "validation_time": "2023-10-10T12:00:01Z"
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "data_processing_parser"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:28:08.359156",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task fetches data from a specified API endpoint, validates the retrieved data against a predefined schema to ensure its integrity, and processes the data for further use.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_d1a38b0f",
      "task_type": "api_integration",
      "description": "Retrieve unknown data, validate it, and parse it into an unspecified format using three tools.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer"
            },
            "name": {
              "type": "string"
            },
            "email": {
              "type": "string",
              "format": "email"
            }
          },
          "required": [
            "id",
            "name",
            "email"
          ]
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": [],
        "data": {
          "id": 1,
          "name": "John Doe",
          "email": "john.doe@example.com"
        },
        "metadata": {
          "validation_time": "2023-10-01T12:00:00Z"
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "data_processing_parser"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:28:13.707483",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task fetches data from a specified source, validates it against a predefined schema, and processes the validated data for further use.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_07a9512d",
      "task_type": "api_integration",
      "description": "Integrate an API to fetch data, validate it, and parse it into a structured format.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer"
            },
            "name": {
              "type": "string"
            },
            "email": {
              "type": "string",
              "format": "email"
            }
          },
          "required": [
            "id",
            "name",
            "email"
          ]
        },
        "data": {}
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": [],
        "metadata": {}
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "data_processing_parser"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:28:18.428029",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task integrates several tools to fetch data from a specified network source, validate its integrity against a defined schema, and process the validated data for further use. The workflow ensures that only correctly formatted data is passed through the system.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_65139b51",
      "task_type": "api_integration",
      "description": "Fetch unknown data, validate it, and post the processed result in an unspecified format.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "email": {
              "type": "string",
              "format": "email"
            }
          },
          "required": [
            "id",
            "name",
            "email"
          ]
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "timestamp": "2023-10-10T12:00:00Z",
          "destination": "https://api.example.com/submit"
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "network_poster"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:28:23.100406",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task fetches data from a specified network source, validates it against a predefined schema, and processes it to ensure its integrity before posting it to a destination.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_b3cbc2d7",
      "task_type": "api_integration",
      "description": "Integrate an API to fetch unknown data, validate, parse, and post the processed result.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer"
            },
            "name": {
              "type": "string"
            },
            "email": {
              "type": "string",
              "format": "email"
            }
          },
          "required": [
            "id",
            "name",
            "email"
          ]
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "status": "Data posted successfully",
          "timestamp": "2023-10-01T12:00:00Z"
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "data_processing_parser",
        "network_poster"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:27:38.114347",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task fetches data from a specified API, validates it against a predefined schema, processes the data to ensure it is in the correct format, and finally posts the processed data to a designated endpoint.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_d1478d54",
      "task_type": "api_integration",
      "description": "Fetch unknown data, validate it, and parse it into an unspecified format using three tools.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "age": {
              "type": "integer"
            }
          },
          "required": [
            "id",
            "name",
            "age"
          ]
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": [],
        "data": {
          "id": "123",
          "name": "John Doe",
          "age": 30
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "data_processing_parser"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:27:42.806815",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task integrates various tools to fetch data from a network source, validate it against a predefined schema, and process it accordingly. The workflow ensures data quality and prepares it for further use or storage.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_6fa1c8b4",
      "task_type": "api_integration",
      "description": "Integrate an API to fetch data, validate it, and parse it into a structured format.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "options": {}
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": [],
        "data": {
          "parsedData": "structured data format"
        },
        "metadata": {
          "fetch_time": "2023-10-01T12:00:00Z",
          "validation_time": "2023-10-01T12:01:00Z"
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "data_processing_parser"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:27:48.182968",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task fetches data from a specified API endpoint, validates the retrieved data against a predefined schema, and processes the validated data for further use.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_8a2abbd6",
      "task_type": "api_integration",
      "description": "Integrate an API to fetch data, validate it, and parse it into a structured format.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "options": {}
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": [],
        "metadata": {
          "timestamp": "2023-10-01T12:00:00Z",
          "processed_count": 100
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "data_processing_parser"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:27:51.146761",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task fetches data from a specified API, validates the data against a predefined schema, and processes the valid data for further use.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_b6f8d98e",
      "task_type": "api_integration",
      "description": "Fetch unknown data, validate it, and parse it into an unspecified format using three tools.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "options": {}
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": [],
        "data": {
          "parsed_data": {
            "key": "value"
          }
        },
        "metadata": {
          "fetch_time": "2023-10-01T12:00:00Z",
          "data_size": 1024
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "data_processing_parser"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:27:55.842671",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task fetches data from a specified API endpoint, validates it against a predefined schema, and processes the valid data for further use.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_0712241d",
      "task_type": "api_integration",
      "description": "Fetch unknown data, validate it, and parse it into an unspecified format using three tools.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "options": {}
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": [],
        "data": {
          "parsed_field": "parsed_value"
        },
        "metadata": {
          "fetch_time": "2023-10-01T12:00:00Z"
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "data_processing_parser"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:27:59.587420",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task fetches data from a specified API endpoint, validates the data against a defined schema, and processes the data to ensure it meets quality standards before returning it for further use.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_086cbe3f",
      "task_type": "api_integration",
      "description": "Integrate an API to fetch data, validate it, and transform it into a new format.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer"
            },
            "name": {
              "type": "string"
            },
            "email": {
              "type": "string",
              "format": "email"
            }
          },
          "required": [
            "id",
            "name",
            "email"
          ]
        },
        "data": {}
      },
      "expected_outputs": {
        "success": true,
        "transformed_data": {
          "userId": 1,
          "userName": "John Doe",
          "userEmail": "john.doe@example.com"
        },
        "metadata": {}
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "data_processing_transformer"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:28:06.871601",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task integrates an API to fetch data from a specified source, validate it against a defined schema, and then transform the valid data into a different format for further use.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_87f1488b",
      "task_type": "api_integration",
      "description": "Integrate an API to fetch, validate, and parse unknown data into an unspecified format.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer"
            },
            "name": {
              "type": "string"
            },
            "email": {
              "type": "string",
              "format": "email"
            }
          },
          "required": [
            "id",
            "name",
            "email"
          ]
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "data": {
          "id": 1,
          "name": "John Doe",
          "email": "john.doe@example.com"
        },
        "metadata": {
          "fetched_at": "2023-10-01T12:00:00Z"
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "data_processing_parser"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:28:12.297095",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task fetches data from a specified API, validates the retrieved data against a predefined schema, and processes the data into a structured format for further use.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_d4d5749b",
      "task_type": "api_integration",
      "description": "Integrate an API to fetch data, validate it, and parse it into a structured format.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer"
            },
            "name": {
              "type": "string"
            },
            "email": {
              "type": "string",
              "format": "email"
            }
          },
          "required": [
            "id",
            "name",
            "email"
          ]
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": [],
        "data": {
          "id": 123,
          "name": "John Doe",
          "email": "john.doe@example.com"
        },
        "metadata": {
          "validation_time": "2023-10-01T12:00:00Z"
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "data_processing_parser"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:28:18.196674",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task integrates multiple tools to fetch data from a network source, validate the retrieved data against a predefined schema, and then process the valid data for further use or storage.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_46d27650",
      "task_type": "api_integration",
      "description": "Integrate an API to fetch data, validate it, transform formats, and post the result.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer"
            },
            "name": {
              "type": "string"
            },
            "email": {
              "type": "string",
              "format": "email"
            }
          },
          "required": [
            "id",
            "name",
            "email"
          ]
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "message": "Data successfully posted",
          "destination": "https://api.example.com/submit"
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "data_processing_transformer",
        "network_poster"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:28:23.452643",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This API integration task fetches data from a specified network source, validates it against a defined schema for integrity, and processes it for final output. The process includes data retrieval, validation, and transformation to ensure the data meets quality standards before being sent to a destination.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_9f36a12c",
      "task_type": "api_integration",
      "description": "Fetch unknown data, validate it, and parse it into an unspecified output format.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer"
            },
            "name": {
              "type": "string"
            },
            "email": {
              "type": "string",
              "format": "email"
            }
          },
          "required": [
            "id",
            "name",
            "email"
          ]
        },
        "options": {}
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": [],
        "data": {
          "id": 1,
          "name": "John Doe",
          "email": "john.doe@example.com"
        },
        "metadata": {}
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "data_processing_parser"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:27:40.554089",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task fetches data from a specified API endpoint, validates the retrieved data against a predefined schema, and processes it for further use.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_15783ad9",
      "task_type": "api_integration",
      "description": "Integrate an API to fetch data, validate it, and transform it into a new format.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "age": {
              "type": "number"
            }
          },
          "required": [
            "id",
            "name",
            "age"
          ]
        }
      },
      "expected_outputs": {
        "success": true,
        "transformed_data": {
          "user_id": "12345",
          "full_name": "John Doe",
          "user_age": 30
        },
        "metadata": {
          "process_time": "50ms",
          "version": "1.0"
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "data_processing_transformer"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:27:46.759621",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task integrates multiple tools to fetch data from a network source, validate it against a predefined schema, and transform it into a desired format for further processing.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_722a6224",
      "task_type": "api_integration",
      "description": "Integrate an API to fetch, validate, and parse data, transforming unknown input into an unspecified output.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "options": {}
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": [],
        "data": {
          "items": [
            {
              "id": 1,
              "name": "Item 1"
            },
            {
              "id": 2,
              "name": "Item 2"
            }
          ]
        },
        "metadata": {
          "fetched_at": "2023-10-01T12:00:00Z"
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "data_processing_parser"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:27:50.561180",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task fetches data from a specified API, validates it against a predefined schema, and processes the validated data for further use.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_265dc9c4",
      "task_type": "api_integration",
      "description": "Retrieve unknown data, validate it, and post the processed result in an unspecified format.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer"
            },
            "name": {
              "type": "string"
            },
            "value": {
              "type": "number"
            }
          },
          "required": [
            "id",
            "name",
            "value"
          ]
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "status": "Data posted successfully"
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "network_poster"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:27:55.379984",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task fetches data from a specified API, validates it against a predefined schema, and processes the data to ensure it meets the required structure before sending it to a destination endpoint.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_5c572209",
      "task_type": "api_integration",
      "description": "Integrate an API to fetch data, validate it, and parse it into a structured format.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "options": {}
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": [],
        "data": {
          "parsed_field_1": "value1",
          "parsed_field_2": "value2"
        },
        "metadata": {
          "fetch_time": "2023-10-05T12:00:00Z",
          "validation_time": "2023-10-05T12:00:05Z"
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "data_processing_parser"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:27:59.144981",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task fetches data from a specified API, validates it against a predefined schema, and processes the valid data for further usage.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_e3dfe6b7",
      "task_type": "api_integration",
      "description": "Retrieve unknown data, validate it, then post the processed result to an unspecified destination.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "options": {}
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "post_status": "success",
          "post_time": "2023-10-01T12:00:00Z"
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "network_poster"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:28:04.031253",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task integrates an API to fetch data from a specified source, validate it against a defined schema, and prepare it for further processing or storage.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_d347c1d9",
      "task_type": "api_integration",
      "description": "Integrate an API to fetch data, validate it, and transform it into a new format.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer"
            },
            "name": {
              "type": "string"
            },
            "email": {
              "type": "string",
              "format": "email"
            }
          },
          "required": [
            "id",
            "name",
            "email"
          ]
        }
      },
      "expected_outputs": {
        "success": true,
        "transformed_data": {
          "userId": 1,
          "userName": "John Doe",
          "userEmail": "john.doe@example.com"
        },
        "metadata": {
          "operation_time": "2023-10-05T10:00:00Z",
          "transformations": {
            "input_format": "raw",
            "output_format": "json"
          }
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "data_processing_transformer"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:28:09.374542",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task fetches data from a specified source, validates it against a predefined schema, and processes it to ensure its correctness and integrity. The task involves fetching raw data, validating it for compliance with the schema, and then transforming it into a specified format.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_9391a46c",
      "task_type": "api_integration",
      "description": "Fetch unknown data, validate it, and post the processed result to an unspecified destination.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "options": {}
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "post_status": "completed",
          "post_time": "2023-10-10T12:00:00Z"
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "network_poster"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:28:12.899803",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task fetches data from a specified API, validates the retrieved data against a predefined schema, and processes the valid data for further use.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_acb40069",
      "task_type": "api_integration",
      "description": "Retrieve unknown data, validate it, and post the processed result in an unspecified format.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "options": {}
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "timestamp": "2023-10-01T12:00:00Z",
          "status": "Data posted successfully"
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "network_poster"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:28:19.597195",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task fetches data from a specified API, validates it against a predefined schema, and processes the data to ensure its integrity and structure before sending it to a designated endpoint.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_42729975",
      "task_type": "api_integration",
      "description": "Retrieve unknown data, validate it, and parse it through three tools to produce an unspecified output.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "options": {}
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": [],
        "data": {
          "parsed_field1": "value1",
          "parsed_field2": "value2"
        },
        "metadata": {
          "fetch_time": "2023-10-01T12:00:00Z",
          "validation_time": "2023-10-01T12:00:01Z"
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "data_processing_parser"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:28:23.530526",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task fetches data from a specified API endpoint, validates the data against a predefined schema, and processes it for further use, ensuring data quality throughout the workflow.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_f39ea0f1",
      "task_type": "api_integration",
      "description": "Retrieve unknown data, validate it, and parse it through three tools to produce an unspecified output.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer"
            },
            "name": {
              "type": "string"
            },
            "value": {
              "type": "number"
            }
          },
          "required": [
            "id",
            "name",
            "value"
          ]
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": [],
        "data": {
          "id": 1,
          "name": "Sample Data",
          "value": 100.0
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "data_processing_parser"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:27:40.051378",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task fetches data from a specified network source, validates it against a predefined schema, and processes the validated data for further use.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_83afee33",
      "task_type": "api_integration",
      "description": "Retrieve unknown data, validate it, then parse and structure it into an unspecified format.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer"
            },
            "name": {
              "type": "string"
            },
            "email": {
              "type": "string",
              "format": "email"
            }
          },
          "required": [
            "id",
            "name",
            "email"
          ]
        },
        "data": {}
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": [],
        "data": {
          "id": 1,
          "name": "John Doe",
          "email": "john.doe@example.com"
        },
        "metadata": {}
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "data_processing_parser"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:27:46.185233",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task fetches data from a specified API, validates the retrieved data against a predefined schema, and processes the validated data for further use.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_bdb7a747",
      "task_type": "api_integration",
      "description": "Retrieve unknown data, validate it, and post the processed result in an unspecified format.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer"
            },
            "name": {
              "type": "string"
            },
            "email": {
              "type": "string",
              "format": "email"
            }
          },
          "required": [
            "id",
            "name",
            "email"
          ]
        },
        "data": {
          "id": 1,
          "name": "John Doe",
          "email": "john.doe@example.com"
        },
        "destination": "https://api.example.com/submit"
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "status": "Data successfully posted"
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "network_poster"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:27:50.945251",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This API integration task fetches data from a specified network source, validates the retrieved data against a predefined schema, and processes the data to ensure its correctness before sending it to a designated endpoint.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_0d899f8e",
      "task_type": "api_integration",
      "description": "Retrieve unknown data, validate it, and post the processed result in an unspecified format.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer"
            },
            "name": {
              "type": "string"
            },
            "email": {
              "type": "string",
              "format": "email"
            }
          },
          "required": [
            "id",
            "name",
            "email"
          ]
        }
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "post_status": "success",
          "post_time": "2023-10-01T12:00:00Z"
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "network_poster"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:27:56.770796",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task fetches data from a specified API, validates it against a defined schema, and processes it to ensure its integrity before posting the results to a destination endpoint.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_813fa1a3",
      "task_type": "api_integration",
      "description": "Integrate an API to fetch, validate, and transform unknown data into an unspecified format.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer"
            },
            "name": {
              "type": "string"
            },
            "email": {
              "type": "string",
              "format": "email"
            }
          },
          "required": [
            "id",
            "name",
            "email"
          ]
        }
      },
      "expected_outputs": {
        "success": true,
        "transformed_data": {
          "userId": 1,
          "fullName": "John Doe",
          "contact": "john.doe@example.com"
        },
        "metadata": {
          "processedAt": "2023-10-01T12:00:00Z"
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "data_processing_transformer"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:28:03.493514",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task integrates an API to fetch data from a specified source, validate the retrieved data against a predefined schema, and transform it into a desired format for further processing.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_e48757c0",
      "task_type": "api_integration",
      "description": "Integrate an API to fetch data, validate it, and parse it into a structured format.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer"
            },
            "name": {
              "type": "string"
            },
            "email": {
              "type": "string",
              "format": "email"
            }
          },
          "required": [
            "id",
            "name",
            "email"
          ]
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "data": {
          "parsed_data": [
            {
              "id": 1,
              "name": "John Doe",
              "email": "john.doe@example.com"
            },
            {
              "id": 2,
              "name": "Jane Smith",
              "email": "jane.smith@example.com"
            }
          ]
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "data_processing_parser"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:28:08.857740",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task fetches data from a specified network source, validates it against a predefined schema to ensure its correctness, and processes the validated data for further usage.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_6e60bd79",
      "task_type": "api_integration",
      "description": "Retrieve unknown data, validate it, then post the processed result in an unspecified format.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "options": {}
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "timestamp": "2023-10-01T12:00:00Z",
          "status": "Data posted successfully"
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "network_poster"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:28:12.258893",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task fetches data from a specified API, validates the data against a defined schema, and processes it to ensure data integrity before sending the validated data to a specified endpoint.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_970ebaa1",
      "task_type": "api_integration",
      "description": "Fetch unknown data, validate it, and post the processed result in an unspecified format.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "options": {}
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "destination": "https://api.example.com/submit",
          "status_code": 200
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "network_poster"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:28:16.139840",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task fetches data from a specified source, validates it against a predefined schema, and processes it to ensure accuracy and integrity before sending it to a final destination.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_80606dc4",
      "task_type": "api_integration",
      "description": "Integrate an API to fetch data, validate it, and parse it into a structured format.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer"
            },
            "name": {
              "type": "string"
            },
            "email": {
              "type": "string",
              "format": "email"
            }
          },
          "required": [
            "id",
            "name",
            "email"
          ]
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": [],
        "data": {
          "id": 1,
          "name": "John Doe",
          "email": "john.doe@example.com"
        },
        "metadata": {
          "validated_at": "2023-10-01T12:00:00Z",
          "validation_passed": true
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "data_processing_parser"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:28:22.258678",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task integrates multiple API tools to fetch data from a specified source, validate it against a defined schema, and process the validated data for further use.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_535fe6fb",
      "task_type": "api_integration",
      "description": "Retrieve unknown data, validate it, and post the processed result to an unspecified destination.",
      "inputs": {
        "source": "https://api.example.com/data",
        "timeout": 30,
        "retry_count": 3,
        "options": {}
      },
      "expected_outputs": {
        "success": true,
        "metadata": {
          "status": "Data posted successfully",
          "timestamp": "2023-10-01T12:00:00Z"
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator",
        "network_poster"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "medium",
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-10T04:28:25.314359",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task fetches data from a specified API endpoint, validates the data against a defined schema to ensure its correctness, and processes the validated data for further use.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_4de15100",
      "task_type": "simple_task",
      "description": "Process unknown data by validating, transforming, and filtering it to produce an unspecified output.",
      "inputs": {
        "schema": {
          "type": "object",
          "properties": {
            "field1": {
              "type": "string"
            },
            "field2": {
              "type": "integer"
            }
          }
        },
        "data": [
          {
            "field1": "value1",
            "field2": 1
          },
          {
            "field1": "value2",
            "field2": 2
          }
        ]
      },
      "expected_outputs": {
        "success": true,
        "metadata": {},
        "transformed_data": [
          {
            "field1": "value1",
            "field2": "1"
          },
          {
            "field1": "value2",
            "field2": "2"
          }
        ]
      },
      "required_tools": [
        "data_processing_validator",
        "data_processing_transformer",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-10T04:27:37.923435",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task validates a dataset against a predefined schema, transforms the validated data into a different format, and then filters the transformed data based on specified criteria.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_9eec70bf",
      "task_type": "simple_task",
      "description": "Process unknown data through three steps: validate, transform format, and filter results.",
      "inputs": {
        "schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "age": {
              "type": "integer"
            }
          }
        },
        "data": [
          {
            "name": "Alice",
            "age": 30
          },
          {
            "name": "Bob",
            "age": "not_a_number"
          },
          {
            "name": "Charlie",
            "age": 25
          }
        ],
        "input_format": "JSON",
        "output_format": "XML",
        "options": {
          "criteria": {
            "age": 30
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": [],
        "transformed_data": "<data><person><name>Alice</name><age>30</age></person></data>",
        "metadata": {}
      },
      "required_tools": [
        "data_processing_validator",
        "data_processing_transformer",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-10T04:27:42.183984",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task validates a dataset against a defined schema, transforms the validated data into a different format, and then filters the transformed data based on specified criteria.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_5190fb32",
      "task_type": "simple_task",
      "description": "Process unknown data by validating, transforming formats, and filtering results through three tools.",
      "inputs": {
        "schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "age": {
              "type": "integer"
            },
            "email": {
              "type": "string"
            }
          }
        },
        "data": [
          {
            "name": "John Doe",
            "age": 30,
            "email": "john@example.com"
          },
          {
            "name": "Jane Smith",
            "age": "not a number",
            "email": "jane@example.com"
          }
        ]
      },
      "expected_outputs": {
        "success": true,
        "metadata": {},
        "filtered_data": [
          {
            "name": "John Doe",
            "age": 30,
            "email": "john@example.com"
          }
        ]
      },
      "required_tools": [
        "data_processing_validator",
        "data_processing_transformer",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-10T04:27:45.917351",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task validates a dataset against a predefined schema, transforms the validated data into a different format, and filters the transformed data based on specified criteria.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_57f6b587",
      "task_type": "simple_task",
      "description": "Process unknown data by validating, transforming formats, and filtering results through three tools.",
      "inputs": {
        "schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "age": {
              "type": "integer"
            }
          }
        },
        "data": [
          {
            "name": "John Doe",
            "age": 30
          },
          {
            "name": "Jane Smith",
            "age": 25
          },
          {
            "name": "Invalid User",
            "age": "not a number"
          }
        ]
      },
      "expected_outputs": {
        "success": true,
        "filtered_data": [
          {
            "name": "John Doe",
            "age": 30
          },
          {
            "name": "Jane Smith",
            "age": 25
          }
        ]
      },
      "required_tools": [
        "data_processing_validator",
        "data_processing_transformer",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-10T04:27:49.987950",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task validates a dataset against a predefined schema, transforms the validated data into a different format, and then filters the transformed data based on specific criteria.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_5a3ac81f",
      "task_type": "simple_task",
      "description": "Process unknown data by validating, transforming format, and filtering results through three tools.",
      "inputs": {
        "schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "age": {
              "type": "integer"
            }
          }
        },
        "data": [
          {
            "name": "Alice",
            "age": 30
          },
          {
            "name": "Bob",
            "age": "twenty-five"
          }
        ]
      },
      "expected_outputs": {
        "success": true,
        "filtered_data": "<filteredXMLData>"
      },
      "required_tools": [
        "data_processing_validator",
        "data_processing_transformer",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-10T04:27:53.217261",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task validates a dataset against a predefined schema, transforms the validated data from JSON to XML format, and then filters the XML data based on specified criteria.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_e647a91f",
      "task_type": "simple_task",
      "description": "Process unknown data by validating, transforming formats, and filtering results through three tools.",
      "inputs": {
        "schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "age": {
              "type": "integer"
            },
            "email": {
              "type": "string",
              "format": "email"
            }
          },
          "required": [
            "name",
            "age",
            "email"
          ]
        },
        "data": {
          "name": "John Doe",
          "age": 30,
          "email": "john.doe@example.com"
        },
        "input_format": "JSON",
        "output_format": "XML",
        "options": {
          "filter_criteria": {
            "age": {
              "gte": 18
            }
          }
        }
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": [],
        "transformed_data": "<person><name>John Doe</name><age>30</age><email>john.doe@example.com</email></person>",
        "metadata": {}
      },
      "required_tools": [
        "data_processing_validator",
        "data_processing_transformer",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-10T04:27:57.664240",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task validates JSON data against a predefined schema, transforms it into XML format, and then filters the transformed data based on specific criteria.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_57f9024e",
      "task_type": "simple_task",
      "description": "Process unknown data through three steps: validate, transform format, and parse for output.",
      "inputs": {
        "schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "age": {
              "type": "integer"
            },
            "email": {
              "type": "string"
            }
          }
        },
        "data": [
          {
            "name": "John Doe",
            "age": 30,
            "email": "john@example.com"
          },
          {
            "name": "Jane Smith",
            "age": 25,
            "email": "jane@example.com"
          }
        ],
        "source": "transformed_data.json"
      },
      "expected_outputs": {
        "success": true,
        "data": [
          {
            "name": "John Doe",
            "age": 30,
            "email": "john@example.com"
          },
          {
            "name": "Jane Smith",
            "age": 25,
            "email": "jane@example.com"
          }
        ],
        "metadata": {}
      },
      "required_tools": [
        "data_processing_validator",
        "data_processing_transformer",
        "data_processing_parser"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-10T04:28:04.499473",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task validates a dataset against a predefined schema, transforms the validated data into another format, and finally parses the transformed data for structured output.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:36"
    },
    {
      "instance_id": "task_1def8309",
      "task_type": "simple_task",
      "description": "Process unknown data through three steps: validate, transform format, and filter results.",
      "inputs": {
        "schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "age": {
              "type": "integer"
            },
            "email": {
              "type": "string"
            }
          }
        },
        "data": [
          {
            "name": "Alice",
            "age": 30,
            "email": "alice@example.com"
          },
          {
            "name": "Bob",
            "age": "twenty-five",
            "email": "bob@example.com"
          }
        ]
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": [],
        "transformed_data": [
          {
            "name": "Alice",
            "age": 30,
            "email": "alice@example.com"
          }
        ]
      },
      "required_tools": [
        "data_processing_validator",
        "data_processing_transformer",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-10T04:28:08.541128",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task validates a dataset against a predefined schema, transforms the validated data into a different format, and then filters the transformed data based on specified criteria.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_8929e4a7",
      "task_type": "simple_task",
      "description": "Process unknown data through three steps: validate, transform format, and filter results.",
      "inputs": {
        "schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "age": {
              "type": "integer"
            },
            "email": {
              "type": "string",
              "format": "email"
            }
          }
        },
        "data": [
          {
            "name": "John Doe",
            "age": 30,
            "email": "john@example.com"
          },
          {
            "name": "Jane Doe",
            "age": "not_a_number",
            "email": "jane@example.com"
          }
        ],
        "options": {}
      },
      "expected_outputs": {
        "success": true,
        "valid": true,
        "errors": [],
        "transformed_data": [
          {
            "name": "John Doe",
            "age": 30,
            "email": "john@example.com"
          }
        ],
        "filtered_data": [
          {
            "name": "John Doe",
            "age": 30,
            "email": "john@example.com"
          }
        ]
      },
      "required_tools": [
        "data_processing_validator",
        "data_processing_transformer",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-10T04:28:21.505794",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task involves validating a dataset against a predefined schema, transforming the valid data to a different format, and then filtering the transformed data based on specific criteria.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    },
    {
      "instance_id": "task_375cdeec",
      "task_type": "simple_task",
      "description": "Process unknown data through three steps: validate, transform format, and filter results.",
      "inputs": {
        "schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "age": {
              "type": "integer"
            },
            "email": {
              "type": "string"
            }
          },
          "required": [
            "name",
            "age",
            "email"
          ]
        },
        "data": [
          {
            "name": "John Doe",
            "age": 30,
            "email": "john@example.com"
          },
          {
            "name": "Jane Doe",
            "age": "twenty-five",
            "email": "jane@example.com"
          }
        ],
        "options": {}
      },
      "expected_outputs": {
        "success": true,
        "valid": false,
        "errors": [
          "Age must be an integer."
        ],
        "metadata": {}
      },
      "required_tools": [
        "data_processing_validator",
        "data_processing_transformer",
        "data_processing_filter"
      ],
      "constraints": {
        "timeout": 300,
        "max_retries": 3
      },
      "complexity": "easy",
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-10T04:28:26.117152",
        "timeout": 300,
        "semantic_generation": true,
        "llm_generated": true,
        "inputs_generated_from": "llm"
      },
      "original_description": "This task processes raw CSV data by validating its schema, transforming it to JSON format, and finally filtering it based on specified criteria.",
      "difficulty_level": "very_easy",
      "enhanced": true,
      "enhancement_timestamp": "2025-07-10 04:34:37"
    }
  ],
  "metadata": {
    "generated_at": "2025-07-10T04:28:26.124758",
    "num_tasks": 630,
    "parallel_generation": true,
    "tool_registry_path": "mcp_generated_library/tool_registry_consolidated.json",
    "llm_enhanced": true,
    "task_distribution": {
      "basic_task": 0.2,
      "simple_task": 0.2,
      "data_pipeline": 0.2,
      "api_integration": 0.2,
      "multi_stage_pipeline": 0.2
    },
    "generation_time": 55.96250319480896,
    "difficulty_update": {
      "timestamp": "2025-07-10 04:34:40",
      "distribution": {
        "very_easy": 1.0,
        "easy": 0.0,
        "medium": 0.0,
        "hard": 0.0,
        "very_hard": 0.0
      },
      "stats": {
        "total": 630,
        "enhanced": 630,
        "failed": 0,
        "api_errors": 0,
        "validation_failed": 0,
        "retries": 0,
        "fallbacks": 0,
        "max_retries_reached": 0,
        "total_attempts": 0,
        "successful": 630,
        "validation_failures": 0,
        "tool_consolidations": 0,
        "new_templates_used": 0,
        "difficulty_distribution": {
          "very_easy": 630,
          "easy": 0,
          "medium": 0,
          "hard": 0,
          "very_hard": 0
        }
      }
    }
  }
}