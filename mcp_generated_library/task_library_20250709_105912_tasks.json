{
  "tasks": [
    {
      "id": "task_9e05311e",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with Focus on monitoring network status, general specific helper capability, involving helper - Instance task_9e05311e",
      "test_input": {
        "data": {
          "values": [
            60,
            33,
            78,
            93,
            28
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "utility_helper",
        "network_monitor"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T10:59:13.652116",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_bf32d27f",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring data_processing_filter with involving filter data, Can handle large datasets efficiently by reducing the amount of data processed., Applies transformations to data based on filtering options. - Instance task_bf32d27f",
      "test_input": {
        "input_data": {
          "data": [
            0.7667136322757385,
            0.32957103876980454,
            0.9584628110764966,
            0.4068343504380112,
            0.3697617977813553
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "data_processing_filter"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T10:59:13.651624",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_740c9cb8",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_740c9cb8",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.40795465360300787
            },
            {
              "id": 1,
              "value": 0.28481942964442597
            },
            {
              "id": 2,
              "value": 0.3904999649877414
            },
            {
              "id": 3,
              "value": 0.6492989768397412
            },
            {
              "id": 4,
              "value": 0.9161659447158594
            },
            {
              "id": 5,
              "value": 0.3463007836503639
            },
            {
              "id": 6,
              "value": 0.4134394976607165
            },
            {
              "id": 7,
              "value": 0.523261122242494
            },
            {
              "id": 8,
              "value": 0.10441560637765623
            },
            {
              "id": 9,
              "value": 0.05909055561138188
            }
          ]
        },
        "output_format": "csv",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "computation_analyzer",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T10:59:16.204491",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_8c89bbe6",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with general specific cache capability, involving cache, general specific aggregator capability - Instance task_8c89bbe6",
      "test_input": {
        "data": {
          "values": [
            63,
            86,
            50,
            77,
            3
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "utility_cache",
        "data_processing_aggregator"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T10:59:13.652166",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_19819afe",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_19819afe",
      "test_input": {
        "input_data": {
          "data": [
            0.18645054373405812,
            0.6210207071270244,
            0.8388902499092323,
            0.5730707619614871,
            0.7304221409028517
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "computation_calculator",
        "data_processing_validator",
        "computation_analyzer"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T10:59:16.579470",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_0c318078",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_0c318078",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.7345265386402839
            },
            {
              "id": 1,
              "value": 0.2519416717488192
            },
            {
              "id": 2,
              "value": 0.7161584165064668
            },
            {
              "id": 3,
              "value": 0.8754655166727774
            },
            {
              "id": 4,
              "value": 0.96627568011629
            },
            {
              "id": 5,
              "value": 0.3862776437333785
            },
            {
              "id": 6,
              "value": 0.1190536105774318
            },
            {
              "id": 7,
              "value": 0.2958255439223646
            },
            {
              "id": 8,
              "value": 0.7957281442360115
            },
            {
              "id": 9,
              "value": 0.5390363627332805
            }
          ]
        },
        "output_format": "csv",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "computation_analyzer",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T10:59:16.205075",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_0ed10d35",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with general specific cache capability, involving cache, general specific aggregator capability - Instance task_0ed10d35",
      "test_input": {
        "data": {
          "values": [
            16,
            47,
            88,
            46,
            74
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "utility_cache",
        "data_processing_aggregator"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T10:59:13.652325",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_15a12766",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_15a12766",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.07025506186845032
            },
            {
              "id": 1,
              "value": 0.6276454584847968
            },
            {
              "id": 2,
              "value": 0.8012833389542662
            },
            {
              "id": 3,
              "value": 0.40511412599945884
            },
            {
              "id": 4,
              "value": 0.042905731311655315
            },
            {
              "id": 5,
              "value": 0.20319436942101887
            },
            {
              "id": 6,
              "value": 0.9963067018059476
            },
            {
              "id": 7,
              "value": 0.5543939746496006
            },
            {
              "id": 8,
              "value": 0.7185198315384361
            },
            {
              "id": 9,
              "value": 0.8304402340407946
            }
          ]
        },
        "output_format": "xml",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T10:59:16.199584",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_12d9c223",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_12d9c223",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T10:59:16.207277",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_739dc701",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_739dc701",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.25048716286907124
            },
            {
              "id": 1,
              "value": 0.05322084977834862
            },
            {
              "id": 2,
              "value": 0.1053361282658487
            },
            {
              "id": 3,
              "value": 0.9953081400377486
            },
            {
              "id": 4,
              "value": 0.26807429402338834
            },
            {
              "id": 5,
              "value": 0.3357717743561742
            },
            {
              "id": 6,
              "value": 0.02719546041779486
            },
            {
              "id": 7,
              "value": 0.6688222025812351
            },
            {
              "id": 8,
              "value": 0.07584172960001234
            },
            {
              "id": 9,
              "value": 0.5183912396834375
            }
          ]
        },
        "output_format": "csv",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "computation_analyzer",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T10:59:16.199897",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_340834c1",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_340834c1",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T10:59:16.206590",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_a2c8ec3a",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_a2c8ec3a",
      "test_input": {
        "input_data": {
          "data": [
            0.07652030107819352,
            0.46704695462287393,
            0.561546764202418,
            0.625443061342078,
            0.18362287835118252
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T10:59:16.573954",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_c888aed2",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring file_operations_compressor with involving compressor, general specific compressor capability - Instance task_c888aed2",
      "test_input": {
        "input_data": {
          "data": [
            0.6220645506794353,
            0.4192517435544856,
            0.40930183184722135,
            0.956367309479889,
            0.3385313431317125
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "file_operations_compressor"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T10:59:13.651681",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_31b5470d",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_31b5470d",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T10:59:16.206681",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_f26b7a6a",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_f26b7a6a",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T10:59:16.206747",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_ff0144b4",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_ff0144b4",
      "test_input": {
        "input_data": {
          "data": [
            0.7257829586062108,
            0.7747421408979643,
            0.19741621459009295,
            0.019201953610113565,
            0.23826957063199738
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T10:59:16.581875",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_a7ba0975",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_a7ba0975",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T10:59:16.206574",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_3b59eabb",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with involving connector, general specific connector capability, Applies transformations to data based on filtering options. - Instance task_3b59eabb",
      "test_input": {
        "data": {
          "values": [
            28,
            50,
            85,
            41,
            95
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "integration_connector",
        "data_processing_filter"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T10:59:13.651979",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_ea6e5efe",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_ea6e5efe",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.5847995141755002
            },
            {
              "id": 1,
              "value": 0.9568657909505633
            },
            {
              "id": 2,
              "value": 0.15339905611615168
            },
            {
              "id": 3,
              "value": 0.44096577836256134
            },
            {
              "id": 4,
              "value": 0.18920039035784064
            },
            {
              "id": 5,
              "value": 0.5347864999240556
            },
            {
              "id": 6,
              "value": 0.9955569204742096
            },
            {
              "id": 7,
              "value": 0.005763933465618654
            },
            {
              "id": 8,
              "value": 0.23540745777197702
            },
            {
              "id": 9,
              "value": 0.012117286501479363
            }
          ]
        },
        "output_format": "json",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T10:59:16.201170",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_bde1b5d2",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring data_processing_filter with involving filter data, Can handle large datasets efficiently by reducing the amount of data processed., Applies transformations to data based on filtering options. - Instance task_bde1b5d2",
      "test_input": {
        "input_data": {
          "data": [
            0.5308447306419567,
            0.6884310573477486,
            0.5111353568866109,
            0.9460979319233599,
            0.7425025500483007
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "data_processing_filter"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T10:59:13.651903",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_8de6f0ad",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring data_processing_transformer, integration_mapper, utility_logger with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_8de6f0ad",
      "test_input": {
        "input_data": {
          "data": [
            0.5720310173073191,
            0.8433572030095022,
            0.17087945008431393,
            0.852116813754017,
            0.07209617782148259
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "integration_mapper",
        "utility_logger"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T10:59:13.651377",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_686ecf2e",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_686ecf2e",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T10:59:16.207143",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_3edfa6f4",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_3edfa6f4",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.40439960263872954
            },
            {
              "id": 1,
              "value": 0.5439316059792969
            },
            {
              "id": 2,
              "value": 0.35792995259979987
            },
            {
              "id": 3,
              "value": 0.7232439451069398
            },
            {
              "id": 4,
              "value": 0.5040233148472852
            },
            {
              "id": 5,
              "value": 0.6649762666901479
            },
            {
              "id": 6,
              "value": 0.8403561802768954
            },
            {
              "id": 7,
              "value": 0.18199022880809768
            },
            {
              "id": 8,
              "value": 0.6057453522544194
            },
            {
              "id": 9,
              "value": 0.15838828705693986
            }
          ]
        },
        "output_format": "xml",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "computation_analyzer",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T10:59:16.197390",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_eb65d9c0",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_eb65d9c0",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T10:59:16.206651",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_3a7ffb6b",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring data_processing_transformer, integration_mapper, utility_logger with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_3a7ffb6b",
      "test_input": {
        "input_data": {
          "data": [
            0.06960894200632672,
            0.3593672051997031,
            0.9318724133224349,
            0.2615771071674611,
            0.5897863867255648
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "integration_mapper",
        "utility_logger"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T10:59:13.651794",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_f81d75a6",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring file_operations_compressor with involving compressor, general specific compressor capability - Instance task_f81d75a6",
      "test_input": {
        "input_data": {
          "data": [
            0.8014576809184443,
            0.5632737739013617,
            0.5801048524456327,
            0.9031159020129944,
            0.14758450213224517
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "file_operations_compressor"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T10:59:13.651389",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_c5d1a5b8",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_c5d1a5b8",
      "test_input": {
        "input_data": {
          "data": [
            0.9916098119600114,
            0.24541268647235825,
            0.8942203687026972,
            0.8697253682540478,
            0.12817490587110036
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "computation_calculator",
        "data_processing_validator",
        "computation_analyzer"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T10:59:16.581990",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_7da2b7a6",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_7da2b7a6",
      "test_input": {
        "input_data": {
          "data": [
            0.4306593557074784,
            0.7990832528562363,
            0.4671111711901309,
            0.6459613658250675,
            0.7676860668066366
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T10:59:16.572373",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_ed36f424",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_ed36f424",
      "test_input": {
        "input_data": {
          "data": [
            0.7193848720397888,
            0.17576031841992212,
            0.820847504555466,
            0.3933628963820669,
            0.16502827517802543
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "computation_calculator",
        "data_processing_validator",
        "computation_analyzer",
        "network_poster"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T10:59:16.573062",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_96c6d72f",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_96c6d72f",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.7983313492039059
            },
            {
              "id": 1,
              "value": 0.6819933828844003
            },
            {
              "id": 2,
              "value": 0.30735571866936107
            },
            {
              "id": 3,
              "value": 0.7559728868866047
            },
            {
              "id": 4,
              "value": 0.7357129533547337
            },
            {
              "id": 5,
              "value": 0.776553573102911
            },
            {
              "id": 6,
              "value": 0.7721230683151272
            },
            {
              "id": 7,
              "value": 0.5238700369647907
            },
            {
              "id": 8,
              "value": 0.1196182475270986
            },
            {
              "id": 9,
              "value": 0.2159153148441385
            }
          ]
        },
        "output_format": "xml",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "computation_analyzer",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T10:59:16.205992",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_eb4a3b10",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_eb4a3b10",
      "test_input": {
        "input_data": {
          "data": [
            0.6248345960729546,
            0.906870515694755,
            0.3488241325078948,
            0.971976351749589,
            0.9445991279923016
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T10:59:16.575546",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_15bbce00",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with involving connector, general specific connector capability, Applies transformations to data based on filtering options. - Instance task_15bbce00",
      "test_input": {
        "data": {
          "values": [
            40,
            80,
            57,
            85,
            44
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "integration_connector",
        "data_processing_filter"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T10:59:13.652145",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_894978ca",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with Focus on monitoring network status, general specific helper capability, involving helper - Instance task_894978ca",
      "test_input": {
        "data": {
          "values": [
            8,
            41,
            64,
            95,
            55
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "utility_helper",
        "network_monitor"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T10:59:13.652297",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_7c9981ea",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_7c9981ea",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T10:59:16.206846",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_f1942851",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_f1942851",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.4750847782049551
            },
            {
              "id": 1,
              "value": 0.31781676910262713
            },
            {
              "id": 2,
              "value": 0.6760179654452517
            },
            {
              "id": 3,
              "value": 0.7821029094411582
            },
            {
              "id": 4,
              "value": 0.33949300019062645
            },
            {
              "id": 5,
              "value": 0.1859122567257364
            },
            {
              "id": 6,
              "value": 0.5312057175613352
            },
            {
              "id": 7,
              "value": 0.5840014549757988
            },
            {
              "id": 8,
              "value": 0.15388433839270854
            },
            {
              "id": 9,
              "value": 0.1370417480165924
            }
          ]
        },
        "output_format": "xml",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T10:59:16.204976",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_98bc248f",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_98bc248f",
      "test_input": {
        "input_data": {
          "data": [
            0.8767641235284751,
            0.21660770749544944,
            0.18598999086335255,
            0.21063428483791524,
            0.2346156046286484
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T10:59:16.580263",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_98e9c9ab",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_98e9c9ab",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.37642147803718695
            },
            {
              "id": 1,
              "value": 0.06884044921178956
            },
            {
              "id": 2,
              "value": 0.2122427318873631
            },
            {
              "id": 3,
              "value": 0.3421556832423862
            },
            {
              "id": 4,
              "value": 0.5422272794910877
            },
            {
              "id": 5,
              "value": 0.7178185570846254
            },
            {
              "id": 6,
              "value": 0.008716084321331419
            },
            {
              "id": 7,
              "value": 0.6884528281327357
            },
            {
              "id": 8,
              "value": 0.7036272743728917
            },
            {
              "id": 9,
              "value": 0.596927635153873
            }
          ]
        },
        "output_format": "json",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "computation_analyzer",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T10:59:16.199508",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_09af77dd",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_09af77dd",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T10:59:16.206441",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_dd549d25",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring data_processing_filter with involving filter data, Can handle large datasets efficiently by reducing the amount of data processed., Applies transformations to data based on filtering options. - Instance task_dd549d25",
      "test_input": {
        "input_data": {
          "data": [
            0.584611488595352,
            0.16940521143228582,
            0.031943715338022094,
            0.8812553877842749,
            0.7012791111418069
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "data_processing_filter"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T10:59:13.651467",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_fefc14da",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring data_processing_transformer, integration_mapper, utility_logger with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_fefc14da",
      "test_input": {
        "input_data": {
          "data": [
            0.008035384998573813,
            0.8576877660575553,
            0.5030367799004951,
            0.8056221795297525,
            0.5389190705278167
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "integration_mapper",
        "utility_logger"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T10:59:13.651860",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_df5df2fa",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with general specific cache capability, involving cache, general specific aggregator capability - Instance task_df5df2fa",
      "test_input": {
        "data": {
          "values": [
            76,
            52,
            1,
            53,
            79
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "utility_cache",
        "data_processing_aggregator"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T10:59:13.652304",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_2927b7b3",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_2927b7b3",
      "test_input": {
        "input_data": {
          "data": [
            0.3574338789422533,
            0.3751670669189997,
            0.8310177154621124,
            0.2834229502932242,
            0.15821513844452928
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T10:59:16.583506",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_a2622db0",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_a2622db0",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T10:59:16.207091",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_432ab450",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_432ab450",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.5052675851906542
            },
            {
              "id": 1,
              "value": 0.9235998205379701
            },
            {
              "id": 2,
              "value": 0.4471462540141671
            },
            {
              "id": 3,
              "value": 0.3155346244067715
            },
            {
              "id": 4,
              "value": 0.06657702427151702
            },
            {
              "id": 5,
              "value": 0.6430354964690864
            },
            {
              "id": 6,
              "value": 0.07815074085187423
            },
            {
              "id": 7,
              "value": 0.3697530483120798
            },
            {
              "id": 8,
              "value": 0.8470831969468924
            },
            {
              "id": 9,
              "value": 0.622507638454988
            }
          ]
        },
        "output_format": "csv",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T10:59:16.201994",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_dcc2e0bb",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_dcc2e0bb",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.413931611766853
            },
            {
              "id": 1,
              "value": 0.43197993433001525
            },
            {
              "id": 2,
              "value": 0.16079581257319342
            },
            {
              "id": 3,
              "value": 0.4277686352716704
            },
            {
              "id": 4,
              "value": 0.27883728251093765
            },
            {
              "id": 5,
              "value": 0.96452878846354
            },
            {
              "id": 6,
              "value": 0.23996934939703818
            },
            {
              "id": 7,
              "value": 0.5996830008563424
            },
            {
              "id": 8,
              "value": 0.8794208451027968
            },
            {
              "id": 9,
              "value": 0.9841633019638353
            }
          ]
        },
        "output_format": "xml",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T10:59:16.202631",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_f088edc2",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_f088edc2",
      "test_input": {
        "input_data": {
          "data": [
            0.5997332774880135,
            0.7937013283746757,
            0.8332760043775196,
            0.5672788705165107,
            0.05507653958490455
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "computation_calculator",
        "data_processing_validator",
        "computation_analyzer",
        "network_poster"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T10:59:16.576529",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_7ef41c46",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_7ef41c46",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.5346457778832912
            },
            {
              "id": 1,
              "value": 0.6579118686150034
            },
            {
              "id": 2,
              "value": 0.18251864550234698
            },
            {
              "id": 3,
              "value": 0.9776397771820096
            },
            {
              "id": 4,
              "value": 0.5043220327110122
            },
            {
              "id": 5,
              "value": 0.42000306304321955
            },
            {
              "id": 6,
              "value": 0.9834373214784912
            },
            {
              "id": 7,
              "value": 0.6086282734889441
            },
            {
              "id": 8,
              "value": 0.06256757470417496
            },
            {
              "id": 9,
              "value": 0.3148481006221385
            }
          ]
        },
        "output_format": "json",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T10:59:16.202191",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_845e90d6",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_845e90d6",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.06069520219605773
            },
            {
              "id": 1,
              "value": 0.48140801196908467
            },
            {
              "id": 2,
              "value": 0.014282210911649273
            },
            {
              "id": 3,
              "value": 0.22107869345536602
            },
            {
              "id": 4,
              "value": 0.6235608785348574
            },
            {
              "id": 5,
              "value": 0.7477233438698481
            },
            {
              "id": 6,
              "value": 0.1295861466451913
            },
            {
              "id": 7,
              "value": 0.6755698482826319
            },
            {
              "id": 8,
              "value": 0.026320567268110162
            },
            {
              "id": 9,
              "value": 0.6246395516397959
            }
          ]
        },
        "output_format": "xml",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "computation_analyzer",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T10:59:16.197502",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_eb23ab45",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with involving connector, general specific connector capability, Applies transformations to data based on filtering options. - Instance task_eb23ab45",
      "test_input": {
        "data": {
          "values": [
            90,
            7,
            97,
            51,
            12
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "integration_connector",
        "data_processing_filter"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T10:59:13.652353",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_2c574492",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_2c574492",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.7662297844040089
            },
            {
              "id": 1,
              "value": 0.5601744253734626
            },
            {
              "id": 2,
              "value": 0.35249605938379747
            },
            {
              "id": 3,
              "value": 0.2981284066799542
            },
            {
              "id": 4,
              "value": 0.6080364533884287
            },
            {
              "id": 5,
              "value": 0.3592597262973458
            },
            {
              "id": 6,
              "value": 0.8036669821450925
            },
            {
              "id": 7,
              "value": 0.708620591075664
            },
            {
              "id": 8,
              "value": 0.3572037830128254
            },
            {
              "id": 9,
              "value": 0.3609759423565362
            }
          ]
        },
        "output_format": "csv",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T10:59:16.201011",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_0a0dbe26",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_0a0dbe26",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.466840651248408
            },
            {
              "id": 1,
              "value": 0.5740457505306125
            },
            {
              "id": 2,
              "value": 0.46001894317645553
            },
            {
              "id": 3,
              "value": 0.8662446674675794
            },
            {
              "id": 4,
              "value": 0.42421095982368917
            },
            {
              "id": 5,
              "value": 0.4767504355257355
            },
            {
              "id": 6,
              "value": 0.6980354614516163
            },
            {
              "id": 7,
              "value": 0.3380886216938017
            },
            {
              "id": 8,
              "value": 0.9464412102433416
            },
            {
              "id": 9,
              "value": 0.2300344332570331
            }
          ]
        },
        "output_format": "json",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "computation_analyzer",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T10:59:16.199765",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_81c00ac4",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_81c00ac4",
      "test_input": {
        "input_data": {
          "data": [
            0.7591276738411307,
            0.36014235743112566,
            0.9305402870471718,
            0.6532077657918152,
            0.003740728471357868
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "computation_calculator",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T10:59:16.398714",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_538b3b99",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_538b3b99",
      "test_input": {
        "input_data": {
          "data": [
            0.04477928150166388,
            0.10996525051797346,
            0.8915018485149331,
            0.23893753893981262,
            0.6683384715602722
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "computation_calculator",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T10:59:16.576808",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_f2b4f286",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_f2b4f286",
      "test_input": {
        "input_data": {
          "data": [
            0.03221756271247411,
            0.6312236743177067,
            0.18517544645053263,
            0.47207457054702195,
            0.06473141579930908
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "computation_calculator",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T10:59:16.572822",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_749c12a3",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with involving connector, general specific connector capability, Applies transformations to data based on filtering options. - Instance task_749c12a3",
      "test_input": {
        "data": {
          "values": [
            82,
            97,
            27,
            65,
            71
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "integration_connector",
        "data_processing_filter"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T10:59:13.652130",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_df27fe3a",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_df27fe3a",
      "test_input": {
        "input_data": {
          "data": [
            0.7612554915498855,
            0.7587772584181268,
            0.31507583851827214,
            0.1307886614808933,
            0.777995797546594
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T10:59:16.577942",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_d088e88d",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_d088e88d",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.23625126347244718
            },
            {
              "id": 1,
              "value": 0.0028361641711538432
            },
            {
              "id": 2,
              "value": 0.4770218158037627
            },
            {
              "id": 3,
              "value": 0.8957286280664325
            },
            {
              "id": 4,
              "value": 0.2349018179176494
            },
            {
              "id": 5,
              "value": 0.9057533228751053
            },
            {
              "id": 6,
              "value": 0.7997420111425325
            },
            {
              "id": 7,
              "value": 0.46899988995518127
            },
            {
              "id": 8,
              "value": 0.2840474188637151
            },
            {
              "id": 9,
              "value": 0.5316073455113501
            }
          ]
        },
        "output_format": "json",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T10:59:16.196654",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_2b4874c4",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_2b4874c4",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T10:59:16.207260",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_f608a844",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_f608a844",
      "test_input": {
        "input_data": {
          "data": [
            0.484118779450038,
            0.17453066888201696,
            0.6068770696594679,
            0.6549939109572384,
            0.46586416616540316
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T10:59:16.581540",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_39489e34",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_39489e34",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.05742642977070456
            },
            {
              "id": 1,
              "value": 0.2873789439279305
            },
            {
              "id": 2,
              "value": 0.8077978693598116
            },
            {
              "id": 3,
              "value": 0.488709317504731
            },
            {
              "id": 4,
              "value": 0.759651321826269
            },
            {
              "id": 5,
              "value": 0.7136644012328346
            },
            {
              "id": 6,
              "value": 0.2920452800837917
            },
            {
              "id": 7,
              "value": 0.7452978351950178
            },
            {
              "id": 8,
              "value": 0.10111274444629159
            },
            {
              "id": 9,
              "value": 0.29133814536550995
            }
          ]
        },
        "output_format": "json",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "computation_analyzer",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T10:59:16.200095",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_ce9dd37a",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_ce9dd37a",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.05447544467217513
            },
            {
              "id": 1,
              "value": 0.2751454023220866
            },
            {
              "id": 2,
              "value": 0.35813894798244716
            },
            {
              "id": 3,
              "value": 0.9858766583751015
            },
            {
              "id": 4,
              "value": 0.03225653531779171
            },
            {
              "id": 5,
              "value": 0.07401444214567854
            },
            {
              "id": 6,
              "value": 0.5643598209081834
            },
            {
              "id": 7,
              "value": 0.9568784546280056
            },
            {
              "id": 8,
              "value": 0.21144657735200656
            },
            {
              "id": 9,
              "value": 0.7479579839764083
            }
          ]
        },
        "output_format": "xml",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T10:59:16.206276",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_7977e588",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_7977e588",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.4291171468053021
            },
            {
              "id": 1,
              "value": 0.9064933695155858
            },
            {
              "id": 2,
              "value": 0.5653332000678954
            },
            {
              "id": 3,
              "value": 0.0010136480562947803
            },
            {
              "id": 4,
              "value": 0.4543404722208835
            },
            {
              "id": 5,
              "value": 0.9653993139834322
            },
            {
              "id": 6,
              "value": 0.667388009951516
            },
            {
              "id": 7,
              "value": 0.3171220396113843
            },
            {
              "id": 8,
              "value": 0.01832399845021504
            },
            {
              "id": 9,
              "value": 0.6759741780899486
            }
          ]
        },
        "output_format": "csv",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T10:59:16.202492",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_66b9a14c",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring data_processing_filter with involving filter data, Can handle large datasets efficiently by reducing the amount of data processed., Applies transformations to data based on filtering options. - Instance task_66b9a14c",
      "test_input": {
        "input_data": {
          "data": [
            0.5076841808843924,
            0.9721965691570297,
            0.3423091111892138,
            0.22978234783729756,
            0.17879865959768448
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "data_processing_filter"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T10:59:13.651545",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_2b17cf22",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring file_operations_compressor with involving compressor, general specific compressor capability - Instance task_2b17cf22",
      "test_input": {
        "input_data": {
          "data": [
            0.1667880235968322,
            0.5636098242496091,
            0.15156629236478392,
            0.7249320248777421,
            0.6631187199383899
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "file_operations_compressor"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T10:59:13.651371",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_932e3890",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_932e3890",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.8375465505938899
            },
            {
              "id": 1,
              "value": 0.4702552896604173
            },
            {
              "id": 2,
              "value": 0.39017736150198057
            },
            {
              "id": 3,
              "value": 0.559729100590859
            },
            {
              "id": 4,
              "value": 0.21416770103096172
            },
            {
              "id": 5,
              "value": 0.9301002930697453
            },
            {
              "id": 6,
              "value": 0.8349045737563122
            },
            {
              "id": 7,
              "value": 0.6392513740622159
            },
            {
              "id": 8,
              "value": 0.4374808521839241
            },
            {
              "id": 9,
              "value": 0.028791599004819868
            }
          ]
        },
        "output_format": "json",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "computation_analyzer",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T10:59:16.201520",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_edd621a2",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_edd621a2",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T10:59:16.207424",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_14b11f87",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_14b11f87",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T10:59:16.206824",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_1690653b",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring data_processing_transformer, integration_mapper, utility_logger with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_1690653b",
      "test_input": {
        "input_data": {
          "data": [
            0.03185841725764016,
            0.6654152504871615,
            0.4698227227845345,
            0.5327773715612943,
            0.1736882225219517
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "integration_mapper",
        "utility_logger"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T10:59:13.651646",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_e17c2515",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_e17c2515",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.8592619965699709
            },
            {
              "id": 1,
              "value": 0.19805741465013893
            },
            {
              "id": 2,
              "value": 0.21261194527174843
            },
            {
              "id": 3,
              "value": 0.06874748072381476
            },
            {
              "id": 4,
              "value": 0.23934104635143494
            },
            {
              "id": 5,
              "value": 0.39739132806736455
            },
            {
              "id": 6,
              "value": 0.41436868444707653
            },
            {
              "id": 7,
              "value": 0.3151007980322035
            },
            {
              "id": 8,
              "value": 0.8923441831003643
            },
            {
              "id": 9,
              "value": 0.6640718403338673
            }
          ]
        },
        "output_format": "json",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T10:59:16.206362",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_499b4f01",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_499b4f01",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T10:59:16.206798",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_b26508ae",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring file_operations_compressor with involving compressor, general specific compressor capability - Instance task_b26508ae",
      "test_input": {
        "input_data": {
          "data": [
            0.842977506687589,
            0.9003113221466987,
            0.8879368292538122,
            0.9033708358912326,
            0.224481233812992
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "file_operations_compressor"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T10:59:13.651822",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_a1284434",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_a1284434",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.24182017779360587
            },
            {
              "id": 1,
              "value": 0.8386153911316264
            },
            {
              "id": 2,
              "value": 0.3186247489079417
            },
            {
              "id": 3,
              "value": 0.9656347513541688
            },
            {
              "id": 4,
              "value": 0.9412941767826748
            },
            {
              "id": 5,
              "value": 0.449668670791586
            },
            {
              "id": 6,
              "value": 0.9275295646016861
            },
            {
              "id": 7,
              "value": 0.4162515511567375
            },
            {
              "id": 8,
              "value": 0.058013421594693804
            },
            {
              "id": 9,
              "value": 0.6679098010467438
            }
          ]
        },
        "output_format": "xml",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T10:59:16.195783",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_de1b788d",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_de1b788d",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T10:59:16.207310",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_887d923b",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with Focus on monitoring network status, general specific helper capability, involving helper - Instance task_887d923b",
      "test_input": {
        "data": {
          "values": [
            71,
            29,
            39,
            30,
            72
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "utility_helper",
        "network_monitor"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T10:59:13.652276",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_c1ecfce8",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_c1ecfce8",
      "test_input": {
        "input_data": {
          "data": [
            0.761331755724552,
            0.23385890789433295,
            0.44299237310492934,
            0.645919321797581,
            0.8442015018843796
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "computation_calculator",
        "data_processing_validator",
        "computation_analyzer"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T10:59:16.575676",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_b5db67c2",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with Focus on monitoring network status, general specific helper capability, involving helper - Instance task_b5db67c2",
      "test_input": {
        "data": {
          "values": [
            75,
            97,
            78,
            79,
            3
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "utility_helper",
        "network_monitor"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T10:59:13.652248",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_44562376",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with general specific cache capability, involving cache, general specific aggregator capability - Instance task_44562376",
      "test_input": {
        "data": {
          "values": [
            73,
            95,
            90,
            15,
            94
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "utility_cache",
        "data_processing_aggregator"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T10:59:13.652002",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_97da7113",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_97da7113",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.132038898362835
            },
            {
              "id": 1,
              "value": 0.7785970171949159
            },
            {
              "id": 2,
              "value": 0.9806117302195184
            },
            {
              "id": 3,
              "value": 0.2318403519886688
            },
            {
              "id": 4,
              "value": 0.02983828828783397
            },
            {
              "id": 5,
              "value": 0.37272977299331156
            },
            {
              "id": 6,
              "value": 0.838085257269774
            },
            {
              "id": 7,
              "value": 0.4072988428196781
            },
            {
              "id": 8,
              "value": 0.07395349806202012
            },
            {
              "id": 9,
              "value": 0.3946306700524803
            }
          ]
        },
        "output_format": "xml",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "computation_analyzer",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T10:59:16.198411",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_8bf62fcc",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_8bf62fcc",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T10:59:16.207522",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_80fac178",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring data_processing_transformer, integration_mapper, utility_logger with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_80fac178",
      "test_input": {
        "input_data": {
          "data": [
            0.374242944491743,
            0.4250949512047618,
            0.1968251066206428,
            0.4993481935123022,
            0.6883165151544562
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "integration_mapper",
        "utility_logger"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T10:59:13.651404",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_89e94bf4",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring data_processing_transformer, integration_mapper, utility_logger with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_89e94bf4",
      "test_input": {
        "input_data": {
          "data": [
            0.5797754637694029,
            0.291992319932011,
            0.9518786044006416,
            0.9008484819244088,
            0.8098202371837026
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "integration_mapper",
        "utility_logger"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T10:59:13.651322",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_a1f0a9eb",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_a1f0a9eb",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T10:59:16.206939",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_b5c05706",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_b5c05706",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.732589437676138
            },
            {
              "id": 1,
              "value": 0.4755465021017199
            },
            {
              "id": 2,
              "value": 0.9782362430731807
            },
            {
              "id": 3,
              "value": 0.1363108640096501
            },
            {
              "id": 4,
              "value": 0.3627511586855585
            },
            {
              "id": 5,
              "value": 0.16183775645373144
            },
            {
              "id": 6,
              "value": 0.6388746074384829
            },
            {
              "id": 7,
              "value": 0.6531665920815756
            },
            {
              "id": 8,
              "value": 0.7437551248953507
            },
            {
              "id": 9,
              "value": 0.6681484403486756
            }
          ]
        },
        "output_format": "csv",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T10:59:16.204908",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_88552018",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring data_processing_filter with involving filter data, Can handle large datasets efficiently by reducing the amount of data processed., Applies transformations to data based on filtering options. - Instance task_88552018",
      "test_input": {
        "input_data": {
          "data": [
            0.19637360044969876,
            0.1963178397152503,
            0.5822017588823272,
            0.7052336827558283,
            0.41949925406220634
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "data_processing_filter"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T10:59:13.651800",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_0999e2e5",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring data_processing_transformer, integration_mapper, utility_logger with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_0999e2e5",
      "test_input": {
        "input_data": {
          "data": [
            0.6793197862391441,
            0.3538450850401441,
            0.8952208360501881,
            0.2659712615409964,
            0.9291519397196666
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "integration_mapper",
        "utility_logger"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T10:59:13.651462",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_28319798",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring data_processing_transformer, integration_mapper, utility_logger with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_28319798",
      "test_input": {
        "input_data": {
          "data": [
            0.32544205855391595,
            0.3078584375269149,
            0.45736907558433015,
            0.5614269501147993,
            0.4490533973262304
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "integration_mapper",
        "utility_logger"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T10:59:13.651557",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_dd1542a9",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_dd1542a9",
      "test_input": {
        "input_data": {
          "data": [
            0.8427877738194001,
            0.6578563691321938,
            0.41492639992641855,
            0.69946002803409,
            0.6782582711192505
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T10:59:16.575453",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_dfe55ecf",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_dfe55ecf",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T10:59:16.206815",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_9149f521",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_9149f521",
      "test_input": {
        "input_data": {
          "data": [
            0.5716531553938129,
            0.7113093546870901,
            0.3910289053370636,
            0.9198437429949029,
            0.08189922391971394
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "computation_calculator",
        "data_processing_validator",
        "computation_analyzer",
        "network_poster"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T10:59:16.578607",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_db1ccf9c",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring data_processing_transformer, integration_mapper, utility_logger with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_db1ccf9c",
      "test_input": {
        "input_data": {
          "data": [
            0.6439423486151271,
            0.03977578964369832,
            0.798520469794431,
            0.13785969362205086,
            0.3123553540340631
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "integration_mapper",
        "utility_logger"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T10:59:13.651914",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_1c3147a6",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_1c3147a6",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.25383320415676625
            },
            {
              "id": 1,
              "value": 0.5780341962920562
            },
            {
              "id": 2,
              "value": 0.4534373528318746
            },
            {
              "id": 3,
              "value": 0.9172728806596575
            },
            {
              "id": 4,
              "value": 0.6530047695352913
            },
            {
              "id": 5,
              "value": 0.9594064765905095
            },
            {
              "id": 6,
              "value": 0.6275598193071111
            },
            {
              "id": 7,
              "value": 0.5922747608615028
            },
            {
              "id": 8,
              "value": 0.8122949080716498
            },
            {
              "id": 9,
              "value": 0.9382109839146006
            }
          ]
        },
        "output_format": "json",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T10:59:16.199986",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_d79d9b58",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with Focus on monitoring network status, general specific helper capability, involving helper - Instance task_d79d9b58",
      "test_input": {
        "data": {
          "values": [
            53,
            62,
            53,
            32,
            87
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "utility_helper",
        "network_monitor"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T10:59:13.652367",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_5f91202a",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_5f91202a",
      "test_input": {
        "input_data": {
          "data": [
            0.45878272315714475,
            0.7894393221934228,
            0.892966069635836,
            0.3021975782284584,
            0.5961286963326339
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "computation_calculator",
        "data_processing_validator",
        "computation_analyzer",
        "network_poster"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T10:59:16.579629",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_d4bce033",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_d4bce033",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T10:59:16.207504",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_94476254",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with general specific cache capability, involving cache, general specific aggregator capability - Instance task_94476254",
      "test_input": {
        "data": {
          "values": [
            43,
            89,
            25,
            2,
            78
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "utility_cache",
        "data_processing_aggregator"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T10:59:13.652451",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_d269e1c5",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with Focus on monitoring network status, general specific helper capability, involving helper - Instance task_d269e1c5",
      "test_input": {
        "data": {
          "values": [
            34,
            52,
            33,
            57,
            17
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "utility_helper",
        "network_monitor"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T10:59:13.652507",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_0f30233e",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_0f30233e",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T10:59:16.206659",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_15356250",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with general specific cache capability, involving cache, general specific aggregator capability - Instance task_15356250",
      "test_input": {
        "data": {
          "values": [
            77,
            76,
            43,
            49,
            32
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "utility_cache",
        "data_processing_aggregator"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T10:59:13.652208",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_f94c4c72",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_f94c4c72",
      "test_input": {
        "input_data": {
          "data": [
            0.9145448844060377,
            0.6370829927970626,
            0.8313415675128802,
            0.04019909010063005,
            0.9712947716004956
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "computation_calculator",
        "data_processing_validator",
        "computation_analyzer"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T10:59:16.582232",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_f4cd507b",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with Focus on monitoring network status, general specific helper capability, involving helper - Instance task_f4cd507b",
      "test_input": {
        "data": {
          "values": [
            16,
            66,
            15,
            42,
            83
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "utility_helper",
        "network_monitor"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T10:59:13.652493",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_90eef582",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_90eef582",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.20976529420339973
            },
            {
              "id": 1,
              "value": 0.37537734598706785
            },
            {
              "id": 2,
              "value": 0.26344124684501846
            },
            {
              "id": 3,
              "value": 0.08868072380468206
            },
            {
              "id": 4,
              "value": 0.21800007667230303
            },
            {
              "id": 5,
              "value": 0.1105459045275261
            },
            {
              "id": 6,
              "value": 0.8039961998829092
            },
            {
              "id": 7,
              "value": 0.2505123689960741
            },
            {
              "id": 8,
              "value": 0.6947719317888698
            },
            {
              "id": 9,
              "value": 0.729907598076309
            }
          ]
        },
        "output_format": "json",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T10:59:16.204765",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_092ec7d5",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring file_operations_compressor with involving compressor, general specific compressor capability - Instance task_092ec7d5",
      "test_input": {
        "input_data": {
          "data": [
            0.48803132254863457,
            0.23744518579067375,
            0.5026109818301845,
            0.9258130492815596,
            0.2801119547867944
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "file_operations_compressor"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T10:59:13.651607",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_694ae2cf",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_694ae2cf",
      "test_input": {
        "input_data": {
          "data": [
            0.6387829857624255,
            0.5824522498089746,
            0.8461013391584663,
            0.8055683270090057,
            0.049494910555756166
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T10:59:16.399550",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_2c108394",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_2c108394",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.16223311593131529
            },
            {
              "id": 1,
              "value": 0.11341839516930419
            },
            {
              "id": 2,
              "value": 0.007065559430740942
            },
            {
              "id": 3,
              "value": 0.5630186979913377
            },
            {
              "id": 4,
              "value": 0.43424941403353257
            },
            {
              "id": 5,
              "value": 0.17387706013319904
            },
            {
              "id": 6,
              "value": 0.37123796034668866
            },
            {
              "id": 7,
              "value": 0.8669948840614409
            },
            {
              "id": 8,
              "value": 0.759400142903651
            },
            {
              "id": 9,
              "value": 0.020025852467430827
            }
          ]
        },
        "output_format": "csv",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "computation_analyzer",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T10:59:16.203819",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_bb554635",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_bb554635",
      "test_input": {
        "input_data": {
          "data": [
            0.7398481437626211,
            0.14684383569054127,
            0.0039184908491959325,
            0.9703021715045842,
            0.4437944692532617
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "computation_calculator",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T10:59:16.576285",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_4e05e2f2",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with involving connector, general specific connector capability, Applies transformations to data based on filtering options. - Instance task_4e05e2f2",
      "test_input": {
        "data": {
          "values": [
            69,
            31,
            38,
            56,
            66
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "integration_connector",
        "data_processing_filter"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T10:59:13.652395",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_9f0d68a1",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with involving connector, general specific connector capability, Applies transformations to data based on filtering options. - Instance task_9f0d68a1",
      "test_input": {
        "data": {
          "values": [
            69,
            62,
            44,
            74,
            60
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "integration_connector",
        "data_processing_filter"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T10:59:13.652402",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_0f6529ff",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring data_processing_transformer, integration_mapper, utility_logger with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_0f6529ff",
      "test_input": {
        "input_data": {
          "data": [
            0.4403912378428074,
            0.14404849778049977,
            0.626095109580373,
            0.4539436231448135,
            0.2758752386332395
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "integration_mapper",
        "utility_logger"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T10:59:13.651516",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_e47c7150",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_e47c7150",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T10:59:16.206900",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_e19f4d6f",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_e19f4d6f",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T10:59:16.206636",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_ad79957c",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_ad79957c",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.31651600761743737
            },
            {
              "id": 1,
              "value": 0.581892094166225
            },
            {
              "id": 2,
              "value": 0.14422050458018598
            },
            {
              "id": 3,
              "value": 0.3760040679108879
            },
            {
              "id": 4,
              "value": 0.07978229279597948
            },
            {
              "id": 5,
              "value": 0.9448380946359827
            },
            {
              "id": 6,
              "value": 0.6335254299584906
            },
            {
              "id": 7,
              "value": 0.08769260577197446
            },
            {
              "id": 8,
              "value": 0.024592131769308745
            },
            {
              "id": 9,
              "value": 0.13307666366959947
            }
          ]
        },
        "output_format": "csv",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T10:59:16.199181",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_447f202d",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring file_operations_compressor with involving compressor, general specific compressor capability - Instance task_447f202d",
      "test_input": {
        "input_data": {
          "data": [
            0.048222537451598435,
            0.9570773989140259,
            0.05821993278269422,
            0.29722879220461274,
            0.12861631619184144
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "file_operations_compressor"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T10:59:13.651657",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_6b688cbf",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_6b688cbf",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T10:59:16.206544",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_bfcf5062",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_bfcf5062",
      "test_input": {
        "input_data": {
          "data": [
            0.8013695230856703,
            0.7706918883684583,
            0.3165860578566021,
            0.949598920400894,
            0.6362639884675038
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "computation_calculator",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T10:59:16.578840",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_57f62b31",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_57f62b31",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.4936583794087923
            },
            {
              "id": 1,
              "value": 0.8398332107602566
            },
            {
              "id": 2,
              "value": 0.3894061923241041
            },
            {
              "id": 3,
              "value": 0.32586510102093413
            },
            {
              "id": 4,
              "value": 0.42974988059216723
            },
            {
              "id": 5,
              "value": 0.4376510508976338
            },
            {
              "id": 6,
              "value": 0.5158900463502979
            },
            {
              "id": 7,
              "value": 0.6597149300972506
            },
            {
              "id": 8,
              "value": 0.9420987058714999
            },
            {
              "id": 9,
              "value": 0.4654454323756495
            }
          ]
        },
        "output_format": "csv",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "computation_analyzer",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T10:59:16.203516",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_3a2dc00e",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with Focus on monitoring network status, general specific helper capability, involving helper - Instance task_3a2dc00e",
      "test_input": {
        "data": {
          "values": [
            47,
            23,
            57,
            98,
            60
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "utility_helper",
        "network_monitor"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T10:59:13.652458",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_1c7ca58c",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with involving connector, general specific connector capability, Applies transformations to data based on filtering options. - Instance task_1c7ca58c",
      "test_input": {
        "data": {
          "values": [
            100,
            19,
            2,
            90,
            92
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "integration_connector",
        "data_processing_filter"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T10:59:13.652632",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_f5e3c821",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_f5e3c821",
      "test_input": {
        "input_data": {
          "data": [
            0.6981292016193527,
            0.2168384424643669,
            0.5300001491564265,
            0.10661474580838692,
            0.38751478752923796
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "computation_calculator",
        "data_processing_validator",
        "computation_analyzer"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T10:59:16.582350",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_b4f57bd4",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_b4f57bd4",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T10:59:16.206628",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_37e93ae6",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with Focus on monitoring network status, general specific helper capability, involving helper - Instance task_37e93ae6",
      "test_input": {
        "data": {
          "values": [
            100,
            43,
            66,
            26,
            95
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "utility_helper",
        "network_monitor"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T10:59:13.651987",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_16bb317b",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_16bb317b",
      "test_input": {
        "input_data": {
          "data": [
            0.7585769895817616,
            0.9913257451047811,
            0.6040745892332793,
            0.5693869247913849,
            0.01451383817528662
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "computation_calculator",
        "data_processing_validator",
        "computation_analyzer",
        "network_poster"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T10:59:16.579769",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_2cf32079",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_2cf32079",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.03161540876977742
            },
            {
              "id": 1,
              "value": 0.32574106700943617
            },
            {
              "id": 2,
              "value": 0.44257560679341124
            },
            {
              "id": 3,
              "value": 0.8971966498100099
            },
            {
              "id": 4,
              "value": 0.33657219250348
            },
            {
              "id": 5,
              "value": 0.3906596784025629
            },
            {
              "id": 6,
              "value": 0.15576803521840565
            },
            {
              "id": 7,
              "value": 0.9974141655764667
            },
            {
              "id": 8,
              "value": 0.19124504948438814
            },
            {
              "id": 9,
              "value": 0.8606679993455163
            }
          ]
        },
        "output_format": "json",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T10:59:16.197582",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_1c19134c",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_1c19134c",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T10:59:16.206666",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_542e5401",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_542e5401",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T10:59:16.206606",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_4be681e3",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_4be681e3",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.6850070673263899
            },
            {
              "id": 1,
              "value": 0.13840841506347856
            },
            {
              "id": 2,
              "value": 0.5175265038401545
            },
            {
              "id": 3,
              "value": 0.7607612385134226
            },
            {
              "id": 4,
              "value": 0.04406874408536898
            },
            {
              "id": 5,
              "value": 0.8486391026750421
            },
            {
              "id": 6,
              "value": 0.3736524682296195
            },
            {
              "id": 7,
              "value": 0.2679275567374647
            },
            {
              "id": 8,
              "value": 0.07691183048899619
            },
            {
              "id": 9,
              "value": 0.7096223367020897
            }
          ]
        },
        "output_format": "xml",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T10:59:16.195909",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_39680016",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with Focus on monitoring network status, general specific helper capability, involving helper - Instance task_39680016",
      "test_input": {
        "data": {
          "values": [
            89,
            69,
            81,
            30,
            53
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "utility_helper",
        "network_monitor"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T10:59:13.651943",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_7587b3ed",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_7587b3ed",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.12225294658974561
            },
            {
              "id": 1,
              "value": 0.1289407577912478
            },
            {
              "id": 2,
              "value": 0.5802137884957128
            },
            {
              "id": 3,
              "value": 0.7609961943662716
            },
            {
              "id": 4,
              "value": 0.4515544324552041
            },
            {
              "id": 5,
              "value": 0.31525771888615695
            },
            {
              "id": 6,
              "value": 0.9809774099536318
            },
            {
              "id": 7,
              "value": 0.00731606724725864
            },
            {
              "id": 8,
              "value": 0.4415076857136053
            },
            {
              "id": 9,
              "value": 0.5764957619836417
            }
          ]
        },
        "output_format": "csv",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "computation_analyzer",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T10:59:16.197887",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_3e79e3b0",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with Focus on monitoring network status, general specific helper capability, involving helper - Instance task_3e79e3b0",
      "test_input": {
        "data": {
          "values": [
            37,
            13,
            36,
            8,
            16
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "utility_helper",
        "network_monitor"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T10:59:13.652444",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_49934155",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring file_operations_compressor with involving compressor, general specific compressor capability - Instance task_49934155",
      "test_input": {
        "input_data": {
          "data": [
            0.8553677870486441,
            0.5081008847516489,
            0.06719342922281024,
            0.06125503116938835,
            0.9893486268970584
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "file_operations_compressor"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T10:59:13.651787",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_9612ee1c",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_9612ee1c",
      "test_input": {
        "input_data": {
          "data": [
            0.1152508972095927,
            0.38825328541803084,
            0.5330622777135675,
            0.620211661592283,
            0.18172593125302539
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "computation_calculator",
        "data_processing_validator",
        "computation_analyzer"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T10:59:16.399669",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_f7b14f73",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring file_operations_compressor with involving compressor, general specific compressor capability - Instance task_f7b14f73",
      "test_input": {
        "input_data": {
          "data": [
            0.7977512034609051,
            0.05108415373099484,
            0.6195836977194941,
            0.7503438324776933,
            0.96532692698465
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "file_operations_compressor"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T10:59:13.651882",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_b156d023",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring data_processing_transformer, integration_mapper, utility_logger with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_b156d023",
      "test_input": {
        "input_data": {
          "data": [
            0.6317615576444502,
            0.43318163448864166,
            0.8738587870602392,
            0.25059437922820427,
            0.8033493709992569
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "integration_mapper",
        "utility_logger"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T10:59:13.651591",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_77d37684",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_77d37684",
      "test_input": {
        "input_data": {
          "data": [
            0.022383102813372635,
            0.9915684261237613,
            0.03631748020313641,
            0.17283621917241487,
            0.8777364996342975
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "computation_calculator",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T10:59:16.580584",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_3bbe4451",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_3bbe4451",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.6131396160686109
            },
            {
              "id": 1,
              "value": 0.10284098135617681
            },
            {
              "id": 2,
              "value": 0.014270957576219656
            },
            {
              "id": 3,
              "value": 0.693252393273494
            },
            {
              "id": 4,
              "value": 0.5361424973895035
            },
            {
              "id": 5,
              "value": 0.4556931930138881
            },
            {
              "id": 6,
              "value": 0.8665928318642719
            },
            {
              "id": 7,
              "value": 0.4905690424013558
            },
            {
              "id": 8,
              "value": 0.18862551019088403
            },
            {
              "id": 9,
              "value": 0.26401522991676196
            }
          ]
        },
        "output_format": "csv",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T10:59:16.204838",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_8426a699",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_8426a699",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.9075532177755261
            },
            {
              "id": 1,
              "value": 0.08307083706601326
            },
            {
              "id": 2,
              "value": 0.37539100111647394
            },
            {
              "id": 3,
              "value": 0.7084642021176694
            },
            {
              "id": 4,
              "value": 0.27204785298433665
            },
            {
              "id": 5,
              "value": 0.3183053801597495
            },
            {
              "id": 6,
              "value": 0.46978639229960395
            },
            {
              "id": 7,
              "value": 0.9616494295745212
            },
            {
              "id": 8,
              "value": 0.04722985411309688
            },
            {
              "id": 9,
              "value": 0.9278627215070823
            }
          ]
        },
        "output_format": "json",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "computation_analyzer",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T10:59:16.203614",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_e19422e4",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_e19422e4",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T10:59:16.206923",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_ad0d3be7",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with general specific cache capability, involving cache, general specific aggregator capability - Instance task_ad0d3be7",
      "test_input": {
        "data": {
          "values": [
            74,
            90,
            60,
            48,
            19
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "utility_cache",
        "data_processing_aggregator"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T10:59:13.652339",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_1d2ffdf2",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_1d2ffdf2",
      "test_input": {
        "input_data": {
          "data": [
            0.7026066910588036,
            0.016377362384219052,
            0.5041658235411056,
            0.6537691089410262,
            0.8904418643635427
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "computation_calculator",
        "data_processing_validator",
        "computation_analyzer"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T10:59:16.574221",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_6c126020",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_6c126020",
      "test_input": {
        "input_data": {
          "data": [
            0.4283619721325187,
            0.3222290524426733,
            0.874373378124011,
            0.6449382814391877,
            0.22097679126331793
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "computation_calculator",
        "data_processing_validator",
        "computation_analyzer"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T10:59:16.579066",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_667b9107",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_667b9107",
      "test_input": {
        "input_data": {
          "data": [
            0.9345331109355488,
            0.30173500818237764,
            0.7482932213290057,
            0.44505658095867784,
            0.035178419787778914
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "computation_calculator",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T10:59:16.580861",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_de94ac51",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring file_operations_compressor with involving compressor, general specific compressor capability - Instance task_de94ac51",
      "test_input": {
        "input_data": {
          "data": [
            0.9333541540195238,
            0.0197436564082496,
            0.24336720893968677,
            0.1105806821137022,
            0.7291355722037653
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "file_operations_compressor"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T10:59:13.651717",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_42c19eea",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_42c19eea",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T10:59:16.206689",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_833e15e7",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring data_processing_transformer, integration_mapper, utility_logger with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_833e15e7",
      "test_input": {
        "input_data": {
          "data": [
            0.6974640959596209,
            0.4724975014715368,
            0.10124591018834006,
            0.7211497330314157,
            0.894823350030376
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "integration_mapper",
        "utility_logger"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T10:59:13.651533",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_3fcfd064",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring data_processing_filter with involving filter data, Can handle large datasets efficiently by reducing the amount of data processed., Applies transformations to data based on filtering options. - Instance task_3fcfd064",
      "test_input": {
        "input_data": {
          "data": [
            0.10385523750337877,
            0.5084584669822965,
            0.4988916129820178,
            0.706986861289193,
            0.3141245297961601
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "data_processing_filter"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T10:59:13.651893",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_7c525c46",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_7c525c46",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.9278421607369517
            },
            {
              "id": 1,
              "value": 0.7901079707585082
            },
            {
              "id": 2,
              "value": 0.10748815841107529
            },
            {
              "id": 3,
              "value": 0.6512017079176187
            },
            {
              "id": 4,
              "value": 0.32142997957237573
            },
            {
              "id": 5,
              "value": 0.10751621790889598
            },
            {
              "id": 6,
              "value": 0.6540874165424096
            },
            {
              "id": 7,
              "value": 0.1612544844346393
            },
            {
              "id": 8,
              "value": 0.669371348717332
            },
            {
              "id": 9,
              "value": 0.7716703203330839
            }
          ]
        },
        "output_format": "csv",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T10:59:16.197774",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_079cd0be",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with Focus on monitoring network status, general specific helper capability, involving helper - Instance task_079cd0be",
      "test_input": {
        "data": {
          "values": [
            34,
            32,
            19,
            55,
            23
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "utility_helper",
        "network_monitor"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T10:59:13.652311",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_32d5936c",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_32d5936c",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.500143221366882
            },
            {
              "id": 1,
              "value": 0.7141782596192141
            },
            {
              "id": 2,
              "value": 0.13447777132618666
            },
            {
              "id": 3,
              "value": 0.4784956548078908
            },
            {
              "id": 4,
              "value": 0.01812772161709464
            },
            {
              "id": 5,
              "value": 0.07349847098480211
            },
            {
              "id": 6,
              "value": 0.7520515421174359
            },
            {
              "id": 7,
              "value": 0.03464991032783382
            },
            {
              "id": 8,
              "value": 0.5142798820119409
            },
            {
              "id": 9,
              "value": 0.3670858832196975
            }
          ]
        },
        "output_format": "json",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T10:59:16.202814",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_9fc88c31",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with Focus on monitoring network status, general specific helper capability, involving helper - Instance task_9fc88c31",
      "test_input": {
        "data": {
          "values": [
            11,
            100,
            41,
            2,
            96
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "utility_helper",
        "network_monitor"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T10:59:13.652232",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_375510a0",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring file_operations_compressor with involving compressor, general specific compressor capability - Instance task_375510a0",
      "test_input": {
        "input_data": {
          "data": [
            0.33772018721754826,
            0.36759490878864376,
            0.1644664049119543,
            0.7732900153326084,
            0.5720839519257458
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "file_operations_compressor"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T10:59:13.651817",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_9e4ae757",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring data_processing_filter with involving filter data, Can handle large datasets efficiently by reducing the amount of data processed., Applies transformations to data based on filtering options. - Instance task_9e4ae757",
      "test_input": {
        "input_data": {
          "data": [
            0.5932513604009313,
            0.15093817931246178,
            0.8353312939429304,
            0.8861404237464096,
            0.19684312208005572
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "data_processing_filter"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T10:59:13.651359",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_ed50d71b",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring data_processing_transformer, integration_mapper, utility_logger with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_ed50d71b",
      "test_input": {
        "input_data": {
          "data": [
            0.618819208407804,
            0.3638954141474767,
            0.1391721670705548,
            0.966185534365664,
            0.6883137370274506
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "integration_mapper",
        "utility_logger"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T10:59:13.651619",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_3f288f0a",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring data_processing_transformer, integration_mapper, utility_logger with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_3f288f0a",
      "test_input": {
        "input_data": {
          "data": [
            0.20637410211675822,
            0.4818139405645603,
            0.7740135458552186,
            0.5094158510987362,
            0.6243545437937638
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "integration_mapper",
        "utility_logger"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T10:59:13.651551",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_7e36131a",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_7e36131a",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T10:59:16.206392",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_d1550328",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_d1550328",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T10:59:16.206862",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_dc5f1a4e",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring file_operations_compressor with involving compressor, general specific compressor capability - Instance task_dc5f1a4e",
      "test_input": {
        "input_data": {
          "data": [
            0.251311033671194,
            0.014169578096639879,
            0.7011897534333368,
            0.926971269245041,
            0.6720193032701723
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "file_operations_compressor"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T10:59:13.651692",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_c38d78ae",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_c38d78ae",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T10:59:16.206963",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_6e9208a7",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with involving connector, general specific connector capability, Applies transformations to data based on filtering options. - Instance task_6e9208a7",
      "test_input": {
        "data": {
          "values": [
            11,
            91,
            74,
            24,
            36
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "integration_connector",
        "data_processing_filter"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T10:59:13.652535",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_d01dbd5e",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_d01dbd5e",
      "test_input": {
        "input_data": {
          "data": [
            0.5454751059801541,
            0.34173417901942293,
            0.677946407578711,
            0.3536783555671835,
            0.6021887751345971
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "computation_calculator",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T10:59:16.573624",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_bd2d0157",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_bd2d0157",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T10:59:16.207301",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_77ddf8da",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_77ddf8da",
      "test_input": {
        "input_data": {
          "data": [
            0.37191168103933026,
            0.5778867004982728,
            0.6765181980134569,
            0.8280072220820164,
            0.5157303637672951
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "computation_calculator",
        "data_processing_validator",
        "computation_analyzer",
        "network_poster"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T10:59:16.573319",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_165d2ebd",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_165d2ebd",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T10:59:16.207075",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_fcad9e17",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_fcad9e17",
      "test_input": {
        "input_data": {
          "data": [
            0.1876065476235803,
            0.9511253036335484,
            0.4764244972184186,
            0.6771439315975393,
            0.2978249168362086
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "computation_calculator",
        "data_processing_validator",
        "computation_analyzer"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T10:59:16.581193",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_13abcfa1",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with involving connector, general specific connector capability, Applies transformations to data based on filtering options. - Instance task_13abcfa1",
      "test_input": {
        "data": {
          "values": [
            51,
            1,
            4,
            9,
            25
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "integration_connector",
        "data_processing_filter"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T10:59:13.652188",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_83f64288",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_83f64288",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T10:59:16.207249",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_3624d656",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring data_processing_filter with involving filter data, Can handle large datasets efficiently by reducing the amount of data processed., Applies transformations to data based on filtering options. - Instance task_3624d656",
      "test_input": {
        "input_data": {
          "data": [
            0.8610729841605266,
            0.15898130366584662,
            0.1852339531301539,
            0.939819355065693,
            0.7898434852649339
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "data_processing_filter"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T10:59:13.651479",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_6f7bbfca",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_6f7bbfca",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.10920822644964778
            },
            {
              "id": 1,
              "value": 0.6659601232436254
            },
            {
              "id": 2,
              "value": 0.45770654404410394
            },
            {
              "id": 3,
              "value": 0.2913349152083806
            },
            {
              "id": 4,
              "value": 0.8029669243543537
            },
            {
              "id": 5,
              "value": 0.4290862888209922
            },
            {
              "id": 6,
              "value": 0.4068455669680304
            },
            {
              "id": 7,
              "value": 0.8312823086438098
            },
            {
              "id": 8,
              "value": 0.15156230817148153
            },
            {
              "id": 9,
              "value": 0.1970420990148607
            }
          ]
        },
        "output_format": "xml",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "computation_analyzer",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T10:59:16.197280",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_5e1b4f4a",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with general specific cache capability, involving cache, general specific aggregator capability - Instance task_5e1b4f4a",
      "test_input": {
        "data": {
          "values": [
            46,
            9,
            99,
            67,
            93
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "utility_cache",
        "data_processing_aggregator"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T10:59:13.652485",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_862a6a7b",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_862a6a7b",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.3609563454033883
            },
            {
              "id": 1,
              "value": 0.5710695731718076
            },
            {
              "id": 2,
              "value": 0.057527289269876936
            },
            {
              "id": 3,
              "value": 0.13854569968262942
            },
            {
              "id": 4,
              "value": 0.7814394181415277
            },
            {
              "id": 5,
              "value": 0.8077801213296423
            },
            {
              "id": 6,
              "value": 0.3711799860583117
            },
            {
              "id": 7,
              "value": 0.3258489594742008
            },
            {
              "id": 8,
              "value": 0.9717310367653225
            },
            {
              "id": 9,
              "value": 0.1112116245982685
            }
          ]
        },
        "output_format": "json",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "computation_analyzer",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T10:59:16.200202",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_a666f19a",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring data_processing_filter with involving filter data, Can handle large datasets efficiently by reducing the amount of data processed., Applies transformations to data based on filtering options. - Instance task_a666f19a",
      "test_input": {
        "input_data": {
          "data": [
            0.9390416264402396,
            0.4364492744023646,
            0.18484854348085744,
            0.5938665516518405,
            0.6714695745558443
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "data_processing_filter"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T10:59:13.651527",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_26fdb8c6",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring file_operations_compressor with involving compressor, general specific compressor capability - Instance task_26fdb8c6",
      "test_input": {
        "input_data": {
          "data": [
            0.09399002149254676,
            0.5963008145640072,
            0.7033245488626183,
            0.9493239223535999,
            0.31532692722411704
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "file_operations_compressor"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T10:59:13.651366",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_9fa22d82",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_9fa22d82",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T10:59:16.206786",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_9f4a017a",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_9f4a017a",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.22376879598009014
            },
            {
              "id": 1,
              "value": 0.57015928933128
            },
            {
              "id": 2,
              "value": 0.3227672277958874
            },
            {
              "id": 3,
              "value": 0.5817449463535541
            },
            {
              "id": 4,
              "value": 0.21266666318987537
            },
            {
              "id": 5,
              "value": 0.5761327934144042
            },
            {
              "id": 6,
              "value": 0.26298748449106846
            },
            {
              "id": 7,
              "value": 0.7103467508738964
            },
            {
              "id": 8,
              "value": 0.24671389759700446
            },
            {
              "id": 9,
              "value": 0.48126625812494594
            }
          ]
        },
        "output_format": "csv",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T10:59:16.203990",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_f7a73300",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_f7a73300",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T10:59:16.206583",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_e605f2d9",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_e605f2d9",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T10:59:16.207514",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_8a191bfc",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring data_processing_filter with involving filter data, Can handle large datasets efficiently by reducing the amount of data processed., Applies transformations to data based on filtering options. - Instance task_8a191bfc",
      "test_input": {
        "input_data": {
          "data": [
            0.5934407368164082,
            0.8877841088943638,
            0.6348741259162248,
            0.6385796156747683,
            0.5302678778140779
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "data_processing_filter"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T10:59:13.651433",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_396b1fb7",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_396b1fb7",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.8254951337551836
            },
            {
              "id": 1,
              "value": 0.1690498822128501
            },
            {
              "id": 2,
              "value": 0.8369636300384008
            },
            {
              "id": 3,
              "value": 0.5984066182879747
            },
            {
              "id": 4,
              "value": 0.697074873415598
            },
            {
              "id": 5,
              "value": 0.49622785169592776
            },
            {
              "id": 6,
              "value": 0.1949310712382899
            },
            {
              "id": 7,
              "value": 0.4981132104118887
            },
            {
              "id": 8,
              "value": 0.7521000254218764
            },
            {
              "id": 9,
              "value": 0.15224163077863062
            }
          ]
        },
        "output_format": "xml",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "computation_analyzer",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T10:59:16.197077",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_55070888",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_55070888",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.3656289675421559
            },
            {
              "id": 1,
              "value": 0.5757650436394764
            },
            {
              "id": 2,
              "value": 0.9059325241294581
            },
            {
              "id": 3,
              "value": 0.8722274336680244
            },
            {
              "id": 4,
              "value": 0.3667251140680212
            },
            {
              "id": 5,
              "value": 0.3035949189012246
            },
            {
              "id": 6,
              "value": 0.3277100776864732
            },
            {
              "id": 7,
              "value": 0.547956866261709
            },
            {
              "id": 8,
              "value": 0.8317056037877562
            },
            {
              "id": 9,
              "value": 0.6510158605084153
            }
          ]
        },
        "output_format": "json",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "computation_analyzer",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T10:59:16.206105",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_b2c58873",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_b2c58873",
      "test_input": {
        "input_data": {
          "data": [
            0.29616009215685635,
            0.873999466224437,
            0.8660904180519629,
            0.375413953815963,
            0.43783288141043797
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T10:59:16.580764",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_d17be171",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_d17be171",
      "test_input": {
        "input_data": {
          "data": [
            0.8806522878680052,
            0.6800053275681353,
            0.10447273242462163,
            0.4299046308891634,
            0.1213390450134958
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "computation_calculator",
        "data_processing_validator",
        "computation_analyzer",
        "network_poster"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T10:59:16.584213",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_ef7fdbe4",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_ef7fdbe4",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T10:59:16.206466",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_e498fdee",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring file_operations_compressor with involving compressor, general specific compressor capability - Instance task_e498fdee",
      "test_input": {
        "input_data": {
          "data": [
            0.7989052452614431,
            0.3266215346492187,
            0.39023319004052537,
            0.9201112950253206,
            0.9723494816633249
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "file_operations_compressor"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T10:59:13.651445",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_91af62ed",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with involving connector, general specific connector capability, Applies transformations to data based on filtering options. - Instance task_91af62ed",
      "test_input": {
        "data": {
          "values": [
            90,
            50,
            17,
            85,
            10
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "integration_connector",
        "data_processing_filter"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T10:59:13.652577",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_9ee1dfd1",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring data_processing_filter with involving filter data, Can handle large datasets efficiently by reducing the amount of data processed., Applies transformations to data based on filtering options. - Instance task_9ee1dfd1",
      "test_input": {
        "input_data": {
          "data": [
            0.32215098751200677,
            0.12521714199174927,
            0.9897226567995815,
            0.7674312603901989,
            0.1913157460334457
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "data_processing_filter"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T10:59:13.651473",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_8b98996a",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_8b98996a",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T10:59:16.207317",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_a14a0757",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_a14a0757",
      "test_input": {
        "input_data": {
          "data": [
            0.6550098683361685,
            0.5269485850223323,
            0.11382445954362708,
            0.3610051192172967,
            0.9860320671492261
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "computation_calculator",
        "data_processing_validator",
        "computation_analyzer"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T10:59:16.578371",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_ff7b7385",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_ff7b7385",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.8916389159620779
            },
            {
              "id": 1,
              "value": 0.4817154226590593
            },
            {
              "id": 2,
              "value": 0.8968132764236156
            },
            {
              "id": 3,
              "value": 0.9896266119169181
            },
            {
              "id": 4,
              "value": 0.30283972602344555
            },
            {
              "id": 5,
              "value": 0.1456738487726943
            },
            {
              "id": 6,
              "value": 0.06329989009136783
            },
            {
              "id": 7,
              "value": 0.024264111538501054
            },
            {
              "id": 8,
              "value": 0.6654726141339989
            },
            {
              "id": 9,
              "value": 0.884556036099681
            }
          ]
        },
        "output_format": "xml",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T10:59:16.204679",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_bab68a7e",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring data_processing_filter with involving filter data, Can handle large datasets efficiently by reducing the amount of data processed., Applies transformations to data based on filtering options. - Instance task_bab68a7e",
      "test_input": {
        "input_data": {
          "data": [
            0.02499384394551707,
            0.2346905727577977,
            0.9518924326455407,
            0.5679602874937093,
            0.28880863097622356
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "data_processing_filter"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T10:59:13.651505",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_fcb4d147",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with general specific cache capability, involving cache, general specific aggregator capability - Instance task_fcb4d147",
      "test_input": {
        "data": {
          "values": [
            82,
            98,
            70,
            63,
            17
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "utility_cache",
        "data_processing_aggregator"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T10:59:13.652626",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_7bae7a27",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring data_processing_transformer, integration_mapper, utility_logger with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_7bae7a27",
      "test_input": {
        "input_data": {
          "data": [
            0.9208225632669708,
            0.007998936122173728,
            0.062340290965583356,
            0.6006193576752973,
            0.46099553285587536
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "integration_mapper",
        "utility_logger"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T10:59:13.651278",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_e64210a7",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring data_processing_filter with involving filter data, Can handle large datasets efficiently by reducing the amount of data processed., Applies transformations to data based on filtering options. - Instance task_e64210a7",
      "test_input": {
        "input_data": {
          "data": [
            0.10371015197826738,
            0.9987236083147031,
            0.6440329659147754,
            0.7729789568248923,
            0.6065582632925154
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "data_processing_filter"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T10:59:13.651568",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_844de93a",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_844de93a",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.19022861694892879
            },
            {
              "id": 1,
              "value": 0.4380361301095561
            },
            {
              "id": 2,
              "value": 0.4609290482899919
            },
            {
              "id": 3,
              "value": 0.8178226604866504
            },
            {
              "id": 4,
              "value": 0.49411925695470216
            },
            {
              "id": 5,
              "value": 0.9527291042194475
            },
            {
              "id": 6,
              "value": 0.4413687412306082
            },
            {
              "id": 7,
              "value": 0.17233428052136568
            },
            {
              "id": 8,
              "value": 0.9872410673982055
            },
            {
              "id": 9,
              "value": 0.8221659905052352
            }
          ]
        },
        "output_format": "xml",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "computation_analyzer",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T10:59:16.204591",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_bb59d0f2",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_bb59d0f2",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.23096334971405497
            },
            {
              "id": 1,
              "value": 0.5482476969674284
            },
            {
              "id": 2,
              "value": 0.3276422536847342
            },
            {
              "id": 3,
              "value": 0.1353753745903543
            },
            {
              "id": 4,
              "value": 0.3242295636862914
            },
            {
              "id": 5,
              "value": 0.18782237347838282
            },
            {
              "id": 6,
              "value": 0.38966290372835743
            },
            {
              "id": 7,
              "value": 0.7922620850907839
            },
            {
              "id": 8,
              "value": 0.5175426302188363
            },
            {
              "id": 9,
              "value": 0.45013784786469657
            }
          ]
        },
        "output_format": "csv",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "computation_analyzer",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T10:59:16.203344",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_c9cecb6e",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring data_processing_transformer, integration_mapper, utility_logger with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_c9cecb6e",
      "test_input": {
        "input_data": {
          "data": [
            0.6274102163698638,
            0.4231825424740543,
            0.4231206204758924,
            0.20497730160191363,
            0.08131850447747169
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "integration_mapper",
        "utility_logger"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T10:59:13.651352",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_97662cd5",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_97662cd5",
      "test_input": {
        "input_data": {
          "data": [
            0.30961047156303767,
            0.03994795812116103,
            0.8994019305290666,
            0.6081750267057768,
            0.751458985707589
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "computation_calculator",
        "data_processing_validator",
        "computation_analyzer",
        "network_poster"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T10:59:16.579322",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_bed5faa9",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with Focus on monitoring network status, general specific helper capability, involving helper - Instance task_bed5faa9",
      "test_input": {
        "data": {
          "values": [
            81,
            14,
            84,
            61,
            56
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "utility_helper",
        "network_monitor"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T10:59:13.652055",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_ee8fdd79",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with Focus on monitoring network status, general specific helper capability, involving helper - Instance task_ee8fdd79",
      "test_input": {
        "data": {
          "values": [
            33,
            32,
            40,
            74,
            47
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "utility_helper",
        "network_monitor"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T10:59:13.652109",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_1750fed1",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with involving connector, general specific connector capability, Applies transformations to data based on filtering options. - Instance task_1750fed1",
      "test_input": {
        "data": {
          "values": [
            67,
            47,
            78,
            53,
            94
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "integration_connector",
        "data_processing_filter"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T10:59:13.651995",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_290cb5c4",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_290cb5c4",
      "test_input": {
        "input_data": {
          "data": [
            0.18799178939338157,
            0.0875430653197794,
            0.4863027140035048,
            0.3119514825670493,
            0.8422935125737225
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "computation_calculator",
        "data_processing_validator",
        "computation_analyzer"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T10:59:16.573856",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_b4fc8a04",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with general specific cache capability, involving cache, general specific aggregator capability - Instance task_b4fc8a04",
      "test_input": {
        "data": {
          "values": [
            70,
            25,
            49,
            60,
            19
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "utility_cache",
        "data_processing_aggregator"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T10:59:13.652084",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_be9ca65c",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with Focus on monitoring network status, general specific helper capability, involving helper - Instance task_be9ca65c",
      "test_input": {
        "data": {
          "values": [
            11,
            6,
            89,
            13,
            97
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "utility_helper",
        "network_monitor"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T10:59:13.652195",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_ca4e39f6",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring data_processing_transformer, integration_mapper, utility_logger with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_ca4e39f6",
      "test_input": {
        "input_data": {
          "data": [
            0.05864252712048679,
            0.527396480530627,
            0.38985185782996334,
            0.18167080239765176,
            0.6998056120631708
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "integration_mapper",
        "utility_logger"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T10:59:13.651669",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_4325f786",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_4325f786",
      "test_input": {
        "input_data": {
          "data": [
            0.9737970529944738,
            0.991888610432616,
            0.673832288711134,
            0.42059943156309143,
            0.563734138571385
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "computation_calculator",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T10:59:16.577408",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_8b7de745",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_8b7de745",
      "test_input": {
        "input_data": {
          "data": [
            0.4195232777043548,
            0.8421314105557277,
            0.24534161216299177,
            0.010963645983683934,
            0.29705608860404586
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "computation_calculator",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T10:59:16.579958",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_d1c810e7",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_d1c810e7",
      "test_input": {
        "input_data": {
          "data": [
            0.4887353843000265,
            0.7849408777330942,
            0.8419418634331418,
            0.5964390476649929,
            0.04414160943031997
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "computation_calculator",
        "data_processing_validator",
        "computation_analyzer"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T10:59:16.578953",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_eeb92242",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_eeb92242",
      "test_input": {
        "input_data": {
          "data": [
            0.6055626659963376,
            0.7870115889064455,
            0.9726101443934229,
            0.21330726904177777,
            0.21906374660391004
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T10:59:16.572708",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_e1688ea2",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring file_operations_compressor with involving compressor, general specific compressor capability - Instance task_e1688ea2",
      "test_input": {
        "input_data": {
          "data": [
            0.46020056067680604,
            0.381894432861577,
            0.4371295539865644,
            0.23714039345822868,
            0.4115607028839221
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "file_operations_compressor"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T10:59:13.651728",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_8061ec23",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with Focus on monitoring network status, general specific helper capability, involving helper - Instance task_8061ec23",
      "test_input": {
        "data": {
          "values": [
            91,
            7,
            52,
            82,
            91
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "utility_helper",
        "network_monitor"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T10:59:13.652543",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_1f80b880",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring data_processing_transformer, integration_mapper, utility_logger with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_1f80b880",
      "test_input": {
        "input_data": {
          "data": [
            0.9027719823332172,
            0.9559560067361316,
            0.8586247090849977,
            0.07341856299768834,
            0.7466816281905914
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "integration_mapper",
        "utility_logger"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T10:59:13.651427",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_dc788390",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring file_operations_compressor with involving compressor, general specific compressor capability - Instance task_dc788390",
      "test_input": {
        "input_data": {
          "data": [
            0.1215565439753179,
            0.8486679040694041,
            0.9263658769374304,
            0.430930143707396,
            0.8068638073126249
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "file_operations_compressor"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T10:59:13.651345",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_ef75e584",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring file_operations_compressor with involving compressor, general specific compressor capability - Instance task_ef75e584",
      "test_input": {
        "input_data": {
          "data": [
            0.7986645251340257,
            0.5092016829352005,
            0.7057418148915792,
            0.8844534219257125,
            0.0548673085810123
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "file_operations_compressor"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T10:59:13.651613",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_3806b38d",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with general specific cache capability, involving cache, general specific aggregator capability - Instance task_3806b38d",
      "test_input": {
        "data": {
          "values": [
            59,
            61,
            86,
            14,
            8
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "utility_cache",
        "data_processing_aggregator"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T10:59:13.652549",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_06993b23",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring data_processing_transformer, integration_mapper, utility_logger with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_06993b23",
      "test_input": {
        "input_data": {
          "data": [
            0.6412255753887843,
            0.3377039189942189,
            0.8642731041234374,
            0.9162315813018093,
            0.9756933042520459
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "integration_mapper",
        "utility_logger"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T10:59:13.651585",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_d1ecd1ce",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_d1ecd1ce",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.18771519907993894
            },
            {
              "id": 1,
              "value": 0.5069570545139587
            },
            {
              "id": 2,
              "value": 0.1819773417149566
            },
            {
              "id": 3,
              "value": 0.2048459124246158
            },
            {
              "id": 4,
              "value": 0.949552384437818
            },
            {
              "id": 5,
              "value": 0.9475371538804417
            },
            {
              "id": 6,
              "value": 0.8177829236602048
            },
            {
              "id": 7,
              "value": 0.245861834301481
            },
            {
              "id": 8,
              "value": 0.5816468657270447
            },
            {
              "id": 9,
              "value": 0.7163616955709122
            }
          ]
        },
        "output_format": "xml",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "computation_analyzer",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T10:59:16.204094",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_0d5321ff",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring data_processing_filter with involving filter data, Can handle large datasets efficiently by reducing the amount of data processed., Applies transformations to data based on filtering options. - Instance task_0d5321ff",
      "test_input": {
        "input_data": {
          "data": [
            0.7974949912767689,
            0.019919156452393616,
            0.8571842961595785,
            0.9838748144733894,
            0.7808997755243929
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "data_processing_filter"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T10:59:13.651439",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_e744dc22",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_e744dc22",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T10:59:16.206838",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_e3360214",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_e3360214",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.073912561428093
            },
            {
              "id": 1,
              "value": 0.9123863045417574
            },
            {
              "id": 2,
              "value": 0.6482343276428997
            },
            {
              "id": 3,
              "value": 0.5450076860531519
            },
            {
              "id": 4,
              "value": 0.2530164212518742
            },
            {
              "id": 5,
              "value": 0.42785438403181664
            },
            {
              "id": 6,
              "value": 0.7179358481324074
            },
            {
              "id": 7,
              "value": 0.37625179304405254
            },
            {
              "id": 8,
              "value": 0.7738402960452623
            },
            {
              "id": 9,
              "value": 0.6238890029321338
            }
          ]
        },
        "output_format": "json",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "computation_analyzer",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T10:59:16.203164",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_51616200",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_51616200",
      "test_input": {
        "input_data": {
          "data": [
            0.7961484142484638,
            0.48911657345546633,
            0.2163898200425216,
            0.1914809247644973,
            0.3379267943741373
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "computation_calculator",
        "data_processing_validator",
        "computation_analyzer"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T10:59:16.577307",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_a9ea52c0",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_a9ea52c0",
      "test_input": {
        "input_data": {
          "data": [
            0.6500736592419092,
            0.6413683382204348,
            0.03663763364623707,
            0.679942572224725,
            0.5388700410692041
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T10:59:16.578250",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_8068849a",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_8068849a",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.22830293547583358
            },
            {
              "id": 1,
              "value": 0.8422664208670536
            },
            {
              "id": 2,
              "value": 0.13442123256086325
            },
            {
              "id": 3,
              "value": 0.40007686323680847
            },
            {
              "id": 4,
              "value": 0.837448623402958
            },
            {
              "id": 5,
              "value": 0.8095089203543265
            },
            {
              "id": 6,
              "value": 0.19848569900022006
            },
            {
              "id": 7,
              "value": 0.8566228675939102
            },
            {
              "id": 8,
              "value": 0.23022552609795566
            },
            {
              "id": 9,
              "value": 0.294542360228381
            }
          ]
        },
        "output_format": "json",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "computation_analyzer",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T10:59:16.202917",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_d172d554",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_d172d554",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.09957891968786836
            },
            {
              "id": 1,
              "value": 0.08466107932616584
            },
            {
              "id": 2,
              "value": 0.7196409617147812
            },
            {
              "id": 3,
              "value": 0.23308030669463442
            },
            {
              "id": 4,
              "value": 0.20562227778910158
            },
            {
              "id": 5,
              "value": 0.1322939631744231
            },
            {
              "id": 6,
              "value": 0.029829286458751714
            },
            {
              "id": 7,
              "value": 0.6970672386781434
            },
            {
              "id": 8,
              "value": 0.20533578394520924
            },
            {
              "id": 9,
              "value": 0.06469832402485831
            }
          ]
        },
        "output_format": "json",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T10:59:16.196000",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_3aa15149",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring data_processing_filter with involving filter data, Can handle large datasets efficiently by reducing the amount of data processed., Applies transformations to data based on filtering options. - Instance task_3aa15149",
      "test_input": {
        "input_data": {
          "data": [
            0.41970661201502246,
            0.17003378955526105,
            0.32110189794483446,
            0.30344768584133974,
            0.6757340378841519
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "data_processing_filter"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T10:59:13.651723",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_2124fd66",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_2124fd66",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.17042642334853597
            },
            {
              "id": 1,
              "value": 0.24654101986099397
            },
            {
              "id": 2,
              "value": 0.06004881119783345
            },
            {
              "id": 3,
              "value": 0.050590671027945455
            },
            {
              "id": 4,
              "value": 0.1945433340258481
            },
            {
              "id": 5,
              "value": 0.09606814551618803
            },
            {
              "id": 6,
              "value": 0.41309426547247396
            },
            {
              "id": 7,
              "value": 0.08259024491094558
            },
            {
              "id": 8,
              "value": 0.4371201171101917
            },
            {
              "id": 9,
              "value": 0.9600391561365461
            }
          ]
        },
        "output_format": "xml",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T10:59:16.198648",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_3359c900",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring data_processing_filter with involving filter data, Can handle large datasets efficiently by reducing the amount of data processed., Applies transformations to data based on filtering options. - Instance task_3359c900",
      "test_input": {
        "input_data": {
          "data": [
            0.37830920564396253,
            0.40318288477392306,
            0.6083581193954617,
            0.7631916176402583,
            0.1293473296415345
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "data_processing_filter"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T10:59:13.651707",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_10607a09",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_10607a09",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T10:59:16.207294",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_fcaa0095",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with involving connector, general specific connector capability, Applies transformations to data based on filtering options. - Instance task_fcaa0095",
      "test_input": {
        "data": {
          "values": [
            20,
            79,
            76,
            43,
            100
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "integration_connector",
        "data_processing_filter"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T10:59:13.652152",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_0aab4ffd",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with involving connector, general specific connector capability, Applies transformations to data based on filtering options. - Instance task_0aab4ffd",
      "test_input": {
        "data": {
          "values": [
            37,
            48,
            92,
            10,
            72
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "integration_connector",
        "data_processing_filter"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T10:59:13.652159",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_2fc65d67",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_2fc65d67",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T10:59:16.206483",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_5af0f399",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_5af0f399",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.11323089671960829
            },
            {
              "id": 1,
              "value": 0.4055568351542268
            },
            {
              "id": 2,
              "value": 0.10645143179860495
            },
            {
              "id": 3,
              "value": 0.31513338698064997
            },
            {
              "id": 4,
              "value": 0.941614061884061
            },
            {
              "id": 5,
              "value": 0.31862975727858767
            },
            {
              "id": 6,
              "value": 0.2927686896428644
            },
            {
              "id": 7,
              "value": 0.2874487879249584
            },
            {
              "id": 8,
              "value": 0.32752585791504707
            },
            {
              "id": 9,
              "value": 0.9194871702350442
            }
          ]
        },
        "output_format": "xml",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "computation_analyzer",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T10:59:16.199288",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_c3f77bee",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_c3f77bee",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T10:59:16.207445",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_f700ed7b",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_f700ed7b",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T10:59:16.207044",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_1b8424f6",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with involving connector, general specific connector capability, Applies transformations to data based on filtering options. - Instance task_1b8424f6",
      "test_input": {
        "data": {
          "values": [
            6,
            69,
            58,
            16,
            33
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "integration_connector",
        "data_processing_filter"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T10:59:13.652437",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_09dd22f6",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_09dd22f6",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T10:59:16.206474",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_ccca5415",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_ccca5415",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.4558271727117702
            },
            {
              "id": 1,
              "value": 0.7273681355095397
            },
            {
              "id": 2,
              "value": 0.7869736075238155
            },
            {
              "id": 3,
              "value": 0.8238425911948104
            },
            {
              "id": 4,
              "value": 0.4835500032297113
            },
            {
              "id": 5,
              "value": 0.7451041353524165
            },
            {
              "id": 6,
              "value": 0.16235796068915798
            },
            {
              "id": 7,
              "value": 0.7914085859049605
            },
            {
              "id": 8,
              "value": 0.453260464447766
            },
            {
              "id": 9,
              "value": 0.09198408554998316
            }
          ]
        },
        "output_format": "json",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T10:59:16.197170",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_67fe9f50",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with general specific cache capability, involving cache, general specific aggregator capability - Instance task_67fe9f50",
      "test_input": {
        "data": {
          "values": [
            29,
            91,
            22,
            52,
            81
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "utility_cache",
        "data_processing_aggregator"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T10:59:13.652174",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_f4bd579a",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_f4bd579a",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.632299613386724
            },
            {
              "id": 1,
              "value": 0.40851620196241467
            },
            {
              "id": 2,
              "value": 0.4816378627862544
            },
            {
              "id": 3,
              "value": 0.1235929310127365
            },
            {
              "id": 4,
              "value": 0.369522727542995
            },
            {
              "id": 5,
              "value": 0.6695748171335443
            },
            {
              "id": 6,
              "value": 0.36374514528922486
            },
            {
              "id": 7,
              "value": 0.8426848334048518
            },
            {
              "id": 8,
              "value": 0.34538411536084623
            },
            {
              "id": 9,
              "value": 0.8364875725909624
            }
          ]
        },
        "output_format": "csv",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T10:59:16.206200",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_251088bf",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with general specific cache capability, involving cache, general specific aggregator capability - Instance task_251088bf",
      "test_input": {
        "data": {
          "values": [
            7,
            65,
            42,
            69,
            76
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "utility_cache",
        "data_processing_aggregator"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T10:59:13.652009",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_0507d3f3",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_0507d3f3",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.7146055765017942
            },
            {
              "id": 1,
              "value": 0.656435930871213
            },
            {
              "id": 2,
              "value": 0.46411166449942687
            },
            {
              "id": 3,
              "value": 0.13534856859661337
            },
            {
              "id": 4,
              "value": 0.589754674265514
            },
            {
              "id": 5,
              "value": 0.32219603083443715
            },
            {
              "id": 6,
              "value": 0.6863438053940794
            },
            {
              "id": 7,
              "value": 0.8896297460928498
            },
            {
              "id": 8,
              "value": 0.980106433796432
            },
            {
              "id": 9,
              "value": 0.8703155933970917
            }
          ]
        },
        "output_format": "xml",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "computation_analyzer",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T10:59:16.205875",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_6ef37d25",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring file_operations_compressor with involving compressor, general specific compressor capability - Instance task_6ef37d25",
      "test_input": {
        "input_data": {
          "data": [
            0.8872322852678367,
            0.03694480394794675,
            0.14347907572736696,
            0.5489959056175168,
            0.6086720766932472
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "file_operations_compressor"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T10:59:13.651687",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_ba89b738",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with involving connector, general specific connector capability, Applies transformations to data based on filtering options. - Instance task_ba89b738",
      "test_input": {
        "data": {
          "values": [
            90,
            66,
            25,
            40,
            16
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "integration_connector",
        "data_processing_filter"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T10:59:13.652360",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_ae4e3bd9",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_ae4e3bd9",
      "test_input": {
        "input_data": {
          "data": [
            0.8235117076228764,
            0.48679594797581305,
            0.7494220246561286,
            0.3300584346031824,
            0.857962231186668
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "computation_calculator",
        "data_processing_validator",
        "computation_analyzer"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T10:59:16.574543",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_54fc6abd",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_54fc6abd",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T10:59:16.206893",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_020d3322",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_020d3322",
      "test_input": {
        "input_data": {
          "data": [
            0.7568031267291987,
            0.9933598977638232,
            0.7661101418709374,
            0.7066945582318552,
            0.039080369735397746
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "computation_calculator",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T10:59:16.580177",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_b8f9d11b",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring data_processing_filter with involving filter data, Can handle large datasets efficiently by reducing the amount of data processed., Applies transformations to data based on filtering options. - Instance task_b8f9d11b",
      "test_input": {
        "input_data": {
          "data": [
            0.7590242843819881,
            0.23674353410307492,
            0.8834253575100048,
            0.7842232466694277,
            0.5845319174120099
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "data_processing_filter"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T10:59:13.651908",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_01972b2a",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_01972b2a",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.3037036574532178
            },
            {
              "id": 1,
              "value": 0.1952497354213516
            },
            {
              "id": 2,
              "value": 0.8167804171769872
            },
            {
              "id": 3,
              "value": 0.8225141479533529
            },
            {
              "id": 4,
              "value": 0.1779842581410095
            },
            {
              "id": 5,
              "value": 0.617396480604429
            },
            {
              "id": 6,
              "value": 0.9670897505484862
            },
            {
              "id": 7,
              "value": 0.15165823272795165
            },
            {
              "id": 8,
              "value": 0.747971554788136
            },
            {
              "id": 9,
              "value": 0.5289284138765488
            }
          ]
        },
        "output_format": "json",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T10:59:16.201700",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_012f9e8a",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with involving connector, general specific connector capability, Applies transformations to data based on filtering options. - Instance task_012f9e8a",
      "test_input": {
        "data": {
          "values": [
            63,
            37,
            72,
            5,
            7
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "integration_connector",
        "data_processing_filter"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T10:59:13.652138",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_ff442cdb",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring file_operations_compressor with involving compressor, general specific compressor capability - Instance task_ff442cdb",
      "test_input": {
        "input_data": {
          "data": [
            0.4987669724910828,
            0.6823314283465999,
            0.16031533904970896,
            0.21831846703587032,
            0.36101312355892956
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "file_operations_compressor"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T10:59:13.651450",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_623984fd",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with general specific cache capability, involving cache, general specific aggregator capability - Instance task_623984fd",
      "test_input": {
        "data": {
          "values": [
            72,
            50,
            5,
            82,
            3
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "utility_cache",
        "data_processing_aggregator"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T10:59:13.651962",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_fbcfd7e0",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_fbcfd7e0",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.6139905923404071
            },
            {
              "id": 1,
              "value": 0.9877416611241083
            },
            {
              "id": 2,
              "value": 0.2037188872322223
            },
            {
              "id": 3,
              "value": 0.4111375138287221
            },
            {
              "id": 4,
              "value": 0.5272540181807164
            },
            {
              "id": 5,
              "value": 0.3698289086207267
            },
            {
              "id": 6,
              "value": 0.14666789800151592
            },
            {
              "id": 7,
              "value": 0.19131694583100656
            },
            {
              "id": 8,
              "value": 0.9896704015248655
            },
            {
              "id": 9,
              "value": 0.39422285420958036
            }
          ]
        },
        "output_format": "json",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T10:59:16.200576",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_76f77be4",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with involving connector, general specific connector capability, Applies transformations to data based on filtering options. - Instance task_76f77be4",
      "test_input": {
        "data": {
          "values": [
            62,
            100,
            82,
            84,
            17
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "integration_connector",
        "data_processing_filter"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T10:59:13.652430",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_d4d1d977",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_d4d1d977",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.16298012786780924
            },
            {
              "id": 1,
              "value": 0.48932759626543054
            },
            {
              "id": 2,
              "value": 0.9042092383975278
            },
            {
              "id": 3,
              "value": 0.38988458956026173
            },
            {
              "id": 4,
              "value": 0.5385734315620931
            },
            {
              "id": 5,
              "value": 0.5130010089542868
            },
            {
              "id": 6,
              "value": 0.4421101858003821
            },
            {
              "id": 7,
              "value": 0.5256209146288172
            },
            {
              "id": 8,
              "value": 0.6880650849362099
            },
            {
              "id": 9,
              "value": 0.0703278360194024
            }
          ]
        },
        "output_format": "csv",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T10:59:16.201621",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_bb7efa67",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with general specific cache capability, involving cache, general specific aggregator capability - Instance task_bb7efa67",
      "test_input": {
        "data": {
          "values": [
            52,
            41,
            58,
            78,
            96
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "utility_cache",
        "data_processing_aggregator"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T10:59:13.652202",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_e54805a4",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with Focus on monitoring network status, general specific helper capability, involving helper - Instance task_e54805a4",
      "test_input": {
        "data": {
          "values": [
            35,
            71,
            34,
            63,
            98
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "utility_helper",
        "network_monitor"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T10:59:13.652570",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_6db9d652",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_6db9d652",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T10:59:16.207028",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_cd829fd4",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with involving connector, general specific connector capability, Applies transformations to data based on filtering options. - Instance task_cd829fd4",
      "test_input": {
        "data": {
          "values": [
            90,
            86,
            77,
            1,
            94
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "integration_connector",
        "data_processing_filter"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T10:59:13.652318",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_2e8e295e",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_2e8e295e",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T10:59:16.207453",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_928ce439",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with involving connector, general specific connector capability, Applies transformations to data based on filtering options. - Instance task_928ce439",
      "test_input": {
        "data": {
          "values": [
            57,
            64,
            75,
            47,
            77
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "integration_connector",
        "data_processing_filter"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T10:59:13.652255",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_4832bd4a",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_4832bd4a",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T10:59:16.206953",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_651b1f47",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with Focus on monitoring network status, general specific helper capability, involving helper - Instance task_651b1f47",
      "test_input": {
        "data": {
          "values": [
            67,
            59,
            75,
            24,
            31
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "utility_helper",
        "network_monitor"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T10:59:13.652500",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_30d9d0f7",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_30d9d0f7",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T10:59:16.207269",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_29e36fc2",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_29e36fc2",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T10:59:16.207061",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_8fa2fbe7",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring data_processing_filter with involving filter data, Can handle large datasets efficiently by reducing the amount of data processed., Applies transformations to data based on filtering options. - Instance task_8fa2fbe7",
      "test_input": {
        "input_data": {
          "data": [
            0.6794664186851964,
            0.5398358676126007,
            0.8112217893735932,
            0.6748849351518164,
            0.6125580281216189
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "data_processing_filter"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T10:59:13.651843",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_dff12b04",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_dff12b04",
      "test_input": {
        "input_data": {
          "data": [
            0.03453312530384944,
            0.8875546387566077,
            0.2751606759047148,
            0.9804417167508349,
            0.4595858701787483
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T10:59:16.576692",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_10b3475e",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_10b3475e",
      "test_input": {
        "input_data": {
          "data": [
            0.3492475749543056,
            0.5731490041456303,
            0.8615178081324789,
            0.9668447200369374,
            0.5854757092140458
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "computation_calculator",
        "data_processing_validator",
        "computation_analyzer",
        "network_poster"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T10:59:16.575270",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_78079c7a",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with general specific cache capability, involving cache, general specific aggregator capability - Instance task_78079c7a",
      "test_input": {
        "data": {
          "values": [
            83,
            86,
            45,
            37,
            84
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "utility_cache",
        "data_processing_aggregator"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T10:59:13.652095",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_8f6d2835",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring data_processing_filter with involving filter data, Can handle large datasets efficiently by reducing the amount of data processed., Applies transformations to data based on filtering options. - Instance task_8f6d2835",
      "test_input": {
        "input_data": {
          "data": [
            0.12200368811146689,
            0.07042251374653452,
            0.6115683635376081,
            0.19931034467910969,
            0.2419247839010309
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "data_processing_filter"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T10:59:13.651410",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_4c15d0a8",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_4c15d0a8",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.7624973917647857
            },
            {
              "id": 1,
              "value": 0.6140629787383259
            },
            {
              "id": 2,
              "value": 0.6169159921933064
            },
            {
              "id": 3,
              "value": 0.7705119006506918
            },
            {
              "id": 4,
              "value": 0.5358207127080163
            },
            {
              "id": 5,
              "value": 0.34162093570610585
            },
            {
              "id": 6,
              "value": 0.9210719151866352
            },
            {
              "id": 7,
              "value": 0.7547360026175106
            },
            {
              "id": 8,
              "value": 0.9741068655097256
            },
            {
              "id": 9,
              "value": 0.5436421320557127
            }
          ]
        },
        "output_format": "xml",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "computation_analyzer",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T10:59:16.200769",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_b8fa058b",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_b8fa058b",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T10:59:16.206854",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_4c5da819",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_4c5da819",
      "test_input": {
        "input_data": {
          "data": [
            0.08013166395901439,
            0.6489396478164238,
            0.6991771474060295,
            0.5799103185812442,
            0.72705397494527
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "computation_calculator",
        "data_processing_validator",
        "computation_analyzer",
        "network_poster"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T10:59:16.580481",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_bdd44097",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_bdd44097",
      "test_input": {
        "input_data": {
          "data": [
            0.6855410007472255,
            0.055576775360082875,
            0.33971752877847816,
            0.7014085334164324,
            0.6185362082165998
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T10:59:16.584050",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_d354e8f0",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_d354e8f0",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.2905516668340623
            },
            {
              "id": 1,
              "value": 0.4186097978488357
            },
            {
              "id": 2,
              "value": 0.9605331371536245
            },
            {
              "id": 3,
              "value": 0.4606949737698084
            },
            {
              "id": 4,
              "value": 0.882184729478055
            },
            {
              "id": 5,
              "value": 0.08974217581043464
            },
            {
              "id": 6,
              "value": 0.8789660890906892
            },
            {
              "id": 7,
              "value": 0.41032513153288197
            },
            {
              "id": 8,
              "value": 0.24292507329089663
            },
            {
              "id": 9,
              "value": 0.5268908156612794
            }
          ]
        },
        "output_format": "csv",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "computation_analyzer",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T10:59:16.196774",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_f0ea26ce",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with general specific cache capability, involving cache, general specific aggregator capability - Instance task_f0ea26ce",
      "test_input": {
        "data": {
          "values": [
            71,
            15,
            98,
            75,
            8
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "utility_cache",
        "data_processing_aggregator"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T10:59:13.651969",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_0c67b1f1",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring data_processing_transformer, integration_mapper, utility_logger with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_0c67b1f1",
      "test_input": {
        "input_data": {
          "data": [
            0.3930512065459699,
            0.5783465467911051,
            0.2022532794358598,
            0.7219426661133685,
            0.10214314582334905
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "integration_mapper",
        "utility_logger"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T10:59:13.651596",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_b48d2344",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_b48d2344",
      "test_input": {
        "input_data": {
          "data": [
            0.8729238541663753,
            0.408454942175553,
            0.34685699384978996,
            0.6133053463378592,
            0.7651778127394114
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T10:59:16.581279",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_5e77f638",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_5e77f638",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T10:59:16.206704",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_bfe15f30",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with Focus on monitoring network status, general specific helper capability, involving helper - Instance task_bfe15f30",
      "test_input": {
        "data": {
          "values": [
            85,
            58,
            90,
            78,
            12
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "utility_helper",
        "network_monitor"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T10:59:13.652040",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_7db013ff",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_7db013ff",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T10:59:16.206509",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_617c498f",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_617c498f",
      "test_input": {
        "input_data": {
          "data": [
            0.24687760764322364,
            0.5831431407709557,
            0.3354414344198796,
            0.09452569776640707,
            0.4617917558714585
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "computation_calculator",
        "data_processing_validator",
        "computation_analyzer"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T10:59:16.574087",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_6bdcfeb3",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring data_processing_filter with involving filter data, Can handle large datasets efficiently by reducing the amount of data processed., Applies transformations to data based on filtering options. - Instance task_6bdcfeb3",
      "test_input": {
        "input_data": {
          "data": [
            0.7890751149551917,
            0.5806274300020816,
            0.9611589023309918,
            0.3887916911781233,
            0.1202182816088746
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "data_processing_filter"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T10:59:13.651384",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_61cf8b92",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_61cf8b92",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.35308845773900044
            },
            {
              "id": 1,
              "value": 0.2534117636026221
            },
            {
              "id": 2,
              "value": 0.036963943508088404
            },
            {
              "id": 3,
              "value": 0.6597808192576384
            },
            {
              "id": 4,
              "value": 0.8261695248946819
            },
            {
              "id": 5,
              "value": 0.20446405712768323
            },
            {
              "id": 6,
              "value": 0.4395550045215314
            },
            {
              "id": 7,
              "value": 0.7206418545716603
            },
            {
              "id": 8,
              "value": 0.04231893521159791
            },
            {
              "id": 9,
              "value": 0.9900455613594129
            }
          ]
        },
        "output_format": "csv",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T10:59:16.201087",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_881230eb",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring file_operations_compressor with involving compressor, general specific compressor capability - Instance task_881230eb",
      "test_input": {
        "input_data": {
          "data": [
            0.3036226056858037,
            0.4727951271920223,
            0.4717493833402173,
            0.16530572290664214,
            0.14525885592691712
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "file_operations_compressor"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T10:59:13.651734",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_45c5dbe6",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_45c5dbe6",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.20145356572385587
            },
            {
              "id": 1,
              "value": 0.3303334897043476
            },
            {
              "id": 2,
              "value": 0.6896100703760493
            },
            {
              "id": 3,
              "value": 0.4879939030940127
            },
            {
              "id": 4,
              "value": 0.4859284622939182
            },
            {
              "id": 5,
              "value": 0.7335568255281746
            },
            {
              "id": 6,
              "value": 0.4267135073620577
            },
            {
              "id": 7,
              "value": 0.7512638643095961
            },
            {
              "id": 8,
              "value": 0.17407044296386298
            },
            {
              "id": 9,
              "value": 0.5508283024353147
            }
          ]
        },
        "output_format": "json",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T10:59:16.197676",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_bc493118",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with Focus on monitoring network status, general specific helper capability, involving helper - Instance task_bc493118",
      "test_input": {
        "data": {
          "values": [
            58,
            93,
            45,
            99,
            6
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "utility_helper",
        "network_monitor"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T10:59:13.652675",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_719c211a",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_719c211a",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T10:59:16.206885",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_2af5aee8",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_2af5aee8",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T10:59:16.206536",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_f05fa98c",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_f05fa98c",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.9949010418108042
            },
            {
              "id": 1,
              "value": 0.8589449245868408
            },
            {
              "id": 2,
              "value": 0.7233045727999814
            },
            {
              "id": 3,
              "value": 0.7223434200333121
            },
            {
              "id": 4,
              "value": 0.36385637645989466
            },
            {
              "id": 5,
              "value": 0.7249357442084187
            },
            {
              "id": 6,
              "value": 0.8343893890252817
            },
            {
              "id": 7,
              "value": 0.7178875271187224
            },
            {
              "id": 8,
              "value": 0.6959098706162395
            },
            {
              "id": 9,
              "value": 0.9298455275252884
            }
          ]
        },
        "output_format": "json",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T10:59:16.198772",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_cc84d716",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with involving connector, general specific connector capability, Applies transformations to data based on filtering options. - Instance task_cc84d716",
      "test_input": {
        "data": {
          "values": [
            27,
            65,
            95,
            32,
            81
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "integration_connector",
        "data_processing_filter"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T10:59:13.652528",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_eb939b71",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_eb939b71",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T10:59:16.207016",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_8403a300",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_8403a300",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.3765669626245338
            },
            {
              "id": 1,
              "value": 0.35953061673241893
            },
            {
              "id": 2,
              "value": 0.4858589837855587
            },
            {
              "id": 3,
              "value": 0.5684231386848957
            },
            {
              "id": 4,
              "value": 0.39562057892655167
            },
            {
              "id": 5,
              "value": 0.28206031682565513
            },
            {
              "id": 6,
              "value": 0.6229230303906417
            },
            {
              "id": 7,
              "value": 0.5709788576953629
            },
            {
              "id": 8,
              "value": 0.432011519112964
            },
            {
              "id": 9,
              "value": 0.12301639934549435
            }
          ]
        },
        "output_format": "csv",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "computation_analyzer",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T10:59:16.196966",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_d2199cef",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_d2199cef",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.21460598313694246
            },
            {
              "id": 1,
              "value": 0.3483439783280009
            },
            {
              "id": 2,
              "value": 0.1919003278006356
            },
            {
              "id": 3,
              "value": 0.019901757140449727
            },
            {
              "id": 4,
              "value": 0.10236338607400386
            },
            {
              "id": 5,
              "value": 0.12507684036798827
            },
            {
              "id": 6,
              "value": 0.7740031914563956
            },
            {
              "id": 7,
              "value": 0.5959357898889
            },
            {
              "id": 8,
              "value": 0.5941946342092403
            },
            {
              "id": 9,
              "value": 0.8649039328115244
            }
          ]
        },
        "output_format": "xml",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T10:59:16.196201",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_6b2fd753",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_6b2fd753",
      "test_input": {
        "input_data": {
          "data": [
            0.9034413166462444,
            0.6668329833674043,
            0.04771309808900548,
            0.989694816001367,
            0.36802752225625435
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "computation_calculator",
        "data_processing_validator",
        "computation_analyzer",
        "network_poster"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T10:59:16.583298",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_26b3f601",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with involving connector, general specific connector capability, Applies transformations to data based on filtering options. - Instance task_26b3f601",
      "test_input": {
        "data": {
          "values": [
            89,
            32,
            47,
            95,
            72
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "integration_connector",
        "data_processing_filter"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T10:59:13.652521",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_250f1055",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_250f1055",
      "test_input": {
        "input_data": {
          "data": [
            0.72062386198476,
            0.45205244244364373,
            0.43189171170036855,
            0.19450277303149244,
            0.44726845944091786
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T10:59:16.573719",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_9205c57b",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_9205c57b",
      "test_input": {
        "input_data": {
          "data": [
            0.8367786346659741,
            0.06453582785141576,
            0.08514495226059282,
            0.4903932022444165,
            0.6635320899518306
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "computation_calculator",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T10:59:16.574851",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_532e77a9",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with involving connector, general specific connector capability, Applies transformations to data based on filtering options. - Instance task_532e77a9",
      "test_input": {
        "data": {
          "values": [
            63,
            10,
            83,
            76,
            5
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "integration_connector",
        "data_processing_filter"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T10:59:13.652591",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_34f59e31",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_34f59e31",
      "test_input": {
        "input_data": {
          "data": [
            0.7322940547247495,
            0.41271017860547254,
            0.2662323404167527,
            0.7136376898245934,
            0.13888740722574056
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "computation_calculator",
        "data_processing_validator",
        "computation_analyzer",
        "network_poster"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T10:59:16.582484",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_7874d433",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with Focus on monitoring network status, general specific helper capability, involving helper - Instance task_7874d433",
      "test_input": {
        "data": {
          "values": [
            58,
            32,
            24,
            100,
            9
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "utility_helper",
        "network_monitor"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T10:59:13.652102",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_458cef27",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_458cef27",
      "test_input": {
        "input_data": {
          "data": [
            0.5826689417744484,
            0.29180579829821074,
            0.7272004029852641,
            0.1258614541275871,
            0.5344698032808285
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "computation_calculator",
        "data_processing_validator",
        "computation_analyzer",
        "network_poster"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T10:59:16.576173",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_e8a95807",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_e8a95807",
      "test_input": {
        "input_data": {
          "data": [
            0.8402452161151152,
            0.9649233160023758,
            0.4005883028699082,
            0.930718545172804,
            0.37319182767566095
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "computation_calculator",
        "data_processing_validator",
        "computation_analyzer"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T10:59:16.577699",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_9301376a",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_9301376a",
      "test_input": {
        "input_data": {
          "data": [
            0.5451310028228518,
            0.2999786765324476,
            0.8590603769996261,
            0.520358167837203,
            0.24542211838942385
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T10:59:16.575363",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_7b92e095",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring data_processing_transformer, integration_mapper, utility_logger with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_7b92e095",
      "test_input": {
        "input_data": {
          "data": [
            0.6978212161440059,
            0.9280113046553877,
            0.9220037537434803,
            0.1634317232843122,
            0.12491824548152453
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "integration_mapper",
        "utility_logger"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T10:59:13.651489",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_d520f8c9",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring data_processing_transformer, integration_mapper, utility_logger with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_d520f8c9",
      "test_input": {
        "input_data": {
          "data": [
            0.49184019420081526,
            0.16952839893645688,
            0.4916476111767729,
            0.44596405807895867,
            0.3834095066921277
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "integration_mapper",
        "utility_logger"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T10:59:13.651664",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_1b8e5f43",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring data_processing_transformer, integration_mapper, utility_logger with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_1b8e5f43",
      "test_input": {
        "input_data": {
          "data": [
            0.46663980411334716,
            0.05984918526185068,
            0.2730888324510048,
            0.03657769286573931,
            0.15141473337959388
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "integration_mapper",
        "utility_logger"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T10:59:13.651396",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_a10214e3",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring file_operations_compressor with involving compressor, general specific compressor capability - Instance task_a10214e3",
      "test_input": {
        "input_data": {
          "data": [
            0.6479954090294439,
            0.9386787508259218,
            0.0043723147793339745,
            0.5654375724435147,
            0.782119782066642
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "file_operations_compressor"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T10:59:13.651494",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_be8576f0",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_be8576f0",
      "test_input": {
        "input_data": {
          "data": [
            0.10794626130919438,
            0.06081216281820723,
            0.8963724332772566,
            0.9787906571636252,
            0.1847335094793573
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T10:59:16.579858",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_2335231b",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with Focus on monitoring network status, general specific helper capability, involving helper - Instance task_2335231b",
      "test_input": {
        "data": {
          "values": [
            88,
            19,
            70,
            10,
            86
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "utility_helper",
        "network_monitor"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T10:59:13.652023",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_16fc040f",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring data_processing_filter with involving filter data, Can handle large datasets efficiently by reducing the amount of data processed., Applies transformations to data based on filtering options. - Instance task_16fc040f",
      "test_input": {
        "input_data": {
          "data": [
            0.5375014280713314,
            0.3731723430668997,
            0.9235524513559178,
            0.8013841248790129,
            0.7437388517192389
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "data_processing_filter"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T10:59:13.651484",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_ed1a3b45",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_ed1a3b45",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.6076966536212289
            },
            {
              "id": 1,
              "value": 0.523808176909406
            },
            {
              "id": 2,
              "value": 0.29497731256661486
            },
            {
              "id": 3,
              "value": 0.4070470337225549
            },
            {
              "id": 4,
              "value": 0.8203957790604189
            },
            {
              "id": 5,
              "value": 0.5881395579232848
            },
            {
              "id": 6,
              "value": 0.964751975140404
            },
            {
              "id": 7,
              "value": 0.54005576627078
            },
            {
              "id": 8,
              "value": 0.2658274260705289
            },
            {
              "id": 9,
              "value": 0.3758448243835776
            }
          ]
        },
        "output_format": "csv",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T10:59:16.198510",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_5b2fe349",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_5b2fe349",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.07145918559515785
            },
            {
              "id": 1,
              "value": 0.8222843405539703
            },
            {
              "id": 2,
              "value": 0.7161154854241678
            },
            {
              "id": 3,
              "value": 0.3745651688558097
            },
            {
              "id": 4,
              "value": 0.7905283681795835
            },
            {
              "id": 5,
              "value": 0.6127299255066577
            },
            {
              "id": 6,
              "value": 0.5712576118171218
            },
            {
              "id": 7,
              "value": 0.41847705253858536
            },
            {
              "id": 8,
              "value": 0.8390492495758981
            },
            {
              "id": 9,
              "value": 0.3029382125019995
            }
          ]
        },
        "output_format": "csv",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T10:59:16.196855",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_d141db93",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_d141db93",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T10:59:16.206614",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_37ec5eba",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_37ec5eba",
      "test_input": {
        "input_data": {
          "data": [
            0.09807657861514019,
            0.7453988348605349,
            0.5327743998004747,
            0.2814129115501607,
            0.33839564797911725
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T10:59:16.572918",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_00f10a9c",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with involving connector, general specific connector capability, Applies transformations to data based on filtering options. - Instance task_00f10a9c",
      "test_input": {
        "data": {
          "values": [
            96,
            14,
            30,
            16,
            33
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "integration_connector",
        "data_processing_filter"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T10:59:13.652662",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_fa21861b",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_fa21861b",
      "test_input": {
        "input_data": {
          "data": [
            0.37029902348698274,
            0.2681391751562937,
            0.6969712647676558,
            0.8252548469118157,
            0.22801622676883926
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T10:59:16.573506",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_efda5bd6",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_efda5bd6",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.7755764265901732
            },
            {
              "id": 1,
              "value": 0.27823659829453207
            },
            {
              "id": 2,
              "value": 0.38964952740176206
            },
            {
              "id": 3,
              "value": 0.6219940243017387
            },
            {
              "id": 4,
              "value": 0.34216493587053864
            },
            {
              "id": 5,
              "value": 0.8811918690774672
            },
            {
              "id": 6,
              "value": 0.3360232171303721
            },
            {
              "id": 7,
              "value": 0.7920515670378945
            },
            {
              "id": 8,
              "value": 0.23684503193265494
            },
            {
              "id": 9,
              "value": 0.5800455052382234
            }
          ]
        },
        "output_format": "json",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "computation_analyzer",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T10:59:16.196120",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_fe82dfca",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_fe82dfca",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.6551827530856773
            },
            {
              "id": 1,
              "value": 0.5276595625976102
            },
            {
              "id": 2,
              "value": 0.5007852431215171
            },
            {
              "id": 3,
              "value": 0.06622769604975987
            },
            {
              "id": 4,
              "value": 0.6990397879565975
            },
            {
              "id": 5,
              "value": 0.2891041291644991
            },
            {
              "id": 6,
              "value": 0.8822053225430609
            },
            {
              "id": 7,
              "value": 0.8583640910093278
            },
            {
              "id": 8,
              "value": 0.04410378489909916
            },
            {
              "id": 9,
              "value": 0.7862397484690667
            }
          ]
        },
        "output_format": "xml",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "computation_analyzer",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T10:59:16.201380",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_b8d5b333",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_b8d5b333",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T10:59:16.207555",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_1e171b30",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_1e171b30",
      "test_input": {
        "input_data": {
          "data": [
            0.6932861579934632,
            0.1850263537672142,
            0.026306715715961215,
            0.9735171946312937,
            0.7540088136677388
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "computation_calculator",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T10:59:16.399324",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_f3fc658b",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_f3fc658b",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.4863364486559202
            },
            {
              "id": 1,
              "value": 0.3935431276149882
            },
            {
              "id": 2,
              "value": 0.8347826917769059
            },
            {
              "id": 3,
              "value": 0.6857757941279455
            },
            {
              "id": 4,
              "value": 0.9508031825245457
            },
            {
              "id": 5,
              "value": 0.7947285921894433
            },
            {
              "id": 6,
              "value": 0.7422414971841758
            },
            {
              "id": 7,
              "value": 0.8705237852751014
            },
            {
              "id": 8,
              "value": 0.49679413078653545
            },
            {
              "id": 9,
              "value": 0.8040310073160113
            }
          ]
        },
        "output_format": "json",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T10:59:16.200658",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_63cc6de1",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_63cc6de1",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.16461354176830412
            },
            {
              "id": 1,
              "value": 0.7394490048706193
            },
            {
              "id": 2,
              "value": 0.599045525191768
            },
            {
              "id": 3,
              "value": 0.04201547008571205
            },
            {
              "id": 4,
              "value": 0.9310370467561463
            },
            {
              "id": 5,
              "value": 0.8977982701023254
            },
            {
              "id": 6,
              "value": 0.8732379552620885
            },
            {
              "id": 7,
              "value": 0.7805618485288621
            },
            {
              "id": 8,
              "value": 0.10120099614469813
            },
            {
              "id": 9,
              "value": 0.2978238991221164
            }
          ]
        },
        "output_format": "json",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T10:59:16.202273",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_7e8052d3",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_7e8052d3",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T10:59:16.207392",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_a2e35b0a",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_a2e35b0a",
      "test_input": {
        "input_data": {
          "data": [
            0.5059901498044433,
            0.44513800869098685,
            0.9658089810033204,
            0.33312319008279256,
            0.8545668192526185
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T10:59:16.575881",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_01510997",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_01510997",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T10:59:16.206970",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_1fda6a9f",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with Focus on monitoring network status, general specific helper capability, involving helper - Instance task_1fda6a9f",
      "test_input": {
        "data": {
          "values": [
            13,
            53,
            91,
            50,
            82
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "utility_helper",
        "network_monitor"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T10:59:13.652123",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_a35f415c",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_a35f415c",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.18236008082710264
            },
            {
              "id": 1,
              "value": 0.6640085872080055
            },
            {
              "id": 2,
              "value": 0.2759065940171793
            },
            {
              "id": 3,
              "value": 0.6808494827056745
            },
            {
              "id": 4,
              "value": 0.48041644451928067
            },
            {
              "id": 5,
              "value": 0.2629815257558955
            },
            {
              "id": 6,
              "value": 0.9358790837408782
            },
            {
              "id": 7,
              "value": 0.5600105112615151
            },
            {
              "id": 8,
              "value": 0.7159650344088543
            },
            {
              "id": 9,
              "value": 0.19048241612300076
            }
          ]
        },
        "output_format": "xml",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T10:59:16.198274",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_a4bef284",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_a4bef284",
      "test_input": {
        "input_data": {
          "data": [
            0.35206653218666006,
            0.28291064865821725,
            0.71126342755577,
            0.798696721606616,
            0.7859075585081925
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "computation_calculator",
        "data_processing_validator",
        "computation_analyzer",
        "network_poster"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T10:59:16.572191",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_ba4d102e",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring file_operations_compressor with involving compressor, general specific compressor capability - Instance task_ba4d102e",
      "test_input": {
        "input_data": {
          "data": [
            0.3629505815143208,
            0.9935308318537723,
            0.30228197977214666,
            0.6951867162797586,
            0.8755717740320133
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "file_operations_compressor"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T10:59:13.651333",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_42c7e3a5",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_42c7e3a5",
      "test_input": {
        "input_data": {
          "data": [
            0.272835315473812,
            0.28078041738087267,
            0.31277329630203643,
            0.5680223661344285,
            0.6706870979262717
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "computation_calculator",
        "data_processing_validator",
        "computation_analyzer",
        "network_poster"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T10:59:16.576952",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_884c306e",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_884c306e",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T10:59:16.206529",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_4db3c413",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_4db3c413",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T10:59:16.206915",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_1032b1e0",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_1032b1e0",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.8542798942965268
            },
            {
              "id": 1,
              "value": 0.2304055025317827
            },
            {
              "id": 2,
              "value": 0.7936751275578096
            },
            {
              "id": 3,
              "value": 0.6329262615223433
            },
            {
              "id": 4,
              "value": 0.3534945548726779
            },
            {
              "id": 5,
              "value": 0.6799559446116925
            },
            {
              "id": 6,
              "value": 0.5613251111663066
            },
            {
              "id": 7,
              "value": 0.14668449129451133
            },
            {
              "id": 8,
              "value": 0.8762274649257583
            },
            {
              "id": 9,
              "value": 0.367734636931325
            }
          ]
        },
        "output_format": "csv",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T10:59:16.198079",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_950f0059",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_950f0059",
      "test_input": {
        "input_data": {
          "data": [
            0.9025555791985377,
            0.42941783005501677,
            0.117442845911647,
            0.6878740883033195,
            0.27563038610383406
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "computation_calculator",
        "data_processing_validator",
        "computation_analyzer",
        "network_poster"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T10:59:16.583942",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_925d7d3b",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_925d7d3b",
      "test_input": {
        "input_data": {
          "data": [
            0.36332167572773444,
            0.7399194914975639,
            0.4303356696846241,
            0.9842821750922232,
            0.46371560194657424
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "computation_calculator",
        "data_processing_validator",
        "computation_analyzer",
        "network_poster"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T10:59:16.575011",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_888fb686",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_888fb686",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T10:59:16.206831",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_57614cfd",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring data_processing_filter with involving filter data, Can handle large datasets efficiently by reducing the amount of data processed., Applies transformations to data based on filtering options. - Instance task_57614cfd",
      "test_input": {
        "input_data": {
          "data": [
            0.8495541499268633,
            0.6293728451379882,
            0.0583404634782303,
            0.5665016025867902,
            0.43275784423587305
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "data_processing_filter"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T10:59:13.651806",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_e061f953",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with Focus on monitoring network status, general specific helper capability, involving helper - Instance task_e061f953",
      "test_input": {
        "data": {
          "values": [
            25,
            68,
            80,
            80,
            31
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "utility_helper",
        "network_monitor"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T10:59:13.652478",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_fda95f35",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_fda95f35",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.09067836880172608
            },
            {
              "id": 1,
              "value": 0.6463919555002372
            },
            {
              "id": 2,
              "value": 0.8185688518354151
            },
            {
              "id": 3,
              "value": 0.3006585522288263
            },
            {
              "id": 4,
              "value": 0.4933085029602602
            },
            {
              "id": 5,
              "value": 0.1909433043961184
            },
            {
              "id": 6,
              "value": 0.3035408414907863
            },
            {
              "id": 7,
              "value": 0.654734798998776
            },
            {
              "id": 8,
              "value": 0.30775084244293227
            },
            {
              "id": 9,
              "value": 0.6386963900577305
            }
          ]
        },
        "output_format": "csv",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T10:59:16.203242",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_cefdd318",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with involving connector, general specific connector capability, Applies transformations to data based on filtering options. - Instance task_cefdd318",
      "test_input": {
        "data": {
          "values": [
            76,
            53,
            31,
            51,
            91
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "integration_connector",
        "data_processing_filter"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T10:59:13.652416",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_dea9cd9b",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_dea9cd9b",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T10:59:16.206560",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_bbeeceac",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring data_processing_transformer, integration_mapper, utility_logger with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_bbeeceac",
      "test_input": {
        "input_data": {
          "data": [
            0.40379130719085854,
            0.09868851502225229,
            0.09619699396618542,
            0.2100450675731127,
            0.8526242472159211
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "integration_mapper",
        "utility_logger"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T10:59:13.651500",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_a1d4714f",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with Focus on monitoring network status, general specific helper capability, involving helper - Instance task_a1d4714f",
      "test_input": {
        "data": {
          "values": [
            75,
            96,
            87,
            80,
            72
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "utility_helper",
        "network_monitor"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T10:59:13.652332",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_bd3b3d97",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring file_operations_compressor with involving compressor, general specific compressor capability - Instance task_bd3b3d97",
      "test_input": {
        "input_data": {
          "data": [
            0.8727007798943642,
            0.6770108834965444,
            0.8013488026588833,
            0.4489279714286152,
            0.7496761215675101
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "file_operations_compressor"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T10:59:13.651635",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_ce366970",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with general specific cache capability, involving cache, general specific aggregator capability - Instance task_ce366970",
      "test_input": {
        "data": {
          "values": [
            2,
            64,
            17,
            50,
            21
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "utility_cache",
        "data_processing_aggregator"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T10:59:13.652689",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_9e82c12e",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_9e82c12e",
      "test_input": {
        "input_data": {
          "data": [
            0.4063587173115132,
            0.9232879846685225,
            0.5263824172526123,
            0.04347595618595035,
            0.03464526960833958
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T10:59:16.580349",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_b8aa3055",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_b8aa3055",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T10:59:16.206553",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_faddeb37",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_faddeb37",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.4500644715861434
            },
            {
              "id": 1,
              "value": 0.9596002211675747
            },
            {
              "id": 2,
              "value": 0.7281279960513549
            },
            {
              "id": 3,
              "value": 0.7947576382227486
            },
            {
              "id": 4,
              "value": 0.0746195863216631
            },
            {
              "id": 5,
              "value": 0.9956644094440401
            },
            {
              "id": 6,
              "value": 0.5565755479747823
            },
            {
              "id": 7,
              "value": 0.5777310396466326
            },
            {
              "id": 8,
              "value": 0.2759555005012765
            },
            {
              "id": 9,
              "value": 0.7823510966728746
            }
          ]
        },
        "output_format": "xml",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "computation_analyzer",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T10:59:16.195384",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_16d41c8d",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_16d41c8d",
      "test_input": {
        "input_data": {
          "data": [
            0.49842277841646054,
            0.2657167561408327,
            0.15765830022366867,
            0.21264449102910454,
            0.8724540719686329
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "computation_calculator",
        "data_processing_validator",
        "computation_analyzer"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T10:59:16.399183",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_d4bfb5ae",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with general specific cache capability, involving cache, general specific aggregator capability - Instance task_d4bfb5ae",
      "test_input": {
        "data": {
          "values": [
            45,
            56,
            14,
            26,
            48
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "utility_cache",
        "data_processing_aggregator"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T10:59:13.651954",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_8e194c7a",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with Focus on monitoring network status, general specific helper capability, involving helper - Instance task_8e194c7a",
      "test_input": {
        "data": {
          "values": [
            47,
            84,
            19,
            33,
            40
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "utility_helper",
        "network_monitor"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T10:59:13.652612",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_d9b25e07",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_d9b25e07",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.7702824475418422
            },
            {
              "id": 1,
              "value": 0.7999413757548655
            },
            {
              "id": 2,
              "value": 0.2912867566596462
            },
            {
              "id": 3,
              "value": 0.395484115507719
            },
            {
              "id": 4,
              "value": 0.11648046780572918
            },
            {
              "id": 5,
              "value": 0.43362416998570597
            },
            {
              "id": 6,
              "value": 0.36152835127012306
            },
            {
              "id": 7,
              "value": 0.21304483263970175
            },
            {
              "id": 8,
              "value": 0.1272263885513406
            },
            {
              "id": 9,
              "value": 0.49402131128547844
            }
          ]
        },
        "output_format": "xml",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T10:59:16.198880",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_2c9b50f6",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring data_processing_transformer, integration_mapper, utility_logger with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_2c9b50f6",
      "test_input": {
        "input_data": {
          "data": [
            0.029121700637754766,
            0.012796769609053293,
            0.02160985007923455,
            0.5595185473443586,
            0.06019681290750856
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "integration_mapper",
        "utility_logger"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T10:59:13.651456",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_13c69c7a",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_13c69c7a",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T10:59:16.206806",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_b2471d78",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_b2471d78",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.19447686576134315
            },
            {
              "id": 1,
              "value": 0.27637758672022594
            },
            {
              "id": 2,
              "value": 0.3567300628033969
            },
            {
              "id": 3,
              "value": 0.728079668334021
            },
            {
              "id": 4,
              "value": 0.08718182832834387
            },
            {
              "id": 5,
              "value": 0.9902087793016614
            },
            {
              "id": 6,
              "value": 0.8100268454748728
            },
            {
              "id": 7,
              "value": 0.6897176722410802
            },
            {
              "id": 8,
              "value": 0.7346279674276427
            },
            {
              "id": 9,
              "value": 0.5871696770913359
            }
          ]
        },
        "output_format": "csv",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "computation_analyzer",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T10:59:16.204286",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_da623ffa",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with involving connector, general specific connector capability, Applies transformations to data based on filtering options. - Instance task_da623ffa",
      "test_input": {
        "data": {
          "values": [
            23,
            83,
            83,
            86,
            38
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "integration_connector",
        "data_processing_filter"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T10:59:13.652375",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_4d79282a",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_4d79282a",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.4721206997399956
            },
            {
              "id": 1,
              "value": 0.0402234408721408
            },
            {
              "id": 2,
              "value": 0.4275161210061328
            },
            {
              "id": 3,
              "value": 0.939948075513326
            },
            {
              "id": 4,
              "value": 0.5594274403025955
            },
            {
              "id": 5,
              "value": 0.7765690064208232
            },
            {
              "id": 6,
              "value": 0.36613763082802575
            },
            {
              "id": 7,
              "value": 0.13978312013490313
            },
            {
              "id": 8,
              "value": 0.898127997153399
            },
            {
              "id": 9,
              "value": 0.47998979591344604
            }
          ]
        },
        "output_format": "json",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "computation_analyzer",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T10:59:16.203920",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_6c0ab4b4",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_6c0ab4b4",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.4596698032354072
            },
            {
              "id": 1,
              "value": 0.06172865145094897
            },
            {
              "id": 2,
              "value": 0.554745650678762
            },
            {
              "id": 3,
              "value": 0.6830886625059961
            },
            {
              "id": 4,
              "value": 0.8744159650522543
            },
            {
              "id": 5,
              "value": 0.014014635141092469
            },
            {
              "id": 6,
              "value": 0.8288758152796167
            },
            {
              "id": 7,
              "value": 0.5860086915763869
            },
            {
              "id": 8,
              "value": 0.08954176601465214
            },
            {
              "id": 9,
              "value": 0.6704406010860161
            }
          ]
        },
        "output_format": "xml",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "computation_analyzer",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T10:59:16.203023",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_e9d6d72d",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_e9d6d72d",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T10:59:16.206382",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_9f92533f",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring file_operations_compressor with involving compressor, general specific compressor capability - Instance task_9f92533f",
      "test_input": {
        "input_data": {
          "data": [
            0.7001288860419833,
            0.4298800032590394,
            0.656996049617785,
            0.12304088019192261,
            0.9247790766222004
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "file_operations_compressor"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T10:59:13.651811",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_5151c401",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_5151c401",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.743802618343614
            },
            {
              "id": 1,
              "value": 0.44280069330437455
            },
            {
              "id": 2,
              "value": 0.9665646528344805
            },
            {
              "id": 3,
              "value": 0.1138321034481029
            },
            {
              "id": 4,
              "value": 0.1883246436589915
            },
            {
              "id": 5,
              "value": 0.5966881383862437
            },
            {
              "id": 6,
              "value": 0.8753234945030995
            },
            {
              "id": 7,
              "value": 0.9203363465242321
            },
            {
              "id": 8,
              "value": 0.14306414339545614
            },
            {
              "id": 9,
              "value": 0.47703410217006514
            }
          ]
        },
        "output_format": "json",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "computation_analyzer",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T10:59:16.202400",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_329dc281",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_329dc281",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.7161542535108991
            },
            {
              "id": 1,
              "value": 0.12033016480978331
            },
            {
              "id": 2,
              "value": 0.6727616477313949
            },
            {
              "id": 3,
              "value": 0.327145372149768
            },
            {
              "id": 4,
              "value": 0.03693837018078949
            },
            {
              "id": 5,
              "value": 0.12867625604839905
            },
            {
              "id": 6,
              "value": 0.6148029486552653
            },
            {
              "id": 7,
              "value": 0.4606285410712404
            },
            {
              "id": 8,
              "value": 0.9941037037620617
            },
            {
              "id": 9,
              "value": 0.4447948225917988
            }
          ]
        },
        "output_format": "csv",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "computation_analyzer",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T10:59:16.200475",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_ae8b51be",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_ae8b51be",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.1890209744425132
            },
            {
              "id": 1,
              "value": 0.0037166204123072477
            },
            {
              "id": 2,
              "value": 0.1299089596759433
            },
            {
              "id": 3,
              "value": 0.40385418861015066
            },
            {
              "id": 4,
              "value": 0.06198613518512164
            },
            {
              "id": 5,
              "value": 0.4930006629256498
            },
            {
              "id": 6,
              "value": 0.5534673536060433
            },
            {
              "id": 7,
              "value": 0.6293584193938205
            },
            {
              "id": 8,
              "value": 0.035143552708068126
            },
            {
              "id": 9,
              "value": 0.8879432991250114
            }
          ]
        },
        "output_format": "csv",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "computation_analyzer",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T10:59:16.201815",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_5a47e392",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring data_processing_filter with involving filter data, Can handle large datasets efficiently by reducing the amount of data processed., Applies transformations to data based on filtering options. - Instance task_5a47e392",
      "test_input": {
        "input_data": {
          "data": [
            0.5594780009115742,
            0.0168849156973494,
            0.021088755121214553,
            0.5239052380002124,
            0.8218121945440712
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "data_processing_filter"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T10:59:13.651415",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_c92f224c",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_c92f224c",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T10:59:16.207324",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_8fa35a8b",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_8fa35a8b",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T10:59:16.206673",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_7193ca23",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_7193ca23",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.3136023104684963
            },
            {
              "id": 1,
              "value": 0.9448435381593285
            },
            {
              "id": 2,
              "value": 0.9079091268532608
            },
            {
              "id": 3,
              "value": 0.6438729749133905
            },
            {
              "id": 4,
              "value": 0.35687294148926474
            },
            {
              "id": 5,
              "value": 0.9641412417366262
            },
            {
              "id": 6,
              "value": 0.24024770869350176
            },
            {
              "id": 7,
              "value": 0.1083946630587369
            },
            {
              "id": 8,
              "value": 0.011004815802073242
            },
            {
              "id": 9,
              "value": 0.40606579867016035
            }
          ]
        },
        "output_format": "json",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T10:59:16.199101",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_b41d020a",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_b41d020a",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T10:59:16.207227",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_830afdf3",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_830afdf3",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T10:59:16.207437",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_48399b02",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with Focus on monitoring network status, general specific helper capability, involving helper - Instance task_48399b02",
      "test_input": {
        "data": {
          "values": [
            71,
            8,
            64,
            95,
            82
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "utility_helper",
        "network_monitor"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T10:59:13.652388",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_1f4fb202",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_1f4fb202",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.40462825496862875
            },
            {
              "id": 1,
              "value": 0.37344341176277673
            },
            {
              "id": 2,
              "value": 0.8354399901124616
            },
            {
              "id": 3,
              "value": 0.6679866753131357
            },
            {
              "id": 4,
              "value": 0.747163494559004
            },
            {
              "id": 5,
              "value": 0.06142961726248519
            },
            {
              "id": 6,
              "value": 0.641826547975202
            },
            {
              "id": 7,
              "value": 0.4026477469442027
            },
            {
              "id": 8,
              "value": 0.9090158507885983
            },
            {
              "id": 9,
              "value": 0.26083042184825656
            }
          ]
        },
        "output_format": "json",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T10:59:16.200364",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_6f9a90d8",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_6f9a90d8",
      "test_input": {
        "input_data": {
          "data": [
            0.7523504272633451,
            0.27961589191983194,
            0.9018433486069879,
            0.5950815921379561,
            0.8046363225511489
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "computation_calculator",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T10:59:16.580962",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_9870956f",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring data_processing_filter with involving filter data, Can handle large datasets efficiently by reducing the amount of data processed., Applies transformations to data based on filtering options. - Instance task_9870956f",
      "test_input": {
        "input_data": {
          "data": [
            0.1647869354514918,
            0.9780380498801773,
            0.41479335688871166,
            0.136135486699267,
            0.04372642600147991
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "data_processing_filter"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T10:59:13.651539",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_f123b7f6",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with Focus on monitoring network status, general specific helper capability, involving helper - Instance task_f123b7f6",
      "test_input": {
        "data": {
          "values": [
            1,
            91,
            98,
            18,
            87
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "utility_helper",
        "network_monitor"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T10:59:13.652682",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_52e567d5",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring file_operations_compressor with involving compressor, general specific compressor capability - Instance task_52e567d5",
      "test_input": {
        "input_data": {
          "data": [
            0.8428362493097462,
            0.4431703716010793,
            0.6678927209627104,
            0.32244118964863366,
            0.14700838930681825
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "file_operations_compressor"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T10:59:13.651898",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_58980923",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_58980923",
      "test_input": {
        "input_data": {
          "data": [
            0.9716039644844424,
            0.35958238257492403,
            0.7447469521472248,
            0.9053226278311131,
            0.8862386319445131
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "computation_calculator",
        "data_processing_validator",
        "computation_analyzer",
        "network_poster"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T10:59:16.578740",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_fd2e510c",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring data_processing_transformer, integration_mapper, utility_logger with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_fd2e510c",
      "test_input": {
        "input_data": {
          "data": [
            0.9997417988558714,
            0.886151715960263,
            0.638256455837031,
            0.7544753901800368,
            0.9646671504046918
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "integration_mapper",
        "utility_logger"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T10:59:13.651676",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_2a04ff5e",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_2a04ff5e",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.5242232006740417
            },
            {
              "id": 1,
              "value": 0.7207518036347851
            },
            {
              "id": 2,
              "value": 0.36654609876626176
            },
            {
              "id": 3,
              "value": 0.9779542747458677
            },
            {
              "id": 4,
              "value": 0.38039653697669085
            },
            {
              "id": 5,
              "value": 0.5736936577692483
            },
            {
              "id": 6,
              "value": 0.7860588649965468
            },
            {
              "id": 7,
              "value": 0.9375666137152401
            },
            {
              "id": 8,
              "value": 0.5944467696324924
            },
            {
              "id": 9,
              "value": 0.6703466920271401
            }
          ]
        },
        "output_format": "json",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T10:59:16.201911",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_79ccaf5a",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with Focus on monitoring network status, general specific helper capability, involving helper - Instance task_79ccaf5a",
      "test_input": {
        "data": {
          "values": [
            45,
            47,
            47,
            6,
            91
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "utility_helper",
        "network_monitor"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T10:59:13.652410",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_96fa8c7c",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_96fa8c7c",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T10:59:16.207592",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_a26931b0",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_a26931b0",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.27969523958286
            },
            {
              "id": 1,
              "value": 0.657786806184758
            },
            {
              "id": 2,
              "value": 0.4123683988838922
            },
            {
              "id": 3,
              "value": 0.05137080219775714
            },
            {
              "id": 4,
              "value": 0.16633410090566314
            },
            {
              "id": 5,
              "value": 0.28251824800638115
            },
            {
              "id": 6,
              "value": 0.1024155393341808
            },
            {
              "id": 7,
              "value": 0.7824961633592565
            },
            {
              "id": 8,
              "value": 0.6893775611945288
            },
            {
              "id": 9,
              "value": 0.982164642705411
            }
          ]
        },
        "output_format": "csv",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T10:59:16.196464",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_b8e410e0",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with Focus on monitoring network status, general specific helper capability, involving helper - Instance task_b8e410e0",
      "test_input": {
        "data": {
          "values": [
            89,
            71,
            96,
            81,
            84
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "utility_helper",
        "network_monitor"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T10:59:13.652654",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_11d374e2",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_11d374e2",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.759891556622587
            },
            {
              "id": 1,
              "value": 0.8302033676355609
            },
            {
              "id": 2,
              "value": 0.11954154552339324
            },
            {
              "id": 3,
              "value": 0.4381021931411111
            },
            {
              "id": 4,
              "value": 0.5846162450727083
            },
            {
              "id": 5,
              "value": 0.1391875570660499
            },
            {
              "id": 6,
              "value": 0.6065870737664112
            },
            {
              "id": 7,
              "value": 0.11460276505249734
            },
            {
              "id": 8,
              "value": 0.4295639817316811
            },
            {
              "id": 9,
              "value": 0.13286699864768003
            }
          ]
        },
        "output_format": "csv",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "computation_analyzer",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T10:59:16.200911",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_fae1ef3a",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_fae1ef3a",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.9505207523230861
            },
            {
              "id": 1,
              "value": 0.567122376382124
            },
            {
              "id": 2,
              "value": 0.6682456896717287
            },
            {
              "id": 3,
              "value": 0.8863986624135805
            },
            {
              "id": 4,
              "value": 0.036123229400141454
            },
            {
              "id": 5,
              "value": 0.805636839739056
            },
            {
              "id": 6,
              "value": 0.9763206866654646
            },
            {
              "id": 7,
              "value": 0.8380238845702427
            },
            {
              "id": 8,
              "value": 0.4314338060017455
            },
            {
              "id": 9,
              "value": 0.13222507022755348
            }
          ]
        },
        "output_format": "csv",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "computation_analyzer",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T10:59:16.203712",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_7389fd9f",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_7389fd9f",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T10:59:16.207068",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_7c19e31e",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_7c19e31e",
      "test_input": {
        "input_data": {
          "data": [
            0.8517021884554937,
            0.8171472453859695,
            0.3554490955734767,
            0.14879618463924693,
            0.655691174143919
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "computation_calculator",
        "data_processing_validator",
        "computation_analyzer"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T10:59:16.581450",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_28fc2138",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_28fc2138",
      "test_input": {
        "input_data": {
          "data": [
            0.3176685378432216,
            0.4860339711970717,
            0.5293717908985445,
            0.1606534223695134,
            0.9692157116009283
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "computation_calculator",
        "data_processing_validator",
        "computation_analyzer",
        "network_poster"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T10:59:16.578164",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_2a705428",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring data_processing_filter with involving filter data, Can handle large datasets efficiently by reducing the amount of data processed., Applies transformations to data based on filtering options. - Instance task_2a705428",
      "test_input": {
        "input_data": {
          "data": [
            0.6633883184039254,
            0.35548053642278266,
            0.8210335131807822,
            0.013685704156695344,
            0.5993046973916247
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "data_processing_filter"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T10:59:13.651925",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_7776b57d",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with general specific cache capability, involving cache, general specific aggregator capability - Instance task_7776b57d",
      "test_input": {
        "data": {
          "values": [
            47,
            40,
            83,
            9,
            64
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "utility_cache",
        "data_processing_aggregator"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T10:59:13.652423",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_70605519",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_70605519",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.30803275009768194
            },
            {
              "id": 1,
              "value": 0.6221129930110443
            },
            {
              "id": 2,
              "value": 0.8324806662951139
            },
            {
              "id": 3,
              "value": 0.40940626645855915
            },
            {
              "id": 4,
              "value": 0.9869916189314261
            },
            {
              "id": 5,
              "value": 0.13819148470799003
            },
            {
              "id": 6,
              "value": 0.14463318894941313
            },
            {
              "id": 7,
              "value": 0.3129973448834381
            },
            {
              "id": 8,
              "value": 0.8179990934514045
            },
            {
              "id": 9,
              "value": 0.7234300305423571
            }
          ]
        },
        "output_format": "json",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T10:59:16.196286",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_dd3f473d",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_dd3f473d",
      "test_input": {
        "input_data": {
          "data": [
            0.4381703060046531,
            0.5641686023986823,
            0.37663511508224057,
            0.9099421388291485,
            0.19576038879321067
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T10:59:16.577041",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_2c509330",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_2c509330",
      "test_input": {
        "input_data": {
          "data": [
            0.13409196012642433,
            0.6666931579980168,
            0.477915276197287,
            0.44558658869460666,
            0.9805153722471552
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "computation_calculator",
        "data_processing_validator",
        "computation_analyzer",
        "network_poster"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T10:59:16.584526",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_9a4b3ecb",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_9a4b3ecb",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T10:59:16.206931",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_ceb84971",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring file_operations_compressor with involving compressor, general specific compressor capability - Instance task_ceb84971",
      "test_input": {
        "input_data": {
          "data": [
            0.3538873407940746,
            0.955013367566763,
            0.5908237006694097,
            0.8258918070026425,
            0.2942957888082077
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "file_operations_compressor"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T10:59:13.651739",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_eb49e9c6",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_eb49e9c6",
      "test_input": {
        "input_data": {
          "data": [
            0.5896378388034422,
            0.2203439576818006,
            0.8103907994883794,
            0.7419358202036512,
            0.5252921427772471
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T10:59:16.572617",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_632978b8",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_632978b8",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T10:59:16.206457",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_471cad68",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_471cad68",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.30013683399943314
            },
            {
              "id": 1,
              "value": 0.02954292960785243
            },
            {
              "id": 2,
              "value": 0.6158103258632681
            },
            {
              "id": 3,
              "value": 0.024607394215453438
            },
            {
              "id": 4,
              "value": 0.26931377461604866
            },
            {
              "id": 5,
              "value": 0.6457450979594281
            },
            {
              "id": 6,
              "value": 0.36445185749525233
            },
            {
              "id": 7,
              "value": 0.6187321704877474
            },
            {
              "id": 8,
              "value": 0.10143629216658534
            },
            {
              "id": 9,
              "value": 0.9252280592900024
            }
          ]
        },
        "output_format": "csv",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T10:59:16.200283",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_c8ee9f96",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring file_operations_compressor with involving compressor, general specific compressor capability - Instance task_c8ee9f96",
      "test_input": {
        "input_data": {
          "data": [
            0.5547850785481356,
            0.10629303750469576,
            0.566785329452913,
            0.5653098634652972,
            0.41824347523711136
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "file_operations_compressor"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T10:59:13.651652",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_91c26078",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring file_operations_compressor with involving compressor, general specific compressor capability - Instance task_91c26078",
      "test_input": {
        "input_data": {
          "data": [
            0.18699030989116905,
            0.3594623450661042,
            0.7064782071903776,
            0.7268179497625865,
            0.9859534740379808
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "file_operations_compressor"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T10:59:13.651712",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_73a82a99",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with Focus on monitoring network status, general specific helper capability, involving helper - Instance task_73a82a99",
      "test_input": {
        "data": {
          "values": [
            68,
            53,
            98,
            26,
            42
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "utility_helper",
        "network_monitor"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T10:59:13.652290",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_83f9b778",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring file_operations_compressor with involving compressor, general specific compressor capability - Instance task_83f9b778",
      "test_input": {
        "input_data": {
          "data": [
            0.09391814120718,
            0.08465919426190172,
            0.10245565005279278,
            0.7904397592970659,
            0.7893616894374541
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "file_operations_compressor"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T10:59:13.651827",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_eee82c1c",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_eee82c1c",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T10:59:16.206908",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_87a03319",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring file_operations_compressor with involving compressor, general specific compressor capability - Instance task_87a03319",
      "test_input": {
        "input_data": {
          "data": [
            0.8724575608605626,
            0.5844360041410721,
            0.22713908658085702,
            0.01747334473414075,
            0.46965261608371545
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "file_operations_compressor"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T10:59:13.651522",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_cdf78f8a",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring data_processing_transformer, integration_mapper, utility_logger with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_cdf78f8a",
      "test_input": {
        "input_data": {
          "data": [
            0.18699669360095328,
            0.8154065790287077,
            0.0072157226473953395,
            0.3489665124241996,
            0.8617510557930125
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "integration_mapper",
        "utility_logger"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T10:59:13.651574",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_523e7ea5",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_523e7ea5",
      "test_input": {
        "input_data": {
          "data": [
            0.6223442645109833,
            0.9168174099742529,
            0.6934477739947805,
            0.9492574107895627,
            0.40757843148603656
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "computation_calculator",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T10:59:16.580682",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_adfadd76",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_adfadd76",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T10:59:16.206521",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_ba3be3c6",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_ba3be3c6",
      "test_input": {
        "input_data": {
          "data": [
            0.4415621337800454,
            0.867996369708544,
            0.3075670789004954,
            0.7630132915619958,
            0.21461702316665443
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "computation_calculator",
        "data_processing_validator",
        "computation_analyzer"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T10:59:16.582635",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_3f55bbe7",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_3f55bbe7",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T10:59:16.206697",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_9f88d06e",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with general specific cache capability, involving cache, general specific aggregator capability - Instance task_9f88d06e",
      "test_input": {
        "data": {
          "values": [
            31,
            2,
            50,
            76,
            43
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "utility_cache",
        "data_processing_aggregator"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T10:59:13.652181",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_eee53d59",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring file_operations_compressor with involving compressor, general specific compressor capability - Instance task_eee53d59",
      "test_input": {
        "input_data": {
          "data": [
            0.7912401735562882,
            0.48199137615853715,
            0.006312809920573814,
            0.3461683754567365,
            0.25076622177571817
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "file_operations_compressor"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T10:59:13.651562",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_ce5f3cc6",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_ce5f3cc6",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T10:59:16.207284",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_d29eb977",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_d29eb977",
      "test_input": {
        "input_data": {
          "data": [
            0.394667809591824,
            0.1547029198462181,
            0.11386099108358094,
            0.7034576633229535,
            0.4689626683280166
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "computation_calculator",
        "data_processing_validator",
        "computation_analyzer",
        "network_poster"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T10:59:16.579197",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_b540cf9e",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_b540cf9e",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.6998685716116576
            },
            {
              "id": 1,
              "value": 0.396233518021732
            },
            {
              "id": 2,
              "value": 0.8080905840015017
            },
            {
              "id": 3,
              "value": 0.6469023345247956
            },
            {
              "id": 4,
              "value": 0.8537559172969329
            },
            {
              "id": 5,
              "value": 0.7205461733932522
            },
            {
              "id": 6,
              "value": 0.06304258667426499
            },
            {
              "id": 7,
              "value": 0.10376648959900603
            },
            {
              "id": 8,
              "value": 0.10017093340279126
            },
            {
              "id": 9,
              "value": 0.5112636045324401
            }
          ]
        },
        "output_format": "xml",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T10:59:16.205729",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_e704fbc7",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_e704fbc7",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.0559298650236949
            },
            {
              "id": 1,
              "value": 0.3897491422283148
            },
            {
              "id": 2,
              "value": 0.8817782126042393
            },
            {
              "id": 3,
              "value": 0.9868218164241226
            },
            {
              "id": 4,
              "value": 0.19955138642794812
            },
            {
              "id": 5,
              "value": 0.033048212502845176
            },
            {
              "id": 6,
              "value": 0.7293919235443975
            },
            {
              "id": 7,
              "value": 0.5045253851574981
            },
            {
              "id": 8,
              "value": 0.5030023676594331
            },
            {
              "id": 9,
              "value": 0.5804471886760791
            }
          ]
        },
        "output_format": "csv",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "computation_analyzer",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T10:59:16.202107",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_8926e505",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with involving connector, general specific connector capability, Applies transformations to data based on filtering options. - Instance task_8926e505",
      "test_input": {
        "data": {
          "values": [
            26,
            85,
            42,
            18,
            1
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "integration_connector",
        "data_processing_filter"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T10:59:13.652668",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_bd6c9657",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_bd6c9657",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.4993258435909994
            },
            {
              "id": 1,
              "value": 0.2636866067011836
            },
            {
              "id": 2,
              "value": 0.015075157112115378
            },
            {
              "id": 3,
              "value": 0.24982681894188852
            },
            {
              "id": 4,
              "value": 0.46502823170823193
            },
            {
              "id": 5,
              "value": 0.4094667004537913
            },
            {
              "id": 6,
              "value": 0.7497342087664539
            },
            {
              "id": 7,
              "value": 0.6296004454256139
            },
            {
              "id": 8,
              "value": 0.5692431543254002
            },
            {
              "id": 9,
              "value": 0.28200011250802226
            }
          ]
        },
        "output_format": "xml",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T10:59:16.203416",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_8c07ae4d",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_8c07ae4d",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T10:59:16.206597",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_ec805a72",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with general specific cache capability, involving cache, general specific aggregator capability - Instance task_ec805a72",
      "test_input": {
        "data": {
          "values": [
            58,
            17,
            70,
            8,
            28
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "utility_cache",
        "data_processing_aggregator"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T10:59:13.652262",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_48ceb89d",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with Focus on monitoring network status, general specific helper capability, involving helper - Instance task_48ceb89d",
      "test_input": {
        "data": {
          "values": [
            42,
            25,
            17,
            85,
            75
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "utility_helper",
        "network_monitor"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T10:59:13.652269",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_4b1867d7",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_4b1867d7",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T10:59:16.207037",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_50958677",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_50958677",
      "test_input": {
        "input_data": {
          "data": [
            0.7414230738322287,
            0.9713987530175743,
            0.11505313846202225,
            0.5295523048297648,
            0.918245490959806
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T10:59:16.578030",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_4d4ab4b8",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_4d4ab4b8",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T10:59:16.206712",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_64d2a731",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_64d2a731",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.4972192908739431
            },
            {
              "id": 1,
              "value": 0.008562049522344295
            },
            {
              "id": 2,
              "value": 0.6812139711248887
            },
            {
              "id": 3,
              "value": 0.683671398055676
            },
            {
              "id": 4,
              "value": 0.1592851523989668
            },
            {
              "id": 5,
              "value": 0.7496557082809028
            },
            {
              "id": 6,
              "value": 0.5661863188156528
            },
            {
              "id": 7,
              "value": 0.04975158450245665
            },
            {
              "id": 8,
              "value": 0.9202154811290806
            },
            {
              "id": 9,
              "value": 0.24272180651531006
            }
          ]
        },
        "output_format": "json",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T10:59:16.197985",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_a50f509f",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_a50f509f",
      "test_input": {
        "input_data": {
          "data": [
            0.7958055502732058,
            0.20963005977759885,
            0.1518058195537304,
            0.8135798371427528,
            0.5109629024002137
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "computation_calculator",
        "data_processing_validator",
        "computation_analyzer"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T10:59:16.399455",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_6a64d12e",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_6a64d12e",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T10:59:16.207098",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_1cec1d8e",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring data_processing_transformer, integration_mapper, utility_logger with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_1cec1d8e",
      "test_input": {
        "input_data": {
          "data": [
            0.6200810364051129,
            0.22712262104776837,
            0.7699318042428777,
            0.733650069148866,
            0.07436400552479983
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "integration_mapper",
        "utility_logger"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T10:59:13.651866",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_d1753bc4",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_d1753bc4",
      "test_input": {
        "input_data": {
          "data": [
            0.5911695827511337,
            0.9477688105043512,
            0.4324584193989349,
            0.47810411934473873,
            0.29082938563683614
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "computation_calculator",
        "data_processing_validator",
        "computation_analyzer",
        "network_poster"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T10:59:16.582119",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_9b5c3657",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_9b5c3657",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T10:59:16.207082",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_2ed1adbd",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_2ed1adbd",
      "test_input": {
        "input_data": {
          "data": [
            0.5825140642856035,
            0.30190456898165297,
            0.14892446964342265,
            0.9909110952203529,
            0.7516934569332121
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "computation_calculator",
        "data_processing_validator",
        "computation_analyzer"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T10:59:16.574726",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_9dab0923",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with Focus on monitoring network status, general specific helper capability, involving helper - Instance task_9dab0923",
      "test_input": {
        "data": {
          "values": [
            98,
            32,
            30,
            30,
            83
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "utility_helper",
        "network_monitor"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T10:59:13.652557",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_455a9c36",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_455a9c36",
      "test_input": {
        "input_data": {
          "data": [
            0.9298237954178813,
            0.8331747370401499,
            0.4832793094207466,
            0.9515723521640034,
            0.40716521201307143
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "computation_calculator",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T10:59:16.399772",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_b68bc5bc",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_b68bc5bc",
      "test_input": {
        "input_data": {
          "data": [
            0.17477258260523643,
            0.48603437779696623,
            0.7273446678678652,
            0.32352579706598583,
            0.35070575039334884
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "computation_calculator",
        "data_processing_validator",
        "computation_analyzer",
        "network_poster"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T10:59:16.577849",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_af6bf425",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_af6bf425",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T10:59:16.207414",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_c4d45bcd",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_c4d45bcd",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T10:59:16.206567",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_4bb5b65d",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_4bb5b65d",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.4307440737005631
            },
            {
              "id": 1,
              "value": 0.703763666014319
            },
            {
              "id": 2,
              "value": 0.302026349348431
            },
            {
              "id": 3,
              "value": 0.9080528757453777
            },
            {
              "id": 4,
              "value": 0.6295427864711666
            },
            {
              "id": 5,
              "value": 0.891989467542682
            },
            {
              "id": 6,
              "value": 0.18597607208108913
            },
            {
              "id": 7,
              "value": 0.1265606102995417
            },
            {
              "id": 8,
              "value": 0.002682347698305998
            },
            {
              "id": 9,
              "value": 0.662378606363962
            }
          ]
        },
        "output_format": "csv",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T10:59:16.198175",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_0fffeb93",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_0fffeb93",
      "test_input": {
        "input_data": {
          "data": [
            0.5193457178575918,
            0.4196712928251064,
            0.07351173385328558,
            0.26514194298052796,
            0.715479225153418
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "computation_calculator",
        "data_processing_validator",
        "computation_analyzer",
        "network_poster"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T10:59:16.581672",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_6c5f7473",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with Focus on monitoring network status, general specific helper capability, involving helper - Instance task_6c5f7473",
      "test_input": {
        "data": {
          "values": [
            35,
            39,
            60,
            28,
            13
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "utility_helper",
        "network_monitor"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T10:59:13.652584",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_ac641758",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring data_processing_filter with involving filter data, Can handle large datasets efficiently by reducing the amount of data processed., Applies transformations to data based on filtering options. - Instance task_ac641758",
      "test_input": {
        "input_data": {
          "data": [
            0.3363319649327713,
            0.963239295742921,
            0.2155222413265937,
            0.28482029904226336,
            0.12350460843060052
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "data_processing_filter"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T10:59:13.651849",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_f531fa0b",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring data_processing_filter with involving filter data, Can handle large datasets efficiently by reducing the amount of data processed., Applies transformations to data based on filtering options. - Instance task_f531fa0b",
      "test_input": {
        "input_data": {
          "data": [
            0.6512547321242914,
            0.07759832438527081,
            0.8735649394147614,
            0.3488347166915534,
            0.1333657427007805
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "data_processing_filter"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T10:59:13.651871",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_a7b847f2",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_a7b847f2",
      "test_input": {
        "input_data": {
          "data": [
            0.7360146762554386,
            0.6753124397950769,
            0.24485789814979442,
            0.981260845892843,
            0.6127747056599493
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T10:59:16.580043",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_5d158a66",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_5d158a66",
      "test_input": {
        "input_data": {
          "data": [
            0.6148717698134654,
            0.2906685312359386,
            0.793838598539625,
            0.32686938513783137,
            0.5013227616745394
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T10:59:16.575112",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_a5101508",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_a5101508",
      "test_input": {
        "input_data": {
          "data": [
            0.03718624838986195,
            0.7501667866953994,
            0.16799397208283517,
            0.9240951637671719,
            0.1520506289792477
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "computation_calculator",
        "data_processing_validator",
        "computation_analyzer"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T10:59:16.577522",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_d14f1a21",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring data_processing_transformer, integration_mapper, utility_logger with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_d14f1a21",
      "test_input": {
        "input_data": {
          "data": [
            0.1992873268610338,
            0.2390217780217283,
            0.9563296012822725,
            0.8762570043263828,
            0.9331396362567718
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "integration_mapper",
        "utility_logger"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T10:59:13.651579",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_10fabe1a",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with Focus on monitoring network status, general specific helper capability, involving helper - Instance task_10fabe1a",
      "test_input": {
        "data": {
          "values": [
            45,
            43,
            55,
            56,
            78
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "utility_helper",
        "network_monitor"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T10:59:13.652032",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_bbc1dced",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with Focus on monitoring network status, general specific helper capability, involving helper - Instance task_bbc1dced",
      "test_input": {
        "data": {
          "values": [
            83,
            39,
            68,
            33,
            94
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "utility_helper",
        "network_monitor"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T10:59:13.652016",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_4f5fa644",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring data_processing_filter with involving filter data, Can handle large datasets efficiently by reducing the amount of data processed., Applies transformations to data based on filtering options. - Instance task_4f5fa644",
      "test_input": {
        "input_data": {
          "data": [
            0.025128464763731317,
            0.14939612447003003,
            0.2390844427630745,
            0.7973852633745686,
            0.6720224108504237
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "data_processing_filter"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T10:59:13.651640",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_9840a56e",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring data_processing_transformer, integration_mapper, utility_logger with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_9840a56e",
      "test_input": {
        "input_data": {
          "data": [
            0.38571551882544564,
            0.19827981047089172,
            0.5608194560501275,
            0.19128478782145353,
            0.43817738984815446
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "integration_mapper",
        "utility_logger"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T10:59:13.651421",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_b8f645f2",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring file_operations_compressor with involving compressor, general specific compressor capability - Instance task_b8f645f2",
      "test_input": {
        "input_data": {
          "data": [
            0.9256413433509817,
            0.8107253256500148,
            0.22962538823940193,
            0.3540942120860404,
            0.6233079940466956
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "file_operations_compressor"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T10:59:13.651838",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_20d2e6b5",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with Focus on monitoring network status, general specific helper capability, involving helper - Instance task_20d2e6b5",
      "test_input": {
        "data": {
          "values": [
            55,
            42,
            29,
            51,
            83
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "utility_helper",
        "network_monitor"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T10:59:13.652240",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_8e9a916c",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_8e9a916c",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T10:59:16.206995",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_f4e7b6ac",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_f4e7b6ac",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T10:59:16.206870",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_84206dbe",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring data_processing_filter with involving filter data, Can handle large datasets efficiently by reducing the amount of data processed., Applies transformations to data based on filtering options. - Instance task_84206dbe",
      "test_input": {
        "input_data": {
          "data": [
            0.31047993469414115,
            0.5138082224176509,
            0.8676705723640786,
            0.6263699871871424,
            0.25176712300031
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "data_processing_filter"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T10:59:13.651702",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_9f04f123",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with general specific cache capability, involving cache, general specific aggregator capability - Instance task_9f04f123",
      "test_input": {
        "data": {
          "values": [
            10,
            77,
            16,
            63,
            2
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "utility_cache",
        "data_processing_aggregator"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T10:59:13.652283",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_724fd33a",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with general specific cache capability, involving cache, general specific aggregator capability - Instance task_724fd33a",
      "test_input": {
        "data": {
          "values": [
            76,
            20,
            63,
            89,
            63
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "utility_cache",
        "data_processing_aggregator"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T10:59:13.652062",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_8641b68f",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_8641b68f",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.08168061688455586
            },
            {
              "id": 1,
              "value": 0.1448719252307029
            },
            {
              "id": 2,
              "value": 0.6474098495516255
            },
            {
              "id": 3,
              "value": 0.4538130797272901
            },
            {
              "id": 4,
              "value": 0.555687819318181
            },
            {
              "id": 5,
              "value": 0.16848789430303934
            },
            {
              "id": 6,
              "value": 0.6001551602085079
            },
            {
              "id": 7,
              "value": 0.7972747246700354
            },
            {
              "id": 8,
              "value": 0.827566833989696
            },
            {
              "id": 9,
              "value": 0.23370479754044893
            }
          ]
        },
        "output_format": "json",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T10:59:16.204184",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_e79b11fc",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_e79b11fc",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T10:59:16.206643",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_21dca5a9",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_21dca5a9",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.09808412915167386
            },
            {
              "id": 1,
              "value": 0.7149998109317903
            },
            {
              "id": 2,
              "value": 0.3389602465101117
            },
            {
              "id": 3,
              "value": 0.350715540828482
            },
            {
              "id": 4,
              "value": 0.41503177767989874
            },
            {
              "id": 5,
              "value": 0.8143581866693871
            },
            {
              "id": 6,
              "value": 0.192881605913655
            },
            {
              "id": 7,
              "value": 0.7615464100880954
            },
            {
              "id": 8,
              "value": 0.48800719655115765
            },
            {
              "id": 9,
              "value": 0.5340791219930168
            }
          ]
        },
        "output_format": "xml",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "computation_analyzer",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T10:59:16.199398",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_00fa503f",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_00fa503f",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.5609126159606829
            },
            {
              "id": 1,
              "value": 0.1562137871055026
            },
            {
              "id": 2,
              "value": 0.0760750430829471
            },
            {
              "id": 3,
              "value": 0.9270048921117932
            },
            {
              "id": 4,
              "value": 0.4403269750104202
            },
            {
              "id": 5,
              "value": 0.2600136245947605
            },
            {
              "id": 6,
              "value": 0.19119969993458452
            },
            {
              "id": 7,
              "value": 0.5214436050754321
            },
            {
              "id": 8,
              "value": 0.4327318273746573
            },
            {
              "id": 9,
              "value": 0.9959082720340131
            }
          ]
        },
        "output_format": "xml",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T10:59:16.202725",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_d0dcfd3a",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_d0dcfd3a",
      "test_input": {
        "input_data": {
          "data": [
            0.2835719677931604,
            0.3560326557951504,
            0.6777144543277074,
            0.1235281082292008,
            0.9672602471824356
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "computation_calculator",
        "data_processing_validator",
        "computation_analyzer",
        "network_poster"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T10:59:16.576021",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_5ea71447",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_5ea71447",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T10:59:16.207333",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_2b2fb988",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_2b2fb988",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T10:59:16.206987",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_dac2d5db",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_dac2d5db",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.8214437564531859
            },
            {
              "id": 1,
              "value": 0.429700604322507
            },
            {
              "id": 2,
              "value": 0.1964295648844675
            },
            {
              "id": 3,
              "value": 0.7403543242877423
            },
            {
              "id": 4,
              "value": 0.0766050351579034
            },
            {
              "id": 5,
              "value": 0.5490693677426449
            },
            {
              "id": 6,
              "value": 0.38713701506093534
            },
            {
              "id": 7,
              "value": 0.5130383299046107
            },
            {
              "id": 8,
              "value": 0.3800707547397464
            },
            {
              "id": 9,
              "value": 0.7347059646276702
            }
          ]
        },
        "output_format": "csv",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T10:59:16.198978",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_daf546e8",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_daf546e8",
      "test_input": {
        "input_data": {
          "data": [
            0.7329799791600499,
            0.6914772574307864,
            0.003891524585501016,
            0.5515890482984456,
            0.996054312035137
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "computation_calculator",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T10:59:16.575792",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_82c65709",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_82c65709",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T10:59:16.206946",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_e7d6c10a",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with involving connector, general specific connector capability, Applies transformations to data based on filtering options. - Instance task_e7d6c10a",
      "test_input": {
        "data": {
          "values": [
            23,
            63,
            78,
            82,
            82
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "integration_connector",
        "data_processing_filter"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T10:59:13.652605",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_4ba4c5b1",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring data_processing_filter with involving filter data, Can handle large datasets efficiently by reducing the amount of data processed., Applies transformations to data based on filtering options. - Instance task_4ba4c5b1",
      "test_input": {
        "input_data": {
          "data": [
            0.4558978676283455,
            0.14253919937918913,
            0.42807261677098507,
            0.4827621898651939,
            0.5982907755245587
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "data_processing_filter"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T10:59:13.651310",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_d872ea8f",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_d872ea8f",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T10:59:16.206621",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_48882f1a",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring data_processing_filter with involving filter data, Can handle large datasets efficiently by reducing the amount of data processed., Applies transformations to data based on filtering options. - Instance task_48882f1a",
      "test_input": {
        "input_data": {
          "data": [
            0.43368646141686107,
            0.7135676306234048,
            0.6015694778631183,
            0.7879360953846501,
            0.3280057750447112
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "data_processing_filter"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T10:59:13.651697",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_ee5263df",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_ee5263df",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T10:59:16.206735",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_64e1111a",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring data_processing_transformer, integration_mapper, utility_logger with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_64e1111a",
      "test_input": {
        "input_data": {
          "data": [
            0.0696979724619341,
            0.2987295704407682,
            0.32614755008800167,
            0.04891515444028893,
            0.6583916340066581
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "integration_mapper",
        "utility_logger"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T10:59:13.651920",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_9f3b6ada",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_9f3b6ada",
      "test_input": {
        "input_data": {
          "data": [
            0.9237107684210738,
            0.07213774629990044,
            0.11763490689429423,
            0.7046418733246542,
            0.5906341070957593
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "computation_calculator",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T10:59:16.576387",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_9bdbdd0a",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring data_processing_transformer, integration_mapper, utility_logger with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_9bdbdd0a",
      "test_input": {
        "input_data": {
          "data": [
            0.07423296862980588,
            0.16711305831283063,
            0.8266930491143568,
            0.47930526948318,
            0.7441345648615852
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "integration_mapper",
        "utility_logger"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T10:59:13.651833",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_d9665618",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with general specific cache capability, involving cache, general specific aggregator capability - Instance task_d9665618",
      "test_input": {
        "data": {
          "values": [
            46,
            81,
            63,
            43,
            7
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "utility_cache",
        "data_processing_aggregator"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T10:59:13.652563",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_801127bf",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with Focus on monitoring network status, general specific helper capability, involving helper - Instance task_801127bf",
      "test_input": {
        "data": {
          "values": [
            3,
            86,
            71,
            80,
            28
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "utility_helper",
        "network_monitor"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T10:59:13.652071",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_4cd7d6d8",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with involving connector, general specific connector capability, Applies transformations to data based on filtering options. - Instance task_4cd7d6d8",
      "test_input": {
        "data": {
          "values": [
            90,
            1,
            21,
            49,
            80
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "integration_connector",
        "data_processing_filter"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T10:59:13.652047",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_6d460f5e",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring file_operations_compressor with involving compressor, general specific compressor capability - Instance task_6d460f5e",
      "test_input": {
        "input_data": {
          "data": [
            0.453443019683366,
            0.40018661312708903,
            0.7976497555735296,
            0.9798224321759519,
            0.7749533952384692
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "file_operations_compressor"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T10:59:13.651602",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_a8fece5c",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_a8fece5c",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.7838370788076748
            },
            {
              "id": 1,
              "value": 0.8485903489781521
            },
            {
              "id": 2,
              "value": 0.7941523453236365
            },
            {
              "id": 3,
              "value": 0.222886638293477
            },
            {
              "id": 4,
              "value": 0.5513845853227918
            },
            {
              "id": 5,
              "value": 0.2579648055577768
            },
            {
              "id": 6,
              "value": 0.8834618807652583
            },
            {
              "id": 7,
              "value": 0.8526529042832768
            },
            {
              "id": 8,
              "value": 0.6610851309875042
            },
            {
              "id": 9,
              "value": 0.5666466173947478
            }
          ]
        },
        "output_format": "json",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "computation_analyzer",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T10:59:16.204386",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_c683e233",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with Focus on monitoring network status, general specific helper capability, involving helper - Instance task_c683e233",
      "test_input": {
        "data": {
          "values": [
            59,
            46,
            98,
            89,
            98
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "utility_helper",
        "network_monitor"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T10:59:13.652598",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_0a50d366",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_0a50d366",
      "test_input": {
        "input_data": {
          "data": [
            0.2502783069603901,
            0.38777053471434486,
            0.28386569114385296,
            0.7045774880866977,
            0.9145827522197718
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "computation_calculator",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T10:59:16.573174",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_8e7b90b3",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with involving connector, general specific connector capability, Applies transformations to data based on filtering options. - Instance task_8e7b90b3",
      "test_input": {
        "data": {
          "values": [
            26,
            72,
            19,
            11,
            58
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "integration_connector",
        "data_processing_filter"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T10:59:13.652471",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_8b521083",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_8b521083",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T10:59:16.206490",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_bcda5ec4",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_bcda5ec4",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T10:59:16.207490",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_f65c013c",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring file_operations_compressor with involving compressor, general specific compressor capability - Instance task_f65c013c",
      "test_input": {
        "input_data": {
          "data": [
            0.102709001841495,
            0.021210043006565815,
            0.521964852053637,
            0.2542415565989704,
            0.23523100587093138
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "file_operations_compressor"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T10:59:13.651511",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_37f5be33",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_37f5be33",
      "test_input": {
        "input_data": {
          "data": [
            0.6075603092835964,
            0.2102745426681798,
            0.17630257222368206,
            0.562821748761643,
            0.20041050694022633
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T10:59:16.578458",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_057fcb3a",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_057fcb3a",
      "test_input": {
        "input_data": {
          "data": [
            0.7074592280277333,
            0.47413077172855145,
            0.2119320888387437,
            0.906572031028486,
            0.3033257049572564
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "computation_calculator",
        "data_processing_validator",
        "computation_analyzer"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T10:59:16.577190",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_0dd56d4d",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with involving connector, general specific connector capability, Applies transformations to data based on filtering options. - Instance task_0dd56d4d",
      "test_input": {
        "data": {
          "values": [
            8,
            94,
            38,
            48,
            73
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "integration_connector",
        "data_processing_filter"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T10:59:13.652346",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_80deec82",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_80deec82",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.9893909924398371
            },
            {
              "id": 1,
              "value": 0.22116715390351427
            },
            {
              "id": 2,
              "value": 0.8093419901104875
            },
            {
              "id": 3,
              "value": 0.4579861661307547
            },
            {
              "id": 4,
              "value": 0.3231724453492447
            },
            {
              "id": 5,
              "value": 0.002508969142415718
            },
            {
              "id": 6,
              "value": 0.6425226797894151
            },
            {
              "id": 7,
              "value": 0.9700483585153091
            },
            {
              "id": 8,
              "value": 0.7971861014009208
            },
            {
              "id": 9,
              "value": 0.08414082884543161
            }
          ]
        },
        "output_format": "json",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T10:59:16.201268",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_608b3a36",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_608b3a36",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T10:59:16.206978",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_fbad2a62",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_fbad2a62",
      "test_input": {
        "input_data": {
          "data": [
            0.03327466199875928,
            0.25177631393185995,
            0.7187449165301315,
            0.2823218211010987,
            0.3208070840904268
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "computation_calculator",
        "data_processing_validator",
        "computation_analyzer",
        "network_poster"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T10:59:16.583765",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_a0d319f6",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring file_operations_compressor with involving compressor, general specific compressor capability - Instance task_a0d319f6",
      "test_input": {
        "input_data": {
          "data": [
            0.26268971299653954,
            0.022908495733797718,
            0.7530906858310918,
            0.964863141277441,
            0.44387505725178533
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "file_operations_compressor"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T10:59:13.651877",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_0a13b599",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_0a13b599",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.08218832234199924
            },
            {
              "id": 1,
              "value": 0.09806538829134093
            },
            {
              "id": 2,
              "value": 0.9881088563920307
            },
            {
              "id": 3,
              "value": 0.09266326693650395
            },
            {
              "id": 4,
              "value": 0.3958698296446602
            },
            {
              "id": 5,
              "value": 0.08520124983971755
            },
            {
              "id": 6,
              "value": 0.7357093425744299
            },
            {
              "id": 7,
              "value": 0.040035914265892814
            },
            {
              "id": 8,
              "value": 0.9702295397160928
            },
            {
              "id": 9,
              "value": 0.48009166333916253
            }
          ]
        },
        "output_format": "xml",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T10:59:16.196552",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_d096a916",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with general specific cache capability, involving cache, general specific aggregator capability - Instance task_d096a916",
      "test_input": {
        "data": {
          "values": [
            48,
            38,
            38,
            11,
            53
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "utility_cache",
        "data_processing_aggregator"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T10:59:13.652514",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_9e066932",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with Focus on monitoring network status, general specific helper capability, involving helper - Instance task_9e066932",
      "test_input": {
        "data": {
          "values": [
            86,
            68,
            100,
            59,
            95
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "utility_helper",
        "network_monitor"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T10:59:13.652382",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_7fd90ee2",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring data_processing_transformer, integration_mapper, utility_logger with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_7fd90ee2",
      "test_input": {
        "input_data": {
          "data": [
            0.4099679860302631,
            0.40778079829346026,
            0.779877849173226,
            0.1566382286118959,
            0.2455728267959848
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "integration_mapper",
        "utility_logger"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T10:59:13.651854",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_dc8541a8",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring data_processing_transformer, integration_mapper, utility_logger with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_dc8541a8",
      "test_input": {
        "input_data": {
          "data": [
            0.5861505354124102,
            0.7809682516594005,
            0.5613946351761185,
            0.6085444297251325,
            0.6538834669626203
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "integration_mapper",
        "utility_logger"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T10:59:13.651887",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_355782dc",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_355782dc",
      "test_input": {
        "input_data": {
          "data": [
            0.7488002554836063,
            0.6680027227900542,
            0.9344619647208663,
            0.002363083661624299,
            0.3732178846247617
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "computation_calculator",
        "data_processing_validator",
        "computation_analyzer"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T10:59:16.572519",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_8461398f",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with Focus on monitoring network status, general specific helper capability, involving helper - Instance task_8461398f",
      "test_input": {
        "data": {
          "values": [
            81,
            68,
            46,
            5,
            40
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "utility_helper",
        "network_monitor"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T10:59:13.652077",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_d0cadd5d",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_d0cadd5d",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T10:59:16.206877",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_c1404db1",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_c1404db1",
      "test_input": {
        "input_data": {
          "data": [
            0.08767470741159344,
            0.9774685909591194,
            0.5439993373122931,
            0.1270656987393769,
            0.4521080104588546
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "computation_calculator",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T10:59:16.581079",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_c90df13a",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_c90df13a",
      "test_input": {
        "input_data": {
          "data": [
            0.3125046997687101,
            0.9389703021295677,
            0.8518957995114784,
            0.9435300874852521,
            0.8506406729732997
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "computation_calculator",
        "data_processing_validator",
        "computation_analyzer"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T10:59:16.581788",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_54112c2e",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring data_processing_filter with involving filter data, Can handle large datasets efficiently by reducing the amount of data processed., Applies transformations to data based on filtering options. - Instance task_54112c2e",
      "test_input": {
        "input_data": {
          "data": [
            0.10578254101794304,
            0.658192716859941,
            0.3851252053038394,
            0.6466321744137156,
            0.5306127779903508
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "data_processing_filter"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T10:59:13.651630",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_9ff1b488",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with involving connector, general specific connector capability, Applies transformations to data based on filtering options. - Instance task_9ff1b488",
      "test_input": {
        "data": {
          "values": [
            47,
            62,
            73,
            57,
            67
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "integration_connector",
        "data_processing_filter"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T10:59:13.652464",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_a7c525b7",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_a7c525b7",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T10:59:16.207052",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_393fba61",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with involving connector, general specific connector capability, Applies transformations to data based on filtering options. - Instance task_393fba61",
      "test_input": {
        "data": {
          "values": [
            86,
            8,
            9,
            47,
            43
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "integration_connector",
        "data_processing_filter"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T10:59:13.652619",
        "timeout": 60,
        "semantic_generation": true
      }
    }
  ],
  "metadata": {
    "generated_at": "2025-07-09T10:59:16.584891",
    "num_tasks": 500,
    "task_distribution": {
      "basic_task": 0.2,
      "simple_task": 0.2,
      "data_pipeline": 0.2,
      "api_integration": 0.2,
      "multi_stage_pipeline": 0.2
    },
    "generator_version": "2.0"
  }
}