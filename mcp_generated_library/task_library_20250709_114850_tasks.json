{
  "tasks": [
    {
      "id": "task_4394666b",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_4394666b",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T11:48:52.007974",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_3ed2a95c",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_3ed2a95c",
      "test_input": {
        "input_data": {
          "data": [
            0.2969543207279439,
            0.8034219257574967,
            0.56686108164693,
            0.8926862940125823,
            0.6167957068216208
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T11:48:52.769046",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_668e7871",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_668e7871",
      "test_input": {
        "input_data": {
          "data": [
            0.9957123008796417,
            0.004458715033059835,
            0.8124976877969056,
            0.0019152796869673638,
            0.10204758783746282
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "computation_calculator",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T11:48:52.770081",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_5901769f",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_5901769f",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.3827239084821662
            },
            {
              "id": 1,
              "value": 0.9525706773189078
            },
            {
              "id": 2,
              "value": 0.9507192843184824
            },
            {
              "id": 3,
              "value": 0.2377020193553231
            },
            {
              "id": 4,
              "value": 0.6935561892637074
            },
            {
              "id": 5,
              "value": 0.5825417113124962
            },
            {
              "id": 6,
              "value": 0.2724523618180147
            },
            {
              "id": 7,
              "value": 0.2111944195233274
            },
            {
              "id": 8,
              "value": 0.7550445998433196
            },
            {
              "id": 9,
              "value": 0.4313449086749427
            }
          ]
        },
        "output_format": "xml",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T11:48:52.001628",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_bb9e9b5a",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_bb9e9b5a",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T11:48:52.008331",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_d1f4d7c2",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring computation_optimizer, utility_helper with general specific helper capability, involving optimizer, general specific optimizer capability - Instance task_d1f4d7c2",
      "test_input": {
        "input_data": {
          "data": [
            0.5343267522552895,
            0.4707761787938388,
            0.8687320456202186,
            0.2513146606346319,
            0.9204168509402543
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "computation_optimizer",
        "utility_helper"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T11:48:50.888161",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_79d01163",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring integration_connector, computation_optimizer, data_processing_transformer with involving connector, general specific connector capability, general specific optimizer capability - Instance task_79d01163",
      "test_input": {
        "input_data": {
          "data": [
            0.7748732291303749,
            0.04344316372925505,
            0.7631187668685984,
            0.4477876894971484,
            0.06859634457893016
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "integration_connector",
        "computation_optimizer",
        "data_processing_transformer"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T11:48:50.887821",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_5c9c58b3",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring computation_optimizer, utility_helper with general specific helper capability, involving optimizer, general specific optimizer capability - Instance task_5c9c58b3",
      "test_input": {
        "input_data": {
          "data": [
            0.05651416749907012,
            0.29762972191801473,
            0.8379126505750137,
            0.03514608894181259,
            0.5166883184405888
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "computation_optimizer",
        "utility_helper"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T11:48:50.886795",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_acdfff0e",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring integration_connector, computation_optimizer, data_processing_transformer with involving connector, general specific connector capability, general specific optimizer capability - Instance task_acdfff0e",
      "test_input": {
        "input_data": {
          "data": [
            0.46521648940025595,
            0.20316730210095402,
            0.6108572020583302,
            0.3913918516295246,
            0.5726494648120842
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "integration_connector",
        "computation_optimizer",
        "data_processing_transformer"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T11:48:50.887895",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_6f2f4d8e",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with general specific helper capability, general specific queue capability, involving helper - Instance task_6f2f4d8e",
      "test_input": {
        "data": {
          "values": [
            43,
            18,
            76,
            26,
            99
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "utility_helper",
        "integration_queue"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T11:48:50.888327",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_15b68be7",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_15b68be7",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T11:48:52.008252",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_6d4df958",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_6d4df958",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T11:48:52.008010",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_f5765a9f",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with general specific converter capability, general specific scheduler capability, involving scheduler - Instance task_f5765a9f",
      "test_input": {
        "data": {
          "values": [
            52,
            27,
            31,
            53,
            70
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "integration_scheduler",
        "file_operations_converter"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T11:48:50.888645",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_d2d283ff",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring integration_connector, computation_optimizer, data_processing_transformer with involving connector, general specific connector capability, general specific optimizer capability - Instance task_d2d283ff",
      "test_input": {
        "input_data": {
          "data": [
            0.5106910202620255,
            0.8978412845123962,
            0.03705048450465365,
            0.009369252353546353,
            0.21767809775432867
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "integration_connector",
        "computation_optimizer",
        "data_processing_transformer"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T11:48:50.888213",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_628c6437",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_628c6437",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.7038072719300548
            },
            {
              "id": 1,
              "value": 0.6252841649608522
            },
            {
              "id": 2,
              "value": 0.3981869163992504
            },
            {
              "id": 3,
              "value": 0.6596735113772367
            },
            {
              "id": 4,
              "value": 0.9050653422381445
            },
            {
              "id": 5,
              "value": 0.3131955095604586
            },
            {
              "id": 6,
              "value": 0.48714689002255107
            },
            {
              "id": 7,
              "value": 0.19926767670124124
            },
            {
              "id": 8,
              "value": 0.6962221350452047
            },
            {
              "id": 9,
              "value": 0.4888596930514596
            }
          ]
        },
        "output_format": "xml",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "computation_analyzer",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T11:48:52.006799",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_28864ef2",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_28864ef2",
      "test_input": {
        "input_data": {
          "data": [
            0.3506245850486521,
            0.7549963379975094,
            0.2273391637679787,
            0.5467922585940942,
            0.48959108346482705
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "computation_calculator",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T11:48:52.768551",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_017f75f7",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring computation_optimizer, utility_helper with general specific helper capability, involving optimizer, general specific optimizer capability - Instance task_017f75f7",
      "test_input": {
        "input_data": {
          "data": [
            0.7952506367634473,
            0.6184596943169093,
            0.35770349499246434,
            0.047105266811027,
            0.7728539353174764
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "computation_optimizer",
        "utility_helper"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T11:48:50.888109",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_ca31c8d6",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_ca31c8d6",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T11:48:52.007712",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_68bd7c50",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_68bd7c50",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T11:48:52.008802",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_bc6068f8",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with general specific scheduler capability, involving router, general specific router capability - Instance task_bc6068f8",
      "test_input": {
        "data": {
          "values": [
            90,
            45,
            17,
            51,
            22
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "network_router",
        "integration_scheduler"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T11:48:50.888804",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_fbc0d178",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring file_operations_writer, integration_scheduler, network_router with involving writer, general specific scheduler capability, general specific writer capability - Instance task_fbc0d178",
      "test_input": {
        "input_data": {
          "data": [
            0.4543587833930981,
            0.19814619587509907,
            0.21793832096871224,
            0.8526504773234241,
            0.623868130274034
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "file_operations_writer",
        "integration_scheduler",
        "network_router"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T11:48:50.887692",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_511d1934",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_511d1934",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.5664323458841999
            },
            {
              "id": 1,
              "value": 0.08467341659875882
            },
            {
              "id": 2,
              "value": 0.2918388133499654
            },
            {
              "id": 3,
              "value": 0.34960333243906194
            },
            {
              "id": 4,
              "value": 0.26003258675349517
            },
            {
              "id": 5,
              "value": 0.3134969051415122
            },
            {
              "id": 6,
              "value": 0.8934727716974344
            },
            {
              "id": 7,
              "value": 0.8386260795998028
            },
            {
              "id": 8,
              "value": 0.24496660978674478
            },
            {
              "id": 9,
              "value": 0.1671951024070938
            }
          ]
        },
        "output_format": "xml",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T11:48:52.002206",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_707e76b3",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_707e76b3",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T11:48:52.007785",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_fd6c0099",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with general specific converter capability, general specific scheduler capability, involving scheduler - Instance task_fd6c0099",
      "test_input": {
        "data": {
          "values": [
            77,
            19,
            65,
            24,
            62
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "integration_scheduler",
        "file_operations_converter"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T11:48:50.889099",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_d08fb8da",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with general specific scheduler capability, involving router, general specific router capability - Instance task_d08fb8da",
      "test_input": {
        "data": {
          "values": [
            67,
            18,
            78,
            98,
            7
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "network_router",
        "integration_scheduler"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T11:48:50.888511",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_af906f6f",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_af906f6f",
      "test_input": {
        "input_data": {
          "data": [
            0.6111023855240111,
            0.9645858930567069,
            0.770146403876412,
            0.31390221418432085,
            0.6244305730398376
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "computation_calculator",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T11:48:52.773799",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_73d2b3ea",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_73d2b3ea",
      "test_input": {
        "input_data": {
          "data": [
            0.32537453010516115,
            0.1298820095092187,
            0.5991545674817648,
            0.0906444695883184,
            0.0800844528224316
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "computation_calculator",
        "data_processing_validator",
        "computation_analyzer"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T11:48:52.775485",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_d8718450",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with general specific converter capability, general specific scheduler capability, involving scheduler - Instance task_d8718450",
      "test_input": {
        "data": {
          "values": [
            12,
            87,
            8,
            90,
            82
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "integration_scheduler",
        "file_operations_converter"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T11:48:50.888884",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_0d8620c0",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with general specific helper capability, general specific queue capability, involving helper - Instance task_0d8620c0",
      "test_input": {
        "data": {
          "values": [
            88,
            24,
            26,
            88,
            11
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "utility_helper",
        "integration_queue"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T11:48:50.889014",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_df5c022d",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_df5c022d",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T11:48:52.007924",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_987e3fb9",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring integration_connector, computation_optimizer, data_processing_transformer with involving connector, general specific connector capability, general specific optimizer capability - Instance task_987e3fb9",
      "test_input": {
        "input_data": {
          "data": [
            0.08394429239147949,
            0.32901099662789557,
            0.4597749449689382,
            0.03131518630671215,
            0.8691589669719808
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "integration_connector",
        "computation_optimizer",
        "data_processing_transformer"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T11:48:50.886972",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_ae2e36b7",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_ae2e36b7",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.5743205203395917
            },
            {
              "id": 1,
              "value": 0.9480172076334821
            },
            {
              "id": 2,
              "value": 0.6692320549645319
            },
            {
              "id": 3,
              "value": 0.9940854949438709
            },
            {
              "id": 4,
              "value": 0.25938815263532433
            },
            {
              "id": 5,
              "value": 0.6657211130222875
            },
            {
              "id": 6,
              "value": 0.8298364136110709
            },
            {
              "id": 7,
              "value": 0.9299443872062995
            },
            {
              "id": 8,
              "value": 0.27493889857275244
            },
            {
              "id": 9,
              "value": 0.9229449797701181
            }
          ]
        },
        "output_format": "xml",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "computation_analyzer",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T11:48:51.997385",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_7937a5fc",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with general specific converter capability, general specific scheduler capability, involving scheduler - Instance task_7937a5fc",
      "test_input": {
        "data": {
          "values": [
            48,
            75,
            33,
            21,
            13
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "integration_scheduler",
        "file_operations_converter"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T11:48:50.889211",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_fa85f0ee",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring computation_optimizer, utility_helper with general specific helper capability, involving optimizer, general specific optimizer capability - Instance task_fa85f0ee",
      "test_input": {
        "input_data": {
          "data": [
            0.7314405385674542,
            0.17758448064716414,
            0.986015609736446,
            0.1357128001545329,
            0.31622723090810256
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "computation_optimizer",
        "utility_helper"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T11:48:50.886810",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_172dbff9",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_172dbff9",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T11:48:52.007579",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_c310fec5",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with general specific scheduler capability, involving router, general specific router capability - Instance task_c310fec5",
      "test_input": {
        "data": {
          "values": [
            9,
            45,
            86,
            21,
            86
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "network_router",
        "integration_scheduler"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T11:48:50.888949",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_d4068426",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_d4068426",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T11:48:52.008364",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_792b534c",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_792b534c",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.8627522226212491
            },
            {
              "id": 1,
              "value": 0.3554853489213572
            },
            {
              "id": 2,
              "value": 0.29155474019542027
            },
            {
              "id": 3,
              "value": 0.5321474613747715
            },
            {
              "id": 4,
              "value": 0.1771704903923088
            },
            {
              "id": 5,
              "value": 0.7642818554472857
            },
            {
              "id": 6,
              "value": 0.7538079736916576
            },
            {
              "id": 7,
              "value": 0.8449716439907458
            },
            {
              "id": 8,
              "value": 0.5608746360695867
            },
            {
              "id": 9,
              "value": 0.18832860955686748
            }
          ]
        },
        "output_format": "json",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T11:48:52.001240",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_2e12bb82",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_2e12bb82",
      "test_input": {
        "input_data": {
          "data": [
            0.6469976658246132,
            0.04161719218254689,
            0.3412598003644719,
            0.852484712503745,
            0.920162375857628
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "computation_calculator",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T11:48:52.766612",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_0b4f093a",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring computation_optimizer, utility_helper with general specific helper capability, involving optimizer, general specific optimizer capability - Instance task_0b4f093a",
      "test_input": {
        "input_data": {
          "data": [
            0.9110449202474572,
            0.3913455249746157,
            0.3605431987259369,
            0.5962843000425809,
            0.12864933548563418
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "computation_optimizer",
        "utility_helper"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T11:48:50.886898",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_2e9e00dc",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with general specific scheduler capability, involving router, general specific router capability - Instance task_2e9e00dc",
      "test_input": {
        "data": {
          "values": [
            75,
            60,
            12,
            48,
            30
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "network_router",
        "integration_scheduler"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T11:48:50.888266",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_32e71c61",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_32e71c61",
      "test_input": {
        "input_data": {
          "data": [
            0.32222915630473825,
            0.557119323949809,
            0.015597954373687828,
            0.6447709472186932,
            0.42038708960099425
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "computation_calculator",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T11:48:52.767677",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_80b00f19",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring computation_optimizer, utility_helper with general specific helper capability, involving optimizer, general specific optimizer capability - Instance task_80b00f19",
      "test_input": {
        "input_data": {
          "data": [
            0.43861223312812425,
            0.05458372960286062,
            0.14810008604276437,
            0.7092848636889753,
            0.5267843025236334
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "computation_optimizer",
        "utility_helper"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T11:48:50.886716",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_e3dcf708",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with general specific converter capability, general specific scheduler capability, involving scheduler - Instance task_e3dcf708",
      "test_input": {
        "data": {
          "values": [
            82,
            13,
            10,
            1,
            44
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "integration_scheduler",
        "file_operations_converter"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T11:48:50.888480",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_4438ec75",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_4438ec75",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T11:48:52.007556",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_e6829c41",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring file_operations_writer, integration_scheduler, network_router with involving writer, general specific scheduler capability, general specific writer capability - Instance task_e6829c41",
      "test_input": {
        "input_data": {
          "data": [
            0.554176829670941,
            0.2232762380312764,
            0.9489139329455186,
            0.3428427543975908,
            0.6976530084287628
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "file_operations_writer",
        "integration_scheduler",
        "network_router"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T11:48:50.886877",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_241a7dd7",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring computation_optimizer, utility_helper with general specific helper capability, involving optimizer, general specific optimizer capability - Instance task_241a7dd7",
      "test_input": {
        "input_data": {
          "data": [
            0.572574154814657,
            0.15010633105565063,
            0.24866773706178535,
            0.659991994454094,
            0.9235739239467616
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "computation_optimizer",
        "utility_helper"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T11:48:50.887658",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_d84c478b",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with general specific helper capability, general specific queue capability, involving helper - Instance task_d84c478b",
      "test_input": {
        "data": {
          "values": [
            33,
            89,
            30,
            70,
            72
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "utility_helper",
        "integration_queue"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T11:48:50.889057",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_7c11532f",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_7c11532f",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T11:48:52.007967",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_e9cf1d4c",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_e9cf1d4c",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.7282622391345029
            },
            {
              "id": 1,
              "value": 0.5422157837414198
            },
            {
              "id": 2,
              "value": 0.21406058605692202
            },
            {
              "id": 3,
              "value": 0.47459161591321086
            },
            {
              "id": 4,
              "value": 0.9701124727990142
            },
            {
              "id": 5,
              "value": 0.9811883592089423
            },
            {
              "id": 6,
              "value": 0.6627343815252571
            },
            {
              "id": 7,
              "value": 0.7986524849186287
            },
            {
              "id": 8,
              "value": 0.6404172498913058
            },
            {
              "id": 9,
              "value": 0.10209809269234682
            }
          ]
        },
        "output_format": "csv",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T11:48:52.004572",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_305886ee",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_305886ee",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.13553335741143258
            },
            {
              "id": 1,
              "value": 0.23494867026894162
            },
            {
              "id": 2,
              "value": 0.0504439562449398
            },
            {
              "id": 3,
              "value": 0.2861499140784951
            },
            {
              "id": 4,
              "value": 0.6212276448886045
            },
            {
              "id": 5,
              "value": 0.2441541670414763
            },
            {
              "id": 6,
              "value": 0.5741301108377865
            },
            {
              "id": 7,
              "value": 0.312937421988863
            },
            {
              "id": 8,
              "value": 0.7900930020075181
            },
            {
              "id": 9,
              "value": 0.22338748364333538
            }
          ]
        },
        "output_format": "json",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T11:48:51.999194",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_6c915a5c",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring computation_optimizer, utility_helper with general specific helper capability, involving optimizer, general specific optimizer capability - Instance task_6c915a5c",
      "test_input": {
        "input_data": {
          "data": [
            0.34630705312039234,
            0.5664438801250353,
            0.5300731863362592,
            0.12590447424917528,
            0.6617919755896646
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "computation_optimizer",
        "utility_helper"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T11:48:50.887778",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_980691b7",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_980691b7",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T11:48:52.007682",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_f1735b70",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_f1735b70",
      "test_input": {
        "input_data": {
          "data": [
            0.4923729525827516,
            0.9512405806062926,
            0.2287885974089393,
            0.09391805424282529,
            0.6753687307710605
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T11:48:52.770656",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_f3b8554b",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_f3b8554b",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T11:48:52.007916",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_a9805799",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with general specific converter capability, general specific scheduler capability, involving scheduler - Instance task_a9805799",
      "test_input": {
        "data": {
          "values": [
            69,
            55,
            55,
            88,
            11
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "integration_scheduler",
        "file_operations_converter"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T11:48:50.889158",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_afa5a988",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_afa5a988",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T11:48:52.008322",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_5e72f8f5",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_5e72f8f5",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T11:48:52.008017",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_045247d9",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with general specific scheduler capability, involving router, general specific router capability - Instance task_045247d9",
      "test_input": {
        "data": {
          "values": [
            51,
            98,
            41,
            18,
            43
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "network_router",
        "integration_scheduler"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T11:48:50.889385",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_0f9b0099",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_0f9b0099",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.7968567695568328
            },
            {
              "id": 1,
              "value": 0.5110265456215701
            },
            {
              "id": 2,
              "value": 0.15123465936283986
            },
            {
              "id": 3,
              "value": 0.3468173617157245
            },
            {
              "id": 4,
              "value": 0.03918657397441949
            },
            {
              "id": 5,
              "value": 0.4749697777771589
            },
            {
              "id": 6,
              "value": 0.43929177293323973
            },
            {
              "id": 7,
              "value": 0.03144316059677166
            },
            {
              "id": 8,
              "value": 0.41778068373735766
            },
            {
              "id": 9,
              "value": 0.9116341647543738
            }
          ]
        },
        "output_format": "json",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "computation_analyzer",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T11:48:51.998494",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_e620fbc0",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_e620fbc0",
      "test_input": {
        "input_data": {
          "data": [
            0.08735212847204654,
            0.4583968088978736,
            0.2655682337093995,
            0.16790656726789888,
            0.24844715019843122
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "computation_calculator",
        "data_processing_validator",
        "computation_analyzer",
        "network_poster"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T11:48:52.765556",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_a779ed08",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with general specific scheduler capability, involving router, general specific router capability - Instance task_a779ed08",
      "test_input": {
        "data": {
          "values": [
            22,
            44,
            75,
            26,
            1
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "network_router",
        "integration_scheduler"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T11:48:50.888457",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_263ec562",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_263ec562",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.5682227896686981
            },
            {
              "id": 1,
              "value": 0.6752550844461731
            },
            {
              "id": 2,
              "value": 0.8862627194260546
            },
            {
              "id": 3,
              "value": 0.586034751677109
            },
            {
              "id": 4,
              "value": 0.02757392062954911
            },
            {
              "id": 5,
              "value": 0.885626239827793
            },
            {
              "id": 6,
              "value": 0.829410663602997
            },
            {
              "id": 7,
              "value": 0.5607161838959331
            },
            {
              "id": 8,
              "value": 0.6922070018981412
            },
            {
              "id": 9,
              "value": 0.8255693919694693
            }
          ]
        },
        "output_format": "csv",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T11:48:52.003163",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_c6bc8afe",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_c6bc8afe",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.28500319079978587
            },
            {
              "id": 1,
              "value": 0.5818722819605265
            },
            {
              "id": 2,
              "value": 0.6410164244989048
            },
            {
              "id": 3,
              "value": 0.019027964677423848
            },
            {
              "id": 4,
              "value": 0.004123857443244505
            },
            {
              "id": 5,
              "value": 0.7651314853382194
            },
            {
              "id": 6,
              "value": 0.3314698946961122
            },
            {
              "id": 7,
              "value": 0.11382043757588178
            },
            {
              "id": 8,
              "value": 0.28232276842728576
            },
            {
              "id": 9,
              "value": 0.929443862231955
            }
          ]
        },
        "output_format": "xml",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T11:48:52.000568",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_d021a700",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with general specific helper capability, general specific queue capability, involving helper - Instance task_d021a700",
      "test_input": {
        "data": {
          "values": [
            48,
            91,
            7,
            84,
            64
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "utility_helper",
        "integration_queue"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T11:48:50.888531",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_546b5c63",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_546b5c63",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T11:48:52.007726",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_bbc94309",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_bbc94309",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T11:48:52.007806",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_912dc915",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_912dc915",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T11:48:52.007653",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_67dcfa63",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with general specific helper capability, general specific queue capability, involving helper - Instance task_67dcfa63",
      "test_input": {
        "data": {
          "values": [
            48,
            51,
            59,
            21,
            29
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "utility_helper",
        "integration_queue"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T11:48:50.888782",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_8dab698f",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_8dab698f",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.12668887472537604
            },
            {
              "id": 1,
              "value": 0.649453975783266
            },
            {
              "id": 2,
              "value": 0.2700498487158851
            },
            {
              "id": 3,
              "value": 0.44291568721963614
            },
            {
              "id": 4,
              "value": 0.8712354865997283
            },
            {
              "id": 5,
              "value": 0.35271766744844524
            },
            {
              "id": 6,
              "value": 0.9686104417527037
            },
            {
              "id": 7,
              "value": 0.12050007774516203
            },
            {
              "id": 8,
              "value": 0.34998864847959954
            },
            {
              "id": 9,
              "value": 0.07583829819213139
            }
          ]
        },
        "output_format": "json",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "computation_analyzer",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T11:48:52.005663",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_60db9ee3",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring integration_connector, computation_optimizer, data_processing_transformer with involving connector, general specific connector capability, general specific optimizer capability - Instance task_60db9ee3",
      "test_input": {
        "input_data": {
          "data": [
            0.25828557511239325,
            0.44189583450873926,
            0.7071110690918383,
            0.012513879237009307,
            0.9274544308581533
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "integration_connector",
        "computation_optimizer",
        "data_processing_transformer"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T11:48:50.886697",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_77032b7f",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring integration_connector, computation_optimizer, data_processing_transformer with involving connector, general specific connector capability, general specific optimizer capability - Instance task_77032b7f",
      "test_input": {
        "input_data": {
          "data": [
            0.08131961748422423,
            0.11411062659675175,
            0.05302404818232542,
            0.970268261745064,
            0.48955602406336407
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "integration_connector",
        "computation_optimizer",
        "data_processing_transformer"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T11:48:50.888135",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_b21f551f",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_b21f551f",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.19776600582991632
            },
            {
              "id": 1,
              "value": 0.7125725674830342
            },
            {
              "id": 2,
              "value": 0.016713350312197783
            },
            {
              "id": 3,
              "value": 0.791610846059474
            },
            {
              "id": 4,
              "value": 0.8698201840645126
            },
            {
              "id": 5,
              "value": 0.3814616219001946
            },
            {
              "id": 6,
              "value": 0.5257961181555385
            },
            {
              "id": 7,
              "value": 0.8051819992413185
            },
            {
              "id": 8,
              "value": 0.389272479554865
            },
            {
              "id": 9,
              "value": 0.38383848355718575
            }
          ]
        },
        "output_format": "csv",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T11:48:52.006232",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_16c4a1b7",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_16c4a1b7",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T11:48:52.007835",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_093f2bbf",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_093f2bbf",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T11:48:52.008031",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_5a07bc68",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_5a07bc68",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.5130142023893121
            },
            {
              "id": 1,
              "value": 0.42452502800789915
            },
            {
              "id": 2,
              "value": 0.5561152531165081
            },
            {
              "id": 3,
              "value": 0.8017190332491416
            },
            {
              "id": 4,
              "value": 0.9267477287363728
            },
            {
              "id": 5,
              "value": 0.943643347407225
            },
            {
              "id": 6,
              "value": 0.8104537472116737
            },
            {
              "id": 7,
              "value": 0.9050162984643161
            },
            {
              "id": 8,
              "value": 0.5639005340399084
            },
            {
              "id": 9,
              "value": 0.9383188734644483
            }
          ]
        },
        "output_format": "json",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "computation_analyzer",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T11:48:51.999948",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_893197f2",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with general specific helper capability, general specific queue capability, involving helper - Instance task_893197f2",
      "test_input": {
        "data": {
          "values": [
            46,
            54,
            53,
            81,
            26
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "utility_helper",
        "integration_queue"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T11:48:50.888793",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_cc352675",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with general specific converter capability, general specific scheduler capability, involving scheduler - Instance task_cc352675",
      "test_input": {
        "data": {
          "values": [
            96,
            18,
            31,
            15,
            36
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "integration_scheduler",
        "file_operations_converter"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T11:48:50.888720",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_fe16c8e8",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with general specific helper capability, general specific queue capability, involving helper - Instance task_fe16c8e8",
      "test_input": {
        "data": {
          "values": [
            67,
            20,
            18,
            64,
            36
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "utility_helper",
        "integration_queue"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T11:48:50.888667",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_e89c1567",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring integration_connector, computation_optimizer, data_processing_transformer with involving connector, general specific connector capability, general specific optimizer capability - Instance task_e89c1567",
      "test_input": {
        "input_data": {
          "data": [
            0.09838664690916121,
            0.40992988916289697,
            0.721815942304147,
            0.5357985051380125,
            0.034013486522258884
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "integration_connector",
        "computation_optimizer",
        "data_processing_transformer"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T11:48:50.887561",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_5eccbcc4",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_5eccbcc4",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.5525691935102476
            },
            {
              "id": 1,
              "value": 0.3977432575835156
            },
            {
              "id": 2,
              "value": 0.8603196917105936
            },
            {
              "id": 3,
              "value": 0.9429124178046967
            },
            {
              "id": 4,
              "value": 0.9835754308705142
            },
            {
              "id": 5,
              "value": 0.7569228607969005
            },
            {
              "id": 6,
              "value": 0.9256340432645725
            },
            {
              "id": 7,
              "value": 0.8836485934381887
            },
            {
              "id": 8,
              "value": 0.6090701459822059
            },
            {
              "id": 9,
              "value": 0.14410327688168423
            }
          ]
        },
        "output_format": "json",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T11:48:52.001543",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_9344f229",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with general specific converter capability, general specific scheduler capability, involving scheduler - Instance task_9344f229",
      "test_input": {
        "data": {
          "values": [
            29,
            96,
            47,
            64,
            5
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "integration_scheduler",
        "file_operations_converter"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T11:48:50.888314",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_598655ac",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_598655ac",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.940497150443344
            },
            {
              "id": 1,
              "value": 0.8242057095704702
            },
            {
              "id": 2,
              "value": 0.1939311018928761
            },
            {
              "id": 3,
              "value": 0.204027361916008
            },
            {
              "id": 4,
              "value": 0.3616515144770045
            },
            {
              "id": 5,
              "value": 0.9832144656241075
            },
            {
              "id": 6,
              "value": 0.41451896942760724
            },
            {
              "id": 7,
              "value": 0.09967892061780692
            },
            {
              "id": 8,
              "value": 0.6097743499898777
            },
            {
              "id": 9,
              "value": 0.9462629085264274
            }
          ]
        },
        "output_format": "xml",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T11:48:52.000909",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_b1806010",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_b1806010",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T11:48:52.008313",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_d9d24bd7",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_d9d24bd7",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.7881512966349388
            },
            {
              "id": 1,
              "value": 0.018350277379301505
            },
            {
              "id": 2,
              "value": 0.47691074911032105
            },
            {
              "id": 3,
              "value": 0.7625136405980447
            },
            {
              "id": 4,
              "value": 0.4198982933890415
            },
            {
              "id": 5,
              "value": 0.07631083686204898
            },
            {
              "id": 6,
              "value": 0.7670906119642441
            },
            {
              "id": 7,
              "value": 0.8501154786269303
            },
            {
              "id": 8,
              "value": 0.2883054606046781
            },
            {
              "id": 9,
              "value": 0.28686194616109484
            }
          ]
        },
        "output_format": "xml",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "computation_analyzer",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T11:48:52.005563",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_882a6ad2",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring integration_connector, computation_optimizer, data_processing_transformer with involving connector, general specific connector capability, general specific optimizer capability - Instance task_882a6ad2",
      "test_input": {
        "input_data": {
          "data": [
            0.3321426016810981,
            0.7473156501573051,
            0.2057496104510257,
            0.6976036260318834,
            0.3623092826754427
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "integration_connector",
        "computation_optimizer",
        "data_processing_transformer"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T11:48:50.887922",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_4ec595a6",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with general specific helper capability, general specific queue capability, involving helper - Instance task_4ec595a6",
      "test_input": {
        "data": {
          "values": [
            3,
            73,
            40,
            12,
            6
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "utility_helper",
        "integration_queue"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T11:48:50.888938",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_5d6caf53",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_5d6caf53",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T11:48:52.007828",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_853b0c3e",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_853b0c3e",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T11:48:52.007601",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_6239ba26",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with general specific scheduler capability, involving router, general specific router capability - Instance task_6239ba26",
      "test_input": {
        "data": {
          "values": [
            32,
            68,
            81,
            39,
            58
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "network_router",
        "integration_scheduler"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T11:48:50.888445",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_8dd80287",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_8dd80287",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.9071714632855268
            },
            {
              "id": 1,
              "value": 0.4145643024938598
            },
            {
              "id": 2,
              "value": 0.8492438600873083
            },
            {
              "id": 3,
              "value": 0.027950022401589947
            },
            {
              "id": 4,
              "value": 0.8516875940909717
            },
            {
              "id": 5,
              "value": 0.37530882006321253
            },
            {
              "id": 6,
              "value": 0.2750720715057803
            },
            {
              "id": 7,
              "value": 0.2003004922531223
            },
            {
              "id": 8,
              "value": 0.6567491785636627
            },
            {
              "id": 9,
              "value": 0.356002523972899
            }
          ]
        },
        "output_format": "xml",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T11:48:51.999382",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_d350144d",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_d350144d",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.20323547950153797
            },
            {
              "id": 1,
              "value": 0.6728626723150348
            },
            {
              "id": 2,
              "value": 0.2648171281428031
            },
            {
              "id": 3,
              "value": 0.2771999593533364
            },
            {
              "id": 4,
              "value": 0.661118521504631
            },
            {
              "id": 5,
              "value": 0.4044321140667131
            },
            {
              "id": 6,
              "value": 0.8960202445510767
            },
            {
              "id": 7,
              "value": 0.76127229721846
            },
            {
              "id": 8,
              "value": 0.674759576856815
            },
            {
              "id": 9,
              "value": 0.38488439060898616
            }
          ]
        },
        "output_format": "csv",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "computation_analyzer",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T11:48:52.002608",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_4fc09946",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_4fc09946",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T11:48:52.007733",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_3ddcdcb4",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_3ddcdcb4",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T11:48:52.008221",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_2c48a871",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with general specific converter capability, general specific scheduler capability, involving scheduler - Instance task_2c48a871",
      "test_input": {
        "data": {
          "values": [
            55,
            84,
            12,
            38,
            42
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "integration_scheduler",
        "file_operations_converter"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T11:48:50.889364",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_e0a898d9",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with general specific scheduler capability, involving router, general specific router capability - Instance task_e0a898d9",
      "test_input": {
        "data": {
          "values": [
            64,
            19,
            32,
            94,
            80
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "network_router",
        "integration_scheduler"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T11:48:50.888412",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_28f74bd3",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring file_operations_writer, integration_scheduler, network_router with involving writer, general specific scheduler capability, general specific writer capability - Instance task_28f74bd3",
      "test_input": {
        "input_data": {
          "data": [
            0.5694131053041853,
            0.5363575237913958,
            0.4480163733856186,
            0.5918097930108653,
            0.203638721469532
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "file_operations_writer",
        "integration_scheduler",
        "network_router"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T11:48:50.888179",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_06661997",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_06661997",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.6613113739045163
            },
            {
              "id": 1,
              "value": 0.9836531436350925
            },
            {
              "id": 2,
              "value": 0.657467941439303
            },
            {
              "id": 3,
              "value": 0.2350369466253288
            },
            {
              "id": 4,
              "value": 0.20628918191505496
            },
            {
              "id": 5,
              "value": 0.5027241344170876
            },
            {
              "id": 6,
              "value": 0.927742522905703
            },
            {
              "id": 7,
              "value": 0.2433261002407101
            },
            {
              "id": 8,
              "value": 0.29278693579157555
            },
            {
              "id": 9,
              "value": 0.5042256355200138
            }
          ]
        },
        "output_format": "csv",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T11:48:52.005295",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_cf463bae",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_cf463bae",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.4127314625600562
            },
            {
              "id": 1,
              "value": 0.46415672503537186
            },
            {
              "id": 2,
              "value": 0.1948367097419107
            },
            {
              "id": 3,
              "value": 0.8470148674635731
            },
            {
              "id": 4,
              "value": 0.9776767231775522
            },
            {
              "id": 5,
              "value": 0.073225663697422
            },
            {
              "id": 6,
              "value": 0.38215124165268544
            },
            {
              "id": 7,
              "value": 0.17204860098230812
            },
            {
              "id": 8,
              "value": 0.9763768623717091
            },
            {
              "id": 9,
              "value": 0.3114713112863309
            }
          ]
        },
        "output_format": "xml",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T11:48:52.004740",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_d1eaaf3e",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_d1eaaf3e",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T11:48:52.007799",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_0e9cfa87",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_0e9cfa87",
      "test_input": {
        "input_data": {
          "data": [
            0.3706709474848119,
            0.6689500534579139,
            0.5408992351489601,
            0.8079826943122661,
            0.36262933066711867
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T11:48:52.771262",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_7ce33314",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_7ce33314",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T11:48:52.007615",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_8089e08f",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_8089e08f",
      "test_input": {
        "input_data": {
          "data": [
            0.6947709411996298,
            0.7995051392221734,
            0.5671145399867271,
            0.015969156095387627,
            0.5074032620425571
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T11:48:52.768857",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_3e6bcd37",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_3e6bcd37",
      "test_input": {
        "input_data": {
          "data": [
            0.09017896909483125,
            0.33993168641819993,
            0.36473922485845656,
            0.9972600755871982,
            0.09227109558061353
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "computation_calculator",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T11:48:52.772376",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_1da2ee8e",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_1da2ee8e",
      "test_input": {
        "input_data": {
          "data": [
            0.601008890409424,
            0.20119961369614203,
            0.7490320673507721,
            0.04312756422879538,
            0.7982917363819274
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "computation_calculator",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T11:48:52.766713",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_c147be1d",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_c147be1d",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.1470927360336063
            },
            {
              "id": 1,
              "value": 0.23958712265826232
            },
            {
              "id": 2,
              "value": 0.9194474172871203
            },
            {
              "id": 3,
              "value": 0.92955113804853
            },
            {
              "id": 4,
              "value": 0.9320246556604812
            },
            {
              "id": 5,
              "value": 0.09132647432131857
            },
            {
              "id": 6,
              "value": 0.26116802536896166
            },
            {
              "id": 7,
              "value": 0.6599020855570574
            },
            {
              "id": 8,
              "value": 0.019130180388536422
            },
            {
              "id": 9,
              "value": 0.0004840095024820634
            }
          ]
        },
        "output_format": "csv",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T11:48:51.999621",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_c9254ebb",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_c9254ebb",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.0030437020187196184
            },
            {
              "id": 1,
              "value": 0.20802786104653126
            },
            {
              "id": 2,
              "value": 0.40685425033801015
            },
            {
              "id": 3,
              "value": 0.36376017306459385
            },
            {
              "id": 4,
              "value": 0.6945923919209438
            },
            {
              "id": 5,
              "value": 0.7170648795303588
            },
            {
              "id": 6,
              "value": 0.17294233208762744
            },
            {
              "id": 7,
              "value": 0.4754481806385641
            },
            {
              "id": 8,
              "value": 0.3955411868821809
            },
            {
              "id": 9,
              "value": 0.6611955836382531
            }
          ]
        },
        "output_format": "json",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T11:48:52.005114",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_fad004bd",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with general specific scheduler capability, involving router, general specific router capability - Instance task_fad004bd",
      "test_input": {
        "data": {
          "values": [
            88,
            7,
            47,
            1,
            24
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "network_router",
        "integration_scheduler"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T11:48:50.889078",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_5134e66e",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with general specific helper capability, general specific queue capability, involving helper - Instance task_5134e66e",
      "test_input": {
        "data": {
          "values": [
            49,
            50,
            50,
            82,
            35
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "utility_helper",
        "integration_queue"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T11:48:50.888851",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_f1b4271d",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_f1b4271d",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T11:48:52.007894",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_b991dc09",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring file_operations_writer, integration_scheduler, network_router with involving writer, general specific scheduler capability, general specific writer capability - Instance task_b991dc09",
      "test_input": {
        "input_data": {
          "data": [
            0.35738785783056093,
            0.08451868920522854,
            0.7385921444927928,
            0.7882393957897162,
            0.555464290801341
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "file_operations_writer",
        "integration_scheduler",
        "network_router"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T11:48:50.888091",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_2f43ebca",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_2f43ebca",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T11:48:52.008147",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_10dac12f",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring file_operations_writer, integration_scheduler, network_router with involving writer, general specific scheduler capability, general specific writer capability - Instance task_10dac12f",
      "test_input": {
        "input_data": {
          "data": [
            0.1726862511627315,
            0.8728685249436782,
            0.19824010993304553,
            0.7023631067405784,
            0.302795112354327
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "file_operations_writer",
        "integration_scheduler",
        "network_router"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T11:48:50.887641",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_3d52ca1c",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_3d52ca1c",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.8763980880206309
            },
            {
              "id": 1,
              "value": 0.15746501680771907
            },
            {
              "id": 2,
              "value": 0.49326552518618905
            },
            {
              "id": 3,
              "value": 0.7193858507687693
            },
            {
              "id": 4,
              "value": 0.09201442648152924
            },
            {
              "id": 5,
              "value": 0.7798228235302475
            },
            {
              "id": 6,
              "value": 0.5376953109095982
            },
            {
              "id": 7,
              "value": 0.37869257753328
            },
            {
              "id": 8,
              "value": 0.25797262014432976
            },
            {
              "id": 9,
              "value": 0.11479806141788285
            }
          ]
        },
        "output_format": "xml",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "computation_analyzer",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T11:48:52.003961",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_5d9f52c0",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_5d9f52c0",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.14360991982273752
            },
            {
              "id": 1,
              "value": 0.80450021005185
            },
            {
              "id": 2,
              "value": 0.3747656809510539
            },
            {
              "id": 3,
              "value": 0.26048804997155106
            },
            {
              "id": 4,
              "value": 0.15999475272527663
            },
            {
              "id": 5,
              "value": 0.18523035672752386
            },
            {
              "id": 6,
              "value": 0.1184061271613448
            },
            {
              "id": 7,
              "value": 0.17967336548210266
            },
            {
              "id": 8,
              "value": 0.02969504904361464
            },
            {
              "id": 9,
              "value": 0.9675025653167931
            }
          ]
        },
        "output_format": "xml",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "computation_analyzer",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T11:48:52.007141",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_9ed7c96a",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_9ed7c96a",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T11:48:52.007777",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_727126e6",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring integration_connector, computation_optimizer, data_processing_transformer with involving connector, general specific connector capability, general specific optimizer capability - Instance task_727126e6",
      "test_input": {
        "input_data": {
          "data": [
            0.42278472884056517,
            0.9121899601088974,
            0.503973736651425,
            0.7605315341917102,
            0.36285401279563323
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "integration_connector",
        "computation_optimizer",
        "data_processing_transformer"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T11:48:50.887033",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_69d072fc",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_69d072fc",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.8994187606674423
            },
            {
              "id": 1,
              "value": 0.45209420966614167
            },
            {
              "id": 2,
              "value": 0.9780952261823793
            },
            {
              "id": 3,
              "value": 0.9045983162662083
            },
            {
              "id": 4,
              "value": 0.6272299616772167
            },
            {
              "id": 5,
              "value": 0.9042355344284974
            },
            {
              "id": 6,
              "value": 0.6181694466816764
            },
            {
              "id": 7,
              "value": 0.9370821495172915
            },
            {
              "id": 8,
              "value": 0.22103828895305933
            },
            {
              "id": 9,
              "value": 0.3007494430544889
            }
          ]
        },
        "output_format": "csv",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "computation_analyzer",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T11:48:52.001867",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_26287ee0",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with general specific helper capability, general specific queue capability, involving helper - Instance task_26287ee0",
      "test_input": {
        "data": {
          "values": [
            57,
            38,
            48,
            85,
            21
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "utility_helper",
        "integration_queue"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T11:48:50.889344",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_4d38582c",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with general specific helper capability, general specific queue capability, involving helper - Instance task_4d38582c",
      "test_input": {
        "data": {
          "values": [
            43,
            21,
            59,
            72,
            95
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "utility_helper",
        "integration_queue"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T11:48:50.889190",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_80c97710",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_80c97710",
      "test_input": {
        "input_data": {
          "data": [
            0.014306409491832484,
            0.9119738523806584,
            0.5628434443224795,
            0.5657421398472368,
            0.19949354203904313
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "computation_calculator",
        "data_processing_validator",
        "computation_analyzer"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T11:48:52.776015",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_65959c10",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring file_operations_writer, integration_scheduler, network_router with involving writer, general specific scheduler capability, general specific writer capability - Instance task_65959c10",
      "test_input": {
        "input_data": {
          "data": [
            0.5156558267254069,
            0.5092290600344797,
            0.6032628226601173,
            0.8620354071606278,
            0.4682292371003405
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "file_operations_writer",
        "integration_scheduler",
        "network_router"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T11:48:50.887812",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_97db98cc",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_97db98cc",
      "test_input": {
        "input_data": {
          "data": [
            0.09867094363705042,
            0.6529962187235244,
            0.5122411988456571,
            0.014752549162180273,
            0.7138279932451129
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T11:48:52.771944",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_826cddd6",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with general specific helper capability, general specific queue capability, involving helper - Instance task_826cddd6",
      "test_input": {
        "data": {
          "values": [
            86,
            17,
            2,
            98,
            73
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "utility_helper",
        "integration_queue"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T11:48:50.888709",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_cb4e3f74",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_cb4e3f74",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.959953959720007
            },
            {
              "id": 1,
              "value": 0.779944271375047
            },
            {
              "id": 2,
              "value": 0.9033361617206077
            },
            {
              "id": 3,
              "value": 0.1868576319163462
            },
            {
              "id": 4,
              "value": 0.7534951432192701
            },
            {
              "id": 5,
              "value": 0.8215389735029673
            },
            {
              "id": 6,
              "value": 0.3667863733632891
            },
            {
              "id": 7,
              "value": 0.9926245708609699
            },
            {
              "id": 8,
              "value": 0.6535067717749949
            },
            {
              "id": 9,
              "value": 0.5546426543810932
            }
          ]
        },
        "output_format": "json",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "computation_analyzer",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T11:48:52.000277",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_2089c580",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_2089c580",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.45893818092011196
            },
            {
              "id": 1,
              "value": 0.5335136348026138
            },
            {
              "id": 2,
              "value": 0.26277892543569326
            },
            {
              "id": 3,
              "value": 0.027771915252844614
            },
            {
              "id": 4,
              "value": 0.034809181875299466
            },
            {
              "id": 5,
              "value": 0.552525360316652
            },
            {
              "id": 6,
              "value": 0.9124097115021217
            },
            {
              "id": 7,
              "value": 0.0820088965854332
            },
            {
              "id": 8,
              "value": 0.7922793130340977
            },
            {
              "id": 9,
              "value": 0.7918469078537538
            }
          ]
        },
        "output_format": "xml",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T11:48:51.997622",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_6eafcafa",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_6eafcafa",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T11:48:52.007996",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_77737b5a",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_77737b5a",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.5453499712309319
            },
            {
              "id": 1,
              "value": 0.7523608581351339
            },
            {
              "id": 2,
              "value": 0.6364881173234437
            },
            {
              "id": 3,
              "value": 0.020429041175619167
            },
            {
              "id": 4,
              "value": 0.9547280937427965
            },
            {
              "id": 5,
              "value": 0.28849302231990726
            },
            {
              "id": 6,
              "value": 0.5924561497427014
            },
            {
              "id": 7,
              "value": 0.4206579120660612
            },
            {
              "id": 8,
              "value": 0.6530666518555516
            },
            {
              "id": 9,
              "value": 0.39509612598082144
            }
          ]
        },
        "output_format": "xml",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T11:48:52.001322",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_c8d6237e",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_c8d6237e",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T11:48:52.007586",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_d4ca45fb",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with general specific scheduler capability, involving router, general specific router capability - Instance task_d4ca45fb",
      "test_input": {
        "data": {
          "values": [
            80,
            6,
            52,
            94,
            94
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "network_router",
        "integration_scheduler"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T11:48:50.889374",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_a01c8a63",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring file_operations_writer, integration_scheduler, network_router with involving writer, general specific scheduler capability, general specific writer capability - Instance task_a01c8a63",
      "test_input": {
        "input_data": {
          "data": [
            0.4452479679450172,
            0.288275232608894,
            0.4238674685144105,
            0.19940399476750015,
            0.42066606144044316
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "file_operations_writer",
        "integration_scheduler",
        "network_router"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T11:48:50.888117",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_b9b0bcc6",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring computation_optimizer, utility_helper with general specific helper capability, involving optimizer, general specific optimizer capability - Instance task_b9b0bcc6",
      "test_input": {
        "input_data": {
          "data": [
            0.6600413823294671,
            0.3368683272177708,
            0.4504218612872789,
            0.8479843112859211,
            0.0069712022932401085
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "computation_optimizer",
        "utility_helper"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T11:48:50.886472",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_8803995f",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring integration_connector, computation_optimizer, data_processing_transformer with involving connector, general specific connector capability, general specific optimizer capability - Instance task_8803995f",
      "test_input": {
        "input_data": {
          "data": [
            0.34635797794207523,
            0.3574587671023518,
            0.20968231795084868,
            0.5218091234457846,
            0.8450147126988422
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "integration_connector",
        "computation_optimizer",
        "data_processing_transformer"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T11:48:50.888188",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_117b2136",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_117b2136",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.8098178705300006
            },
            {
              "id": 1,
              "value": 0.7642996480980598
            },
            {
              "id": 2,
              "value": 0.25906957978317624
            },
            {
              "id": 3,
              "value": 0.41119156932683454
            },
            {
              "id": 4,
              "value": 0.17067791683533895
            },
            {
              "id": 5,
              "value": 0.8656729471832821
            },
            {
              "id": 6,
              "value": 0.8382452900204632
            },
            {
              "id": 7,
              "value": 0.6025777112117849
            },
            {
              "id": 8,
              "value": 0.6183985550175838
            },
            {
              "id": 9,
              "value": 0.3964158214367074
            }
          ]
        },
        "output_format": "csv",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T11:48:52.002334",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_075a8996",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_075a8996",
      "test_input": {
        "input_data": {
          "data": [
            0.05076857636613097,
            0.3183854691610951,
            0.5799124515225023,
            0.4103339235953595,
            0.27969934901526883
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "computation_calculator",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T11:48:52.773574",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_eab10495",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_eab10495",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T11:48:52.008791",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_819cf343",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_819cf343",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T11:48:52.007821",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_5bc67c58",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring integration_connector, computation_optimizer, data_processing_transformer with involving connector, general specific connector capability, general specific optimizer capability - Instance task_5bc67c58",
      "test_input": {
        "input_data": {
          "data": [
            0.9752448811070218,
            0.19285883247240598,
            0.7917972981649499,
            0.5868151992666156,
            0.7728425914231685
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "integration_connector",
        "computation_optimizer",
        "data_processing_transformer"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T11:48:50.886766",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_e00c3c9c",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_e00c3c9c",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.7574044411511
            },
            {
              "id": 1,
              "value": 0.16626815183952592
            },
            {
              "id": 2,
              "value": 0.9048611290611078
            },
            {
              "id": 3,
              "value": 0.7531476231270393
            },
            {
              "id": 4,
              "value": 0.09953813259451605
            },
            {
              "id": 5,
              "value": 0.5792940085575463
            },
            {
              "id": 6,
              "value": 0.5759045067260504
            },
            {
              "id": 7,
              "value": 0.41416707492410354
            },
            {
              "id": 8,
              "value": 0.5730989045224129
            },
            {
              "id": 9,
              "value": 0.24563797757895844
            }
          ]
        },
        "output_format": "json",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "computation_analyzer",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T11:48:52.001442",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_40b14256",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_40b14256",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.43012100464561365
            },
            {
              "id": 1,
              "value": 0.17905577801158856
            },
            {
              "id": 2,
              "value": 0.49362876347256646
            },
            {
              "id": 3,
              "value": 0.24759356531188548
            },
            {
              "id": 4,
              "value": 0.6428576664917597
            },
            {
              "id": 5,
              "value": 0.6407768193539457
            },
            {
              "id": 6,
              "value": 0.9259738508737287
            },
            {
              "id": 7,
              "value": 0.9010680634843438
            },
            {
              "id": 8,
              "value": 0.11034386531406981
            },
            {
              "id": 9,
              "value": 0.8747781854651704
            }
          ]
        },
        "output_format": "csv",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T11:48:51.998610",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_3b38b865",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring file_operations_writer, integration_scheduler, network_router with involving writer, general specific scheduler capability, general specific writer capability - Instance task_3b38b865",
      "test_input": {
        "input_data": {
          "data": [
            0.6343993512374648,
            0.6462486066276577,
            0.4791944919670963,
            0.22628708584212742,
            0.20274817944799395
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "file_operations_writer",
        "integration_scheduler",
        "network_router"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T11:48:50.887947",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_67fcb09c",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring computation_optimizer, utility_helper with general specific helper capability, involving optimizer, general specific optimizer capability - Instance task_67fcb09c",
      "test_input": {
        "input_data": {
          "data": [
            0.5026564931516936,
            0.6663218690073403,
            0.9410077247511948,
            0.06082091548337598,
            0.2491492046888909
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "computation_optimizer",
        "utility_helper"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T11:48:50.887787",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_c0c877da",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring file_operations_writer, integration_scheduler, network_router with involving writer, general specific scheduler capability, general specific writer capability - Instance task_c0c877da",
      "test_input": {
        "input_data": {
          "data": [
            0.4722335092671678,
            0.5625042634427748,
            0.8439620616464165,
            0.22251094783926229,
            0.8295850825574097
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "file_operations_writer",
        "integration_scheduler",
        "network_router"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T11:48:50.887770",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_ec5fa189",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_ec5fa189",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.9233575328009179
            },
            {
              "id": 1,
              "value": 0.17681767090902167
            },
            {
              "id": 2,
              "value": 0.4724692407715253
            },
            {
              "id": 3,
              "value": 0.7446822167094759
            },
            {
              "id": 4,
              "value": 0.575443947199199
            },
            {
              "id": 5,
              "value": 0.17450664800713034
            },
            {
              "id": 6,
              "value": 0.18083437087638843
            },
            {
              "id": 7,
              "value": 0.4566268228350764
            },
            {
              "id": 8,
              "value": 0.5400416894243129
            },
            {
              "id": 9,
              "value": 0.7793564474943099
            }
          ]
        },
        "output_format": "xml",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T11:48:52.000465",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_3fd5556f",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with general specific helper capability, general specific queue capability, involving helper - Instance task_3fd5556f",
      "test_input": {
        "data": {
          "values": [
            69,
            33,
            36,
            9,
            78
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "utility_helper",
        "integration_queue"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T11:48:50.889409",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_1fe75b99",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_1fe75b99",
      "test_input": {
        "input_data": {
          "data": [
            0.7226113299334487,
            0.49990918979843213,
            0.893269481198559,
            0.8926115080370554,
            0.9994399526328586
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "computation_calculator",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T11:48:52.766810",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_ee74e3b3",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_ee74e3b3",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T11:48:52.007593",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_c49dd80e",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring computation_optimizer, utility_helper with general specific helper capability, involving optimizer, general specific optimizer capability - Instance task_c49dd80e",
      "test_input": {
        "input_data": {
          "data": [
            0.45210659935568254,
            0.5265823856102939,
            0.8304415736918271,
            0.35151764443847844,
            0.3277798899578328
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "computation_optimizer",
        "utility_helper"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T11:48:50.887862",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_ba37d73b",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with general specific helper capability, general specific queue capability, involving helper - Instance task_ba37d73b",
      "test_input": {
        "data": {
          "values": [
            99,
            81,
            23,
            33,
            16
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "utility_helper",
        "integration_queue"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T11:48:50.888521",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_a4b733a6",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with general specific converter capability, general specific scheduler capability, involving scheduler - Instance task_a4b733a6",
      "test_input": {
        "data": {
          "values": [
            27,
            91,
            27,
            19,
            46
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "integration_scheduler",
        "file_operations_converter"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T11:48:50.889262",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_11311f91",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring computation_optimizer, utility_helper with general specific helper capability, involving optimizer, general specific optimizer capability - Instance task_11311f91",
      "test_input": {
        "input_data": {
          "data": [
            0.13047530973698096,
            0.029471068404553824,
            0.8750614336801481,
            0.20102381448976336,
            0.7936725542597561
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "computation_optimizer",
        "utility_helper"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T11:48:50.887845",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_91e63f53",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_91e63f53",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T11:48:52.008287",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_19bfecc4",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_19bfecc4",
      "test_input": {
        "input_data": {
          "data": [
            0.34160163585166115,
            0.9848144986984502,
            0.3140203880230775,
            0.5742505531676112,
            0.13690173037193776
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "computation_calculator",
        "data_processing_validator",
        "computation_analyzer"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T11:48:52.769613",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_c679a056",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_c679a056",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.6473194112879381
            },
            {
              "id": 1,
              "value": 0.8264191264612429
            },
            {
              "id": 2,
              "value": 0.9920013168261522
            },
            {
              "id": 3,
              "value": 0.16982346324077358
            },
            {
              "id": 4,
              "value": 0.4602515701550388
            },
            {
              "id": 5,
              "value": 0.6941972955181138
            },
            {
              "id": 6,
              "value": 0.26113099226416403
            },
            {
              "id": 7,
              "value": 0.3910354114822603
            },
            {
              "id": 8,
              "value": 0.7982132827957424
            },
            {
              "id": 9,
              "value": 0.991554346271148
            }
          ]
        },
        "output_format": "csv",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "computation_analyzer",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T11:48:51.997995",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_1b826fc4",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_1b826fc4",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.6013379185865495
            },
            {
              "id": 1,
              "value": 0.8283883030099181
            },
            {
              "id": 2,
              "value": 0.7877272448518066
            },
            {
              "id": 3,
              "value": 0.8276190063379218
            },
            {
              "id": 4,
              "value": 0.3982952671174015
            },
            {
              "id": 5,
              "value": 0.9527852636336482
            },
            {
              "id": 6,
              "value": 0.10012520931796298
            },
            {
              "id": 7,
              "value": 0.6545240308576683
            },
            {
              "id": 8,
              "value": 0.43811942202056153
            },
            {
              "id": 9,
              "value": 0.7628654885221834
            }
          ]
        },
        "output_format": "csv",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "computation_analyzer",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T11:48:52.001128",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_19dd057f",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring file_operations_writer, integration_scheduler, network_router with involving writer, general specific scheduler capability, general specific writer capability - Instance task_19dd057f",
      "test_input": {
        "input_data": {
          "data": [
            0.08704019483178094,
            0.49229501678586074,
            0.2523391835030965,
            0.546521059807286,
            0.3809949557036204
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "file_operations_writer",
        "integration_scheduler",
        "network_router"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T11:48:50.886600",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_a3ed13eb",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_a3ed13eb",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T11:48:52.008305",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_14486cf6",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with general specific helper capability, general specific queue capability, involving helper - Instance task_14486cf6",
      "test_input": {
        "data": {
          "values": [
            100,
            7,
            17,
            27,
            90
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "utility_helper",
        "integration_queue"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T11:48:50.888656",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_c1bf89d6",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_c1bf89d6",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T11:48:52.008003",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_583b6516",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_583b6516",
      "test_input": {
        "input_data": {
          "data": [
            0.37354810687838313,
            0.5062154852698066,
            0.2070953342169759,
            0.31709136772960556,
            0.27829530622706056
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "computation_calculator",
        "data_processing_validator",
        "computation_analyzer"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T11:48:52.772491",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_d8063f8e",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_d8063f8e",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.2076300831098321
            },
            {
              "id": 1,
              "value": 0.1652847693822268
            },
            {
              "id": 2,
              "value": 0.9702746306870799
            },
            {
              "id": 3,
              "value": 0.31630023590074996
            },
            {
              "id": 4,
              "value": 0.28923521162634
            },
            {
              "id": 5,
              "value": 0.335098246832805
            },
            {
              "id": 6,
              "value": 0.16312736753229917
            },
            {
              "id": 7,
              "value": 0.6517777759056563
            },
            {
              "id": 8,
              "value": 0.40822693147518085
            },
            {
              "id": 9,
              "value": 0.7259668661915109
            }
          ]
        },
        "output_format": "csv",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "computation_analyzer",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T11:48:52.006905",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_9b2cf470",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring computation_optimizer, utility_helper with general specific helper capability, involving optimizer, general specific optimizer capability - Instance task_9b2cf470",
      "test_input": {
        "input_data": {
          "data": [
            0.8201774149250513,
            0.8512428989038945,
            0.6445890310187872,
            0.675964279072735,
            0.16945627518845185
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "computation_optimizer",
        "utility_helper"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T11:48:50.887614",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_cbb8da4a",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with general specific converter capability, general specific scheduler capability, involving scheduler - Instance task_cbb8da4a",
      "test_input": {
        "data": {
          "values": [
            75,
            99,
            20,
            51,
            21
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "integration_scheduler",
        "file_operations_converter"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T11:48:50.889396",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_689891c0",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring computation_optimizer, utility_helper with general specific helper capability, involving optimizer, general specific optimizer capability - Instance task_689891c0",
      "test_input": {
        "input_data": {
          "data": [
            0.5773061792769225,
            0.15216912366387247,
            0.6838912976762502,
            0.48659164917168474,
            0.7596383537288557
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "computation_optimizer",
        "utility_helper"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T11:48:50.886619",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_5fd93d72",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_5fd93d72",
      "test_input": {
        "input_data": {
          "data": [
            0.868807763555692,
            0.48769324504095624,
            0.6475061831785112,
            0.33442948017053853,
            0.47797323045972095
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "computation_calculator",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T11:48:52.766106",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_17622061",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_17622061",
      "test_input": {
        "input_data": {
          "data": [
            0.5697111073539153,
            0.7468714712083123,
            0.37809070420492463,
            0.007153138197558917,
            0.5980928597993528
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "computation_calculator",
        "data_processing_validator",
        "computation_analyzer",
        "network_poster"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T11:48:52.767363",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_4905676a",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_4905676a",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T11:48:52.008046",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_53f5bd8e",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_53f5bd8e",
      "test_input": {
        "input_data": {
          "data": [
            0.8167762345934182,
            0.956964367074875,
            0.7244572233124338,
            0.14411542476525996,
            0.7591869860834117
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "computation_calculator",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T11:48:52.774456",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_fe6e007e",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_fe6e007e",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T11:48:52.008054",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_c2e6e835",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_c2e6e835",
      "test_input": {
        "input_data": {
          "data": [
            0.1118048449505763,
            0.6747630307933105,
            0.495036384523042,
            0.3694436270711926,
            0.8787173829923248
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T11:48:52.766189",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_4ab4c3b4",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_4ab4c3b4",
      "test_input": {
        "input_data": {
          "data": [
            0.9383956828019997,
            0.6550477231939819,
            0.5502085887129652,
            0.167809429763225,
            0.35956053772425656
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "computation_calculator",
        "data_processing_validator",
        "computation_analyzer",
        "network_poster"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T11:48:52.772903",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_feb4d500",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_feb4d500",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T11:48:52.007548",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_654b4b1a",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_654b4b1a",
      "test_input": {
        "input_data": {
          "data": [
            0.8198099222408954,
            0.1654084246121742,
            0.21929284635983637,
            0.1993985735638827,
            0.6394815069829741
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "computation_calculator",
        "data_processing_validator",
        "computation_analyzer",
        "network_poster"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T11:48:52.773701",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_57eb9350",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_57eb9350",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.24826387443184617
            },
            {
              "id": 1,
              "value": 0.8939064919132159
            },
            {
              "id": 2,
              "value": 0.5156177916142939
            },
            {
              "id": 3,
              "value": 0.9091052046162382
            },
            {
              "id": 4,
              "value": 0.20556169805808933
            },
            {
              "id": 5,
              "value": 0.6537229849645266
            },
            {
              "id": 6,
              "value": 0.5340376664325126
            },
            {
              "id": 7,
              "value": 0.494517647131107
            },
            {
              "id": 8,
              "value": 0.8599696553718399
            },
            {
              "id": 9,
              "value": 0.20384720145570123
            }
          ]
        },
        "output_format": "csv",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T11:48:51.999832",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_30b7aa5c",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with general specific helper capability, general specific queue capability, involving helper - Instance task_30b7aa5c",
      "test_input": {
        "data": {
          "values": [
            37,
            75,
            64,
            51,
            62
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "utility_helper",
        "integration_queue"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T11:48:50.888688",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_68f50047",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_68f50047",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.5795204696344491
            },
            {
              "id": 1,
              "value": 0.051861269111155295
            },
            {
              "id": 2,
              "value": 0.9798143197542607
            },
            {
              "id": 3,
              "value": 0.49474640480953125
            },
            {
              "id": 4,
              "value": 0.05818274112712496
            },
            {
              "id": 5,
              "value": 0.6221843636698492
            },
            {
              "id": 6,
              "value": 0.27535170300546363
            },
            {
              "id": 7,
              "value": 0.4051458187888717
            },
            {
              "id": 8,
              "value": 0.3975958723117563
            },
            {
              "id": 9,
              "value": 0.03463212740166577
            }
          ]
        },
        "output_format": "csv",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "computation_analyzer",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T11:48:51.998908",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_4f81128e",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_4f81128e",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.4485966515563278
            },
            {
              "id": 1,
              "value": 0.111334831874916
            },
            {
              "id": 2,
              "value": 0.9560903689376983
            },
            {
              "id": 3,
              "value": 0.9446646364479598
            },
            {
              "id": 4,
              "value": 0.6967640270624637
            },
            {
              "id": 5,
              "value": 0.3085406717766356
            },
            {
              "id": 6,
              "value": 0.6226028567831904
            },
            {
              "id": 7,
              "value": 0.8548410863992759
            },
            {
              "id": 8,
              "value": 0.04792625719988275
            },
            {
              "id": 9,
              "value": 0.9486293579469998
            }
          ]
        },
        "output_format": "xml",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T11:48:52.002936",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_88d936db",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with general specific converter capability, general specific scheduler capability, involving scheduler - Instance task_88d936db",
      "test_input": {
        "data": {
          "values": [
            80,
            47,
            48,
            76,
            15
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "integration_scheduler",
        "file_operations_converter"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T11:48:50.888815",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_aac5f9ef",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_aac5f9ef",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T11:48:52.007813",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_4d88c53a",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_4d88c53a",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.6640799955504835
            },
            {
              "id": 1,
              "value": 0.24271448872434487
            },
            {
              "id": 2,
              "value": 0.8154881838485708
            },
            {
              "id": 3,
              "value": 0.5874045771785816
            },
            {
              "id": 4,
              "value": 0.029042994063469996
            },
            {
              "id": 5,
              "value": 0.18445219370755084
            },
            {
              "id": 6,
              "value": 0.43797523767275204
            },
            {
              "id": 7,
              "value": 0.7004961733543277
            },
            {
              "id": 8,
              "value": 0.8040235755198846
            },
            {
              "id": 9,
              "value": 0.6794128544649674
            }
          ]
        },
        "output_format": "xml",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T11:48:51.712369",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_9690a3bf",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_9690a3bf",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T11:48:52.008348",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_28806203",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_28806203",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T11:48:52.007511",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_98169360",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_98169360",
      "test_input": {
        "input_data": {
          "data": [
            0.4817535735188848,
            0.6097043774249923,
            0.5107651754727937,
            0.24453640160859935,
            0.2096000031191959
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "computation_calculator",
        "data_processing_validator",
        "computation_analyzer",
        "network_poster"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T11:48:52.767152",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_9bf68203",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_9bf68203",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T11:48:52.007946",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_fc9fcce7",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring integration_connector, computation_optimizer, data_processing_transformer with involving connector, general specific connector capability, general specific optimizer capability - Instance task_fc9fcce7",
      "test_input": {
        "input_data": {
          "data": [
            0.6927508323230052,
            0.7407283484482965,
            0.4233389469557004,
            0.9167833223610358,
            0.36349068501456294
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "integration_connector",
        "computation_optimizer",
        "data_processing_transformer"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T11:48:50.886803",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_1635ee2a",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring file_operations_writer, integration_scheduler, network_router with involving writer, general specific scheduler capability, general specific writer capability - Instance task_1635ee2a",
      "test_input": {
        "input_data": {
          "data": [
            0.9998141334621649,
            0.4474798696639608,
            0.3408045628966475,
            0.5629156940680812,
            0.6269802235163217
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "file_operations_writer",
        "integration_scheduler",
        "network_router"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T11:48:50.887552",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_c8991a10",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring file_operations_writer, integration_scheduler, network_router with involving writer, general specific scheduler capability, general specific writer capability - Instance task_c8991a10",
      "test_input": {
        "input_data": {
          "data": [
            0.23664367895628668,
            0.6741346971295,
            0.8633543054037748,
            0.46466591088948495,
            0.6609550911027164
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "file_operations_writer",
        "integration_scheduler",
        "network_router"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T11:48:50.886857",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_c5f83b6e",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_c5f83b6e",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.989489518563642
            },
            {
              "id": 1,
              "value": 0.48057990625079494
            },
            {
              "id": 2,
              "value": 0.1608278352015866
            },
            {
              "id": 3,
              "value": 0.9549672667880672
            },
            {
              "id": 4,
              "value": 0.31288478545902254
            },
            {
              "id": 5,
              "value": 0.13254823572251806
            },
            {
              "id": 6,
              "value": 0.7477938564167634
            },
            {
              "id": 7,
              "value": 0.7541227472048666
            },
            {
              "id": 8,
              "value": 0.8413243902842993
            },
            {
              "id": 9,
              "value": 0.041534460556726494
            }
          ]
        },
        "output_format": "csv",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "computation_analyzer",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T11:48:51.996657",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_884adc70",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_884adc70",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T11:48:52.007631",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_7fa10d54",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_7fa10d54",
      "test_input": {
        "input_data": {
          "data": [
            0.6809254100618128,
            0.6819035531104747,
            0.42958444506139515,
            0.3764211257197787,
            0.03854711222052187
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "computation_calculator",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T11:48:52.772276",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_65717f27",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_65717f27",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T11:48:52.008813",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_be67acd2",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_be67acd2",
      "test_input": {
        "input_data": {
          "data": [
            0.02813624199988707,
            0.3250346101536188,
            0.5997839850263019,
            0.7717251851291383,
            0.3538094039317382
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T11:48:52.773137",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_cbb3f2b5",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with general specific converter capability, general specific scheduler capability, involving scheduler - Instance task_cbb3f2b5",
      "test_input": {
        "data": {
          "values": [
            59,
            51,
            91,
            73,
            18
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "integration_scheduler",
        "file_operations_converter"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T11:48:50.889178",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_2dcf49f4",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_2dcf49f4",
      "test_input": {
        "input_data": {
          "data": [
            0.23749454710440754,
            0.4391623282178537,
            0.7636442478236986,
            0.028816332413088896,
            0.43927970834483976
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "computation_calculator",
        "data_processing_validator",
        "computation_analyzer"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T11:48:52.765307",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_9f7194ac",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring computation_optimizer, utility_helper with general specific helper capability, involving optimizer, general specific optimizer capability - Instance task_9f7194ac",
      "test_input": {
        "input_data": {
          "data": [
            0.9981906974399072,
            0.020349016563016353,
            0.857697120254565,
            0.8822728121715331,
            0.4490848982569702
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "computation_optimizer",
        "utility_helper"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T11:48:50.886655",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_e922ffb4",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with general specific helper capability, general specific queue capability, involving helper - Instance task_e922ffb4",
      "test_input": {
        "data": {
          "values": [
            25,
            37,
            41,
            44,
            23
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "utility_helper",
        "integration_queue"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T11:48:50.888572",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_d857d4b2",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_d857d4b2",
      "test_input": {
        "input_data": {
          "data": [
            0.07455830968074384,
            0.6018329993246895,
            0.46172628738583166,
            0.3903800393638166,
            0.6987222209459726
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "computation_calculator",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T11:48:52.773346",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_b97aaa3b",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with general specific scheduler capability, involving router, general specific router capability - Instance task_b97aaa3b",
      "test_input": {
        "data": {
          "values": [
            72,
            81,
            86,
            70,
            20
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "network_router",
        "integration_scheduler"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T11:48:50.888677",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_68610961",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_68610961",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T11:48:52.007988",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_08444713",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with general specific helper capability, general specific queue capability, involving helper - Instance task_08444713",
      "test_input": {
        "data": {
          "values": [
            38,
            17,
            83,
            4,
            56
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "utility_helper",
        "integration_queue"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T11:48:50.889136",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_73164837",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring computation_optimizer, utility_helper with general specific helper capability, involving optimizer, general specific optimizer capability - Instance task_73164837",
      "test_input": {
        "input_data": {
          "data": [
            0.4647795913534911,
            0.9814156349551549,
            0.8021818472883117,
            0.26297923320103456,
            0.18222601002930983
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "computation_optimizer",
        "utility_helper"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T11:48:50.887502",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_4e5c4823",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_4e5c4823",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.9858939240901278
            },
            {
              "id": 1,
              "value": 0.7073695680154596
            },
            {
              "id": 2,
              "value": 0.22178177411656896
            },
            {
              "id": 3,
              "value": 0.2801940880550431
            },
            {
              "id": 4,
              "value": 0.7216887567505809
            },
            {
              "id": 5,
              "value": 0.4369570570216169
            },
            {
              "id": 6,
              "value": 0.31530355026437507
            },
            {
              "id": 7,
              "value": 0.22778210624219342
            },
            {
              "id": 8,
              "value": 0.4670981983606647
            },
            {
              "id": 9,
              "value": 0.22916229247877595
            }
          ]
        },
        "output_format": "xml",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T11:48:52.005207",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_94600f0d",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_94600f0d",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.096171012809389
            },
            {
              "id": 1,
              "value": 0.17826542547994995
            },
            {
              "id": 2,
              "value": 0.05817244242026576
            },
            {
              "id": 3,
              "value": 0.3808639151721207
            },
            {
              "id": 4,
              "value": 0.400104189516323
            },
            {
              "id": 5,
              "value": 0.08662346799573661
            },
            {
              "id": 6,
              "value": 0.9484034680227497
            },
            {
              "id": 7,
              "value": 0.025194215265830655
            },
            {
              "id": 8,
              "value": 0.4712465919903437
            },
            {
              "id": 9,
              "value": 0.6391083553901967
            }
          ]
        },
        "output_format": "xml",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T11:48:52.005734",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_25d01c0d",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with general specific scheduler capability, involving router, general specific router capability - Instance task_25d01c0d",
      "test_input": {
        "data": {
          "values": [
            94,
            31,
            16,
            77,
            93
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "network_router",
        "integration_scheduler"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T11:48:50.888972",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_fa8a3ce6",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring file_operations_writer, integration_scheduler, network_router with involving writer, general specific scheduler capability, general specific writer capability - Instance task_fa8a3ce6",
      "test_input": {
        "input_data": {
          "data": [
            0.41746908082979806,
            0.41688114066495885,
            0.5184193359799084,
            0.4162173533389665,
            0.768249246796328
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "file_operations_writer",
        "integration_scheduler",
        "network_router"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T11:48:50.888204",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_dc8dd533",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_dc8dd533",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.7852442944068201
            },
            {
              "id": 1,
              "value": 0.12707449813463956
            },
            {
              "id": 2,
              "value": 0.9010136970241236
            },
            {
              "id": 3,
              "value": 0.9100820072458183
            },
            {
              "id": 4,
              "value": 0.8098049571290342
            },
            {
              "id": 5,
              "value": 0.6340732627450607
            },
            {
              "id": 6,
              "value": 0.25248607910469056
            },
            {
              "id": 7,
              "value": 0.08820484177890242
            },
            {
              "id": 8,
              "value": 0.36857384711989083
            },
            {
              "id": 9,
              "value": 0.9828132763476954
            }
          ]
        },
        "output_format": "json",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T11:48:52.006326",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_29bb356e",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring computation_optimizer, utility_helper with general specific helper capability, involving optimizer, general specific optimizer capability - Instance task_29bb356e",
      "test_input": {
        "input_data": {
          "data": [
            0.051947921148884024,
            0.9072416200588007,
            0.07589429480533327,
            0.45518872530479637,
            0.34029580233830115
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "computation_optimizer",
        "utility_helper"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T11:48:50.888048",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_35c5a472",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_35c5a472",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T11:48:52.008382",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_f5c6ed18",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_f5c6ed18",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.26919210698945073
            },
            {
              "id": 1,
              "value": 0.42880519427036834
            },
            {
              "id": 2,
              "value": 0.4122363998304922
            },
            {
              "id": 3,
              "value": 0.04324575062243241
            },
            {
              "id": 4,
              "value": 0.909825978846916
            },
            {
              "id": 5,
              "value": 0.8174035928642686
            },
            {
              "id": 6,
              "value": 0.8846881439289292
            },
            {
              "id": 7,
              "value": 0.1473979047149654
            },
            {
              "id": 8,
              "value": 0.029350967937026406
            },
            {
              "id": 9,
              "value": 0.8160546759946333
            }
          ]
        },
        "output_format": "json",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T11:48:52.006697",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_96ad0b25",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with general specific scheduler capability, involving router, general specific router capability - Instance task_96ad0b25",
      "test_input": {
        "data": {
          "values": [
            59,
            65,
            81,
            24,
            22
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "network_router",
        "integration_scheduler"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T11:48:50.888906",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_fb1041b3",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with general specific helper capability, general specific queue capability, involving helper - Instance task_fb1041b3",
      "test_input": {
        "data": {
          "values": [
            22,
            5,
            52,
            51,
            43
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "utility_helper",
        "integration_queue"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T11:48:50.888624",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_543a6a1b",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with general specific scheduler capability, involving router, general specific router capability - Instance task_543a6a1b",
      "test_input": {
        "data": {
          "values": [
            27,
            67,
            81,
            44,
            31
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "network_router",
        "integration_scheduler"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T11:48:50.889201",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_bee98df5",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_bee98df5",
      "test_input": {
        "input_data": {
          "data": [
            0.812852912241881,
            0.6223472522365793,
            0.6888544349374606,
            0.03100312105890235,
            0.3258386600619112
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "computation_calculator",
        "data_processing_validator",
        "computation_analyzer",
        "network_poster"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T11:48:52.764757",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_8e532c10",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_8e532c10",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.7002258776003669
            },
            {
              "id": 1,
              "value": 0.37181711988822175
            },
            {
              "id": 2,
              "value": 0.7246896505522749
            },
            {
              "id": 3,
              "value": 0.4195684430359571
            },
            {
              "id": 4,
              "value": 0.3928609191952399
            },
            {
              "id": 5,
              "value": 0.08861057414785112
            },
            {
              "id": 6,
              "value": 0.9533127122999899
            },
            {
              "id": 7,
              "value": 0.557469250339008
            },
            {
              "id": 8,
              "value": 0.06776314996661714
            },
            {
              "id": 9,
              "value": 0.8961772105766398
            }
          ]
        },
        "output_format": "json",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T11:48:52.007305",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_1d0a1479",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_1d0a1479",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.16089761792283597
            },
            {
              "id": 1,
              "value": 0.6326842525005045
            },
            {
              "id": 2,
              "value": 0.14672287995398126
            },
            {
              "id": 3,
              "value": 0.05838082132270617
            },
            {
              "id": 4,
              "value": 0.5869367254281855
            },
            {
              "id": 5,
              "value": 0.36397881191076187
            },
            {
              "id": 6,
              "value": 0.7183931272660884
            },
            {
              "id": 7,
              "value": 0.4577974058323081
            },
            {
              "id": 8,
              "value": 0.1263766677803665
            },
            {
              "id": 9,
              "value": 0.3839164106022862
            }
          ]
        },
        "output_format": "json",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T11:48:51.997873",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_3e76a836",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring integration_connector, computation_optimizer, data_processing_transformer with involving connector, general specific connector capability, general specific optimizer capability - Instance task_3e76a836",
      "test_input": {
        "input_data": {
          "data": [
            0.6222939023565516,
            0.5842844792179348,
            0.8262608779645059,
            0.18757294014265924,
            0.5760533980196353
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "integration_connector",
        "computation_optimizer",
        "data_processing_transformer"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T11:48:50.888169",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_b34d6230",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_b34d6230",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.9178910182563608
            },
            {
              "id": 1,
              "value": 0.6989690244510397
            },
            {
              "id": 2,
              "value": 0.2617158472649196
            },
            {
              "id": 3,
              "value": 0.7777209637705805
            },
            {
              "id": 4,
              "value": 0.11922779434330133
            },
            {
              "id": 5,
              "value": 0.3742937823263286
            },
            {
              "id": 6,
              "value": 0.5419485657369848
            },
            {
              "id": 7,
              "value": 0.6300623717664199
            },
            {
              "id": 8,
              "value": 0.1285646505281156
            },
            {
              "id": 9,
              "value": 0.12716160530374143
            }
          ]
        },
        "output_format": "xml",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "computation_analyzer",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T11:48:52.007006",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_e7e22dc4",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_e7e22dc4",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T11:48:52.008067",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_f0bb02a6",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring file_operations_writer, integration_scheduler, network_router with involving writer, general specific scheduler capability, general specific writer capability - Instance task_f0bb02a6",
      "test_input": {
        "input_data": {
          "data": [
            0.19866075770590075,
            0.9440110762770754,
            0.07008631295819556,
            0.2646118943887219,
            0.04045654304807644
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "file_operations_writer",
        "integration_scheduler",
        "network_router"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T11:48:50.888064",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_022b4dcf",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring file_operations_writer, integration_scheduler, network_router with involving writer, general specific scheduler capability, general specific writer capability - Instance task_022b4dcf",
      "test_input": {
        "input_data": {
          "data": [
            0.9251720340255506,
            0.390414815871731,
            0.058310775623817146,
            0.4665084534285068,
            0.6185654781399971
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "file_operations_writer",
        "integration_scheduler",
        "network_router"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T11:48:50.886676",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_7de2f87d",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_7de2f87d",
      "test_input": {
        "input_data": {
          "data": [
            0.5116037655460801,
            0.7409250674460071,
            0.3709686252918195,
            0.6493657437723878,
            0.11431954122804922
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "computation_calculator",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T11:48:52.766384",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_07cd1aeb",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring file_operations_writer, integration_scheduler, network_router with involving writer, general specific scheduler capability, general specific writer capability - Instance task_07cd1aeb",
      "test_input": {
        "input_data": {
          "data": [
            0.9054652567305059,
            0.05027941907974376,
            0.011617370461009857,
            0.17420044613696228,
            0.4619991518599821
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "file_operations_writer",
        "integration_scheduler",
        "network_router"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T11:48:50.886786",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_5bd65917",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_5bd65917",
      "test_input": {
        "input_data": {
          "data": [
            0.7194707886444387,
            0.08601544658302396,
            0.758100948882315,
            0.5898526059304666,
            0.8485171644406447
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "computation_calculator",
        "data_processing_validator",
        "computation_analyzer",
        "network_poster"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T11:48:52.767907",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_af38cc92",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_af38cc92",
      "test_input": {
        "input_data": {
          "data": [
            0.1374299779738929,
            0.5273618536495897,
            0.11728251380170118,
            0.7959762059350706,
            0.09135758014627415
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "computation_calculator",
        "data_processing_validator",
        "computation_analyzer",
        "network_poster"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T11:48:52.773047",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_4c33d436",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_4c33d436",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T11:48:52.007675",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_7e26844a",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_7e26844a",
      "test_input": {
        "input_data": {
          "data": [
            0.1071203647077118,
            0.7656916330507038,
            0.7247305030182754,
            0.24407557368100907,
            0.06337667639119327
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "computation_calculator",
        "data_processing_validator",
        "computation_analyzer"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T11:48:52.772634",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_125575b7",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_125575b7",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.3497933730700159
            },
            {
              "id": 1,
              "value": 0.045223215446107856
            },
            {
              "id": 2,
              "value": 0.31419200177020157
            },
            {
              "id": 3,
              "value": 0.4571253296097466
            },
            {
              "id": 4,
              "value": 0.7383627175832675
            },
            {
              "id": 5,
              "value": 0.903817743575726
            },
            {
              "id": 6,
              "value": 0.8560777814778193
            },
            {
              "id": 7,
              "value": 0.7771787413527044
            },
            {
              "id": 8,
              "value": 0.6079557954946191
            },
            {
              "id": 9,
              "value": 0.4799262458258594
            }
          ]
        },
        "output_format": "json",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T11:48:51.999296",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_f43eeb78",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_f43eeb78",
      "test_input": {
        "input_data": {
          "data": [
            0.6659214382788088,
            0.09757440584219101,
            0.8556228319429277,
            0.9155347540745424,
            0.9527673280896737
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "computation_calculator",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T11:48:52.770568",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_a8dfc30d",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with general specific helper capability, general specific queue capability, involving helper - Instance task_a8dfc30d",
      "test_input": {
        "data": {
          "values": [
            82,
            3,
            67,
            97,
            12
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "utility_helper",
        "integration_queue"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T11:48:50.888541",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_203f0c1a",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_203f0c1a",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T11:48:52.007740",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_800bc711",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_800bc711",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T11:48:52.008061",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_dc5db048",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_dc5db048",
      "test_input": {
        "input_data": {
          "data": [
            0.9470343077922595,
            0.14629402290132343,
            0.31581079944988677,
            0.5295019692011049,
            0.003770066966832575
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "computation_calculator",
        "data_processing_validator",
        "computation_analyzer",
        "network_poster"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T11:48:52.772070",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_aa65d008",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_aa65d008",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.3130839528616468
            },
            {
              "id": 1,
              "value": 0.8372816524618066
            },
            {
              "id": 2,
              "value": 0.8629788818014954
            },
            {
              "id": 3,
              "value": 0.2849413030843625
            },
            {
              "id": 4,
              "value": 0.6521064489482851
            },
            {
              "id": 5,
              "value": 0.38388433375559605
            },
            {
              "id": 6,
              "value": 0.06839305522855377
            },
            {
              "id": 7,
              "value": 0.39983876760412873
            },
            {
              "id": 8,
              "value": 0.8620406684118974
            },
            {
              "id": 9,
              "value": 0.4933972887035174
            }
          ]
        },
        "output_format": "xml",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T11:48:52.003035",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_1fa0f1f8",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_1fa0f1f8",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T11:48:52.008024",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_4d8cbd7c",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with general specific scheduler capability, involving router, general specific router capability - Instance task_4d8cbd7c",
      "test_input": {
        "data": {
          "values": [
            84,
            4,
            49,
            13,
            31
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "network_router",
        "integration_scheduler"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T11:48:50.888768",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_53de1675",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_53de1675",
      "test_input": {
        "input_data": {
          "data": [
            0.9956853334866086,
            0.40032615805054583,
            0.77928431806573,
            0.6754691752215589,
            0.008214968620622543
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T11:48:52.769133",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_fe2d9828",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_fe2d9828",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T11:48:52.008261",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_602e27a5",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with general specific scheduler capability, involving router, general specific router capability - Instance task_602e27a5",
      "test_input": {
        "data": {
          "values": [
            91,
            29,
            46,
            32,
            86
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "network_router",
        "integration_scheduler"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T11:48:50.889334",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_649247f4",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_649247f4",
      "test_input": {
        "input_data": {
          "data": [
            0.9991062398372244,
            0.18863021406888902,
            0.6933292920938966,
            0.7166986987360054,
            0.03694851632502949
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "computation_calculator",
        "data_processing_validator",
        "computation_analyzer",
        "network_poster"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T11:48:52.771069",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_a0c2b99f",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring file_operations_writer, integration_scheduler, network_router with involving writer, general specific scheduler capability, general specific writer capability - Instance task_a0c2b99f",
      "test_input": {
        "input_data": {
          "data": [
            0.4089575780441068,
            0.8416040349324058,
            0.26658199960834994,
            0.002738429220473071,
            0.49661711456568725
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "file_operations_writer",
        "integration_scheduler",
        "network_router"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T11:48:50.887870",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_e895161a",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_e895161a",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T11:48:52.007770",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_359e086d",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_359e086d",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T11:48:52.007623",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_49289a8f",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with general specific helper capability, general specific queue capability, involving helper - Instance task_49289a8f",
      "test_input": {
        "data": {
          "values": [
            77,
            65,
            79,
            99,
            98
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "utility_helper",
        "integration_queue"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T11:48:50.888862",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_c897a11e",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_c897a11e",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.5181570253059834
            },
            {
              "id": 1,
              "value": 0.06898392499447159
            },
            {
              "id": 2,
              "value": 0.6841933732354848
            },
            {
              "id": 3,
              "value": 0.25673790062576074
            },
            {
              "id": 4,
              "value": 0.29939534999922157
            },
            {
              "id": 5,
              "value": 0.34652193359375294
            },
            {
              "id": 6,
              "value": 0.689370562481017
            },
            {
              "id": 7,
              "value": 0.3479572548476426
            },
            {
              "id": 8,
              "value": 0.6807119162876671
            },
            {
              "id": 9,
              "value": 0.7342956207930184
            }
          ]
        },
        "output_format": "json",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "computation_analyzer",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T11:48:51.999029",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_a12e01e8",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_a12e01e8",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T11:48:52.008830",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_ed03c179",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_ed03c179",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.8973818440051453
            },
            {
              "id": 1,
              "value": 0.32609253271419836
            },
            {
              "id": 2,
              "value": 0.1344066941830646
            },
            {
              "id": 3,
              "value": 0.12160982344142601
            },
            {
              "id": 4,
              "value": 0.16340244376353907
            },
            {
              "id": 5,
              "value": 0.918764391851163
            },
            {
              "id": 6,
              "value": 0.9937703247584283
            },
            {
              "id": 7,
              "value": 0.3666270835201122
            },
            {
              "id": 8,
              "value": 0.48340395507904843
            },
            {
              "id": 9,
              "value": 0.10106755955044744
            }
          ]
        },
        "output_format": "json",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T11:48:52.000380",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_d72e2050",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with general specific scheduler capability, involving router, general specific router capability - Instance task_d72e2050",
      "test_input": {
        "data": {
          "values": [
            100,
            58,
            82,
            59,
            44
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "network_router",
        "integration_scheduler"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T11:48:50.888917",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_87d61308",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_87d61308",
      "test_input": {
        "input_data": {
          "data": [
            0.016844505064626647,
            0.40394764856636656,
            0.04389913017412728,
            0.16688913286348872,
            0.06042995542454643
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "computation_calculator",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T11:48:52.774119",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_bbc484f7",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_bbc484f7",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T11:48:52.007981",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_188b6eca",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_188b6eca",
      "test_input": {
        "input_data": {
          "data": [
            0.6791252926972821,
            0.11144024100239025,
            0.7061520661766492,
            0.6818166794778117,
            0.31418473478155917
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "computation_calculator",
        "data_processing_validator",
        "computation_analyzer"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T11:48:52.775865",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_f5f55902",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_f5f55902",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.7777823059692995
            },
            {
              "id": 1,
              "value": 0.14283350125521976
            },
            {
              "id": 2,
              "value": 0.8778844095459517
            },
            {
              "id": 3,
              "value": 0.31582426199652325
            },
            {
              "id": 4,
              "value": 0.819016590536367
            },
            {
              "id": 5,
              "value": 0.6722653427617717
            },
            {
              "id": 6,
              "value": 0.5556960975888776
            },
            {
              "id": 7,
              "value": 0.5379143137439827
            },
            {
              "id": 8,
              "value": 0.1963092147434502
            },
            {
              "id": 9,
              "value": 0.38688688866647336
            }
          ]
        },
        "output_format": "xml",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T11:48:51.998702",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_fd39e49a",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with general specific scheduler capability, involving router, general specific router capability - Instance task_fd39e49a",
      "test_input": {
        "data": {
          "values": [
            81,
            46,
            40,
            28,
            75
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "network_router",
        "integration_scheduler"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T11:48:50.888603",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_96f983f2",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with general specific helper capability, general specific queue capability, involving helper - Instance task_96f983f2",
      "test_input": {
        "data": {
          "values": [
            10,
            63,
            84,
            57,
            4
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "utility_helper",
        "integration_queue"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T11:48:50.889293",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_b81422b7",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring file_operations_writer, integration_scheduler, network_router with involving writer, general specific scheduler capability, general specific writer capability - Instance task_b81422b7",
      "test_input": {
        "input_data": {
          "data": [
            0.8445382173048677,
            0.047033499686395586,
            0.2845445737574862,
            0.2373885451392015,
            0.7175464894756506
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "file_operations_writer",
        "integration_scheduler",
        "network_router"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T11:48:50.887878",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_9da51501",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with general specific converter capability, general specific scheduler capability, involving scheduler - Instance task_9da51501",
      "test_input": {
        "data": {
          "values": [
            35,
            95,
            63,
            23,
            24
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "integration_scheduler",
        "file_operations_converter"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T11:48:50.889232",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_d037e4e6",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_d037e4e6",
      "test_input": {
        "input_data": {
          "data": [
            0.637074970453483,
            0.3716170973390628,
            0.6977596704800392,
            0.04858629297885253,
            0.006613266088158154
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "computation_calculator",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T11:48:52.765409",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_0c6a6c81",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_0c6a6c81",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T11:48:52.007719",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_1e31a7f0",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_1e31a7f0",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T11:48:52.007529",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_6cbb4a34",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_6cbb4a34",
      "test_input": {
        "input_data": {
          "data": [
            0.3558413062167124,
            0.7940195055111469,
            0.21329904135174815,
            0.3572161896008431,
            0.3105285609566759
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "computation_calculator",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T11:48:52.768142",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_333c5053",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_333c5053",
      "test_input": {
        "input_data": {
          "data": [
            0.8067265918321824,
            0.02194148701801879,
            0.8231674587664435,
            0.24532368633571866,
            0.23240942940868037
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "computation_calculator",
        "data_processing_validator",
        "computation_analyzer"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T11:48:52.772767",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_77981f25",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with general specific converter capability, general specific scheduler capability, involving scheduler - Instance task_77981f25",
      "test_input": {
        "data": {
          "values": [
            2,
            82,
            27,
            10,
            54
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "integration_scheduler",
        "file_operations_converter"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T11:48:50.888634",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_ae8b33e2",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with general specific helper capability, general specific queue capability, involving helper - Instance task_ae8b33e2",
      "test_input": {
        "data": {
          "values": [
            96,
            62,
            35,
            29,
            21
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "utility_helper",
        "integration_queue"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T11:48:50.889242",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_08d2e9a5",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_08d2e9a5",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T11:48:52.007608",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_47735d8f",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring file_operations_writer, integration_scheduler, network_router with involving writer, general specific scheduler capability, general specific writer capability - Instance task_47735d8f",
      "test_input": {
        "input_data": {
          "data": [
            0.0577164785129064,
            0.987919895369807,
            0.015194986860535442,
            0.9372420203761296,
            0.7902544549668179
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "file_operations_writer",
        "integration_scheduler",
        "network_router"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T11:48:50.886998",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_83304c24",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_83304c24",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T11:48:52.007842",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_e954d296",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_e954d296",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.8006373234114837
            },
            {
              "id": 1,
              "value": 0.5754992789871721
            },
            {
              "id": 2,
              "value": 0.5737543410739653
            },
            {
              "id": 3,
              "value": 0.5382591267907614
            },
            {
              "id": 4,
              "value": 0.046606763303415955
            },
            {
              "id": 5,
              "value": 0.7364544049859442
            },
            {
              "id": 6,
              "value": 0.16774561769195828
            },
            {
              "id": 7,
              "value": 0.1639850731480359
            },
            {
              "id": 8,
              "value": 0.6019072173857418
            },
            {
              "id": 9,
              "value": 0.01735540622848919
            }
          ]
        },
        "output_format": "csv",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T11:48:52.004666",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_8c005091",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_8c005091",
      "test_input": {
        "input_data": {
          "data": [
            0.8458175310744931,
            0.6633888627036959,
            0.018168115623286574,
            0.32342627835923077,
            0.23804592892600118
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T11:48:52.770169",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_45ec4bf5",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_45ec4bf5",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.2489815603089237
            },
            {
              "id": 1,
              "value": 0.33886296317193465
            },
            {
              "id": 2,
              "value": 0.04842335630382388
            },
            {
              "id": 3,
              "value": 0.42300574486391174
            },
            {
              "id": 4,
              "value": 0.8583480304897022
            },
            {
              "id": 5,
              "value": 0.15132588044558637
            },
            {
              "id": 6,
              "value": 0.3753353719501358
            },
            {
              "id": 7,
              "value": 0.1874258581587669
            },
            {
              "id": 8,
              "value": 0.6385960377454007
            },
            {
              "id": 9,
              "value": 0.5455418060674694
            }
          ]
        },
        "output_format": "csv",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "computation_analyzer",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T11:48:52.003548",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_cd3dfd14",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with general specific scheduler capability, involving router, general specific router capability - Instance task_cd3dfd14",
      "test_input": {
        "data": {
          "values": [
            1,
            68,
            40,
            64,
            93
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "network_router",
        "integration_scheduler"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T11:48:50.889046",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_e5731abb",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_e5731abb",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.13531880245178185
            },
            {
              "id": 1,
              "value": 0.9672190570434241
            },
            {
              "id": 2,
              "value": 0.48778293641413684
            },
            {
              "id": 3,
              "value": 0.5114886106510348
            },
            {
              "id": 4,
              "value": 0.6193554056276326
            },
            {
              "id": 5,
              "value": 0.79430266962587
            },
            {
              "id": 6,
              "value": 0.0636957150171863
            },
            {
              "id": 7,
              "value": 0.29220783914700266
            },
            {
              "id": 8,
              "value": 0.8481997795179024
            },
            {
              "id": 9,
              "value": 0.30606425592015507
            }
          ]
        },
        "output_format": "csv",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T11:48:52.004138",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_2b469035",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_2b469035",
      "test_input": {
        "input_data": {
          "data": [
            0.7381278425461312,
            0.38875211495823825,
            0.5144089200907771,
            0.540836454101526,
            0.9961773595566028
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T11:48:52.768227",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_e06490f3",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_e06490f3",
      "test_input": {
        "input_data": {
          "data": [
            0.9488656218072593,
            0.08912238849373788,
            0.4760161443945705,
            0.9884395730965178,
            0.537102900986446
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "computation_calculator",
        "data_processing_validator",
        "computation_analyzer"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T11:48:52.771731",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_5201591d",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_5201591d",
      "test_input": {
        "input_data": {
          "data": [
            0.26979260453676646,
            0.13503665657138197,
            0.6002427741757199,
            0.7786853729061153,
            0.5562024850050309
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "computation_calculator",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T11:48:52.769839",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_82aa1c00",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_82aa1c00",
      "test_input": {
        "input_data": {
          "data": [
            0.4259398227464034,
            0.667935574918327,
            0.0031534767581354872,
            0.9008849446903693,
            0.7687813044249439
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T11:48:52.768312",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_0a51b7a2",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with general specific converter capability, general specific scheduler capability, involving scheduler - Instance task_0a51b7a2",
      "test_input": {
        "data": {
          "values": [
            69,
            28,
            38,
            15,
            55
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "integration_scheduler",
        "file_operations_converter"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T11:48:50.889147",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_affe2c0e",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_affe2c0e",
      "test_input": {
        "input_data": {
          "data": [
            0.8474766642651848,
            0.5424213574352035,
            0.5215172773316729,
            0.24086573519554855,
            0.1726773561290219
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "computation_calculator",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T11:48:52.767573",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_e6521017",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring file_operations_writer, integration_scheduler, network_router with involving writer, general specific scheduler capability, general specific writer capability - Instance task_e6521017",
      "test_input": {
        "input_data": {
          "data": [
            0.7648284240352398,
            0.4608310076448845,
            0.35971510424910513,
            0.2858677502894055,
            0.3372392460149457
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "file_operations_writer",
        "integration_scheduler",
        "network_router"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T11:48:50.888144",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_344695ef",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring computation_optimizer, utility_helper with general specific helper capability, involving optimizer, general specific optimizer capability - Instance task_344695ef",
      "test_input": {
        "input_data": {
          "data": [
            0.5168523263023516,
            0.8507394810428842,
            0.02189717731518448,
            0.3334091846181628,
            0.7054098373576122
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "computation_optimizer",
        "utility_helper"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T11:48:50.887473",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_102a756a",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_102a756a",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T11:48:52.008094",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_54a16503",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_54a16503",
      "test_input": {
        "input_data": {
          "data": [
            0.8455082044674578,
            0.6029385752982906,
            0.7937931543117221,
            0.46405015648896497,
            0.053069477272052246
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "computation_calculator",
        "data_processing_validator",
        "computation_analyzer",
        "network_poster"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T11:48:52.771507",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_9d046531",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_9d046531",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T11:48:52.007792",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_2cda4577",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_2cda4577",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T11:48:52.008270",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_770c604e",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_770c604e",
      "test_input": {
        "input_data": {
          "data": [
            0.2306126575398475,
            0.743046085624611,
            0.20476246596813752,
            0.3947490065848329,
            0.19582323675197255
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "computation_calculator",
        "data_processing_validator",
        "computation_analyzer",
        "network_poster"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T11:48:52.773475",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_76afc894",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_76afc894",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.7333289563436872
            },
            {
              "id": 1,
              "value": 0.3232310474924611
            },
            {
              "id": 2,
              "value": 0.5809286462982749
            },
            {
              "id": 3,
              "value": 0.7162706663362821
            },
            {
              "id": 4,
              "value": 0.6639302305359681
            },
            {
              "id": 5,
              "value": 0.16852553548157356
            },
            {
              "id": 6,
              "value": 0.9606326515289042
            },
            {
              "id": 7,
              "value": 0.9984052599815878
            },
            {
              "id": 8,
              "value": 0.9973077225882918
            },
            {
              "id": 9,
              "value": 0.5017945417034234
            }
          ]
        },
        "output_format": "csv",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T11:48:52.000997",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_1bb3c3a5",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with general specific helper capability, general specific queue capability, involving helper - Instance task_1bb3c3a5",
      "test_input": {
        "data": {
          "values": [
            97,
            82,
            97,
            28,
            14
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "utility_helper",
        "integration_queue"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T11:48:50.889001",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_ecffb94e",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_ecffb94e",
      "test_input": {
        "input_data": {
          "data": [
            0.1813513534978587,
            0.8632760191316802,
            0.593026827980751,
            0.19631345919679766,
            0.5361577760677118
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "computation_calculator",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T11:48:52.766009",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_de58fc3b",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_de58fc3b",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.6344185799921837
            },
            {
              "id": 1,
              "value": 0.3285119202859631
            },
            {
              "id": 2,
              "value": 0.7288046411977943
            },
            {
              "id": 3,
              "value": 0.3568262276553027
            },
            {
              "id": 4,
              "value": 0.4083350157394937
            },
            {
              "id": 5,
              "value": 0.6286384751524534
            },
            {
              "id": 6,
              "value": 0.6650443043044558
            },
            {
              "id": 7,
              "value": 0.12428482021206877
            },
            {
              "id": 8,
              "value": 0.6713491337498131
            },
            {
              "id": 9,
              "value": 0.8179993916420166
            }
          ]
        },
        "output_format": "xml",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "computation_analyzer",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T11:48:52.002101",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_2f802d6e",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_2f802d6e",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T11:48:52.007660",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_dffddf8d",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_dffddf8d",
      "test_input": {
        "input_data": {
          "data": [
            0.9287394800899907,
            0.38993789837174375,
            0.5666419985516054,
            0.7127448595164372,
            0.08400635517542077
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T11:48:52.766509",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_d524d6ad",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with general specific converter capability, general specific scheduler capability, involving scheduler - Instance task_d524d6ad",
      "test_input": {
        "data": {
          "values": [
            42,
            50,
            54,
            56,
            60
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "integration_scheduler",
        "file_operations_converter"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T11:48:50.888387",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_db4bfc41",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring integration_connector, computation_optimizer, data_processing_transformer with involving connector, general specific connector capability, general specific optimizer capability - Instance task_db4bfc41",
      "test_input": {
        "input_data": {
          "data": [
            0.8647084123369474,
            0.4016079698463859,
            0.275407302187366,
            0.02159314303385529,
            0.1399560741376641
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "integration_connector",
        "computation_optimizer",
        "data_processing_transformer"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T11:48:50.887795",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_7348eb0d",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring computation_optimizer, utility_helper with general specific helper capability, involving optimizer, general specific optimizer capability - Instance task_7348eb0d",
      "test_input": {
        "input_data": {
          "data": [
            0.7711139150330166,
            0.5245224769603565,
            0.22407159856217818,
            0.8371137331120184,
            0.7030510569990334
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "computation_optimizer",
        "utility_helper"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T11:48:50.886567",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_d64cec06",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_d64cec06",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.18166885380568287
            },
            {
              "id": 1,
              "value": 0.11073866519883346
            },
            {
              "id": 2,
              "value": 0.9953073069051301
            },
            {
              "id": 3,
              "value": 0.13430051281892275
            },
            {
              "id": 4,
              "value": 0.824873184263576
            },
            {
              "id": 5,
              "value": 0.9571467570148201
            },
            {
              "id": 6,
              "value": 0.2598262242957574
            },
            {
              "id": 7,
              "value": 0.9884138586880435
            },
            {
              "id": 8,
              "value": 0.37674790489210097
            },
            {
              "id": 9,
              "value": 0.6350294079209158
            }
          ]
        },
        "output_format": "xml",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T11:48:52.004484",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_401b3346",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_401b3346",
      "test_input": {
        "input_data": {
          "data": [
            0.6890023249272711,
            0.003581860686939886,
            0.3626774878794403,
            0.8708367143594237,
            0.736314159147398
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "computation_calculator",
        "data_processing_validator",
        "computation_analyzer",
        "network_poster"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T11:48:52.774588",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_513087a7",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_513087a7",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T11:48:52.008769",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_8a47276f",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with general specific helper capability, general specific queue capability, involving helper - Instance task_8a47276f",
      "test_input": {
        "data": {
          "values": [
            20,
            93,
            89,
            50,
            25
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "utility_helper",
        "integration_queue"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T11:48:50.888698",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_6a2cf6c0",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_6a2cf6c0",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.8234916570089661
            },
            {
              "id": 1,
              "value": 0.649521094450037
            },
            {
              "id": 2,
              "value": 0.4912720818972711
            },
            {
              "id": 3,
              "value": 0.4516955691026141
            },
            {
              "id": 4,
              "value": 0.22571839314212883
            },
            {
              "id": 5,
              "value": 0.6102180052112087
            },
            {
              "id": 6,
              "value": 0.19213242794782748
            },
            {
              "id": 7,
              "value": 0.6163380545652165
            },
            {
              "id": 8,
              "value": 0.03079835903562722
            },
            {
              "id": 9,
              "value": 0.7084856572330255
            }
          ]
        },
        "output_format": "json",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T11:48:52.003440",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_853458a6",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with general specific converter capability, general specific scheduler capability, involving scheduler - Instance task_853458a6",
      "test_input": {
        "data": {
          "values": [
            29,
            7,
            70,
            36,
            75
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "integration_scheduler",
        "file_operations_converter"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T11:48:50.888839",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_28debfc7",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring computation_optimizer, utility_helper with general specific helper capability, involving optimizer, general specific optimizer capability - Instance task_28debfc7",
      "test_input": {
        "input_data": {
          "data": [
            0.6967175019804356,
            0.43193532283900826,
            0.008137767719067601,
            0.4542571292621972,
            0.7039960392119073
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "computation_optimizer",
        "utility_helper"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T11:48:50.887587",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_4714f13a",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_4714f13a",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T11:48:52.008391",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_ddc94eba",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_ddc94eba",
      "test_input": {
        "input_data": {
          "data": [
            0.7292413249180879,
            0.8132712088454525,
            0.6406164268077081,
            0.9754046060905343,
            0.4156402286794574
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T11:48:52.767466",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_a13d2859",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring computation_optimizer, utility_helper with general specific helper capability, involving optimizer, general specific optimizer capability - Instance task_a13d2859",
      "test_input": {
        "input_data": {
          "data": [
            0.07240035284670432,
            0.4245099215252709,
            0.7849465507975021,
            0.298383260973783,
            0.2867956466824303
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "computation_optimizer",
        "utility_helper"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T11:48:50.887670",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_0be11295",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_0be11295",
      "test_input": {
        "input_data": {
          "data": [
            0.6089787435730597,
            0.9520981376590898,
            0.7307113603188878,
            0.3667457147568739,
            0.8999921190341467
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "computation_calculator",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T11:48:52.775188",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_049d9391",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with general specific scheduler capability, involving router, general specific router capability - Instance task_049d9391",
      "test_input": {
        "data": {
          "values": [
            99,
            90,
            44,
            68,
            92
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "network_router",
        "integration_scheduler"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T11:48:50.888730",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_317f36be",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_317f36be",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.2312063076220835
            },
            {
              "id": 1,
              "value": 0.4490844209904383
            },
            {
              "id": 2,
              "value": 0.4284472493067263
            },
            {
              "id": 3,
              "value": 0.32947542737423896
            },
            {
              "id": 4,
              "value": 0.21055606647434222
            },
            {
              "id": 5,
              "value": 0.41728611714231967
            },
            {
              "id": 6,
              "value": 0.5557313432462017
            },
            {
              "id": 7,
              "value": 0.7967334394089257
            },
            {
              "id": 8,
              "value": 0.6091395174480315
            },
            {
              "id": 9,
              "value": 0.004076073724949225
            }
          ]
        },
        "output_format": "xml",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T11:48:52.003641",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_80884f85",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_80884f85",
      "test_input": {
        "input_data": {
          "data": [
            0.7756343803759923,
            0.7322530282667211,
            0.4731223231909396,
            0.7022391688566711,
            0.03756191506387996
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T11:48:52.776248",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_c8f2bda3",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_c8f2bda3",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T11:48:52.007564",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_4ef9ffe3",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with general specific scheduler capability, involving router, general specific router capability - Instance task_4ef9ffe3",
      "test_input": {
        "data": {
          "values": [
            15,
            5,
            83,
            87,
            82
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "network_router",
        "integration_scheduler"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T11:48:50.889036",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_0d504c56",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_0d504c56",
      "test_input": {
        "input_data": {
          "data": [
            0.024034540916958558,
            0.3761638500400637,
            0.9979294505214211,
            0.7633986911594322,
            0.8782251139995867
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "computation_calculator",
        "data_processing_validator",
        "computation_analyzer",
        "network_poster"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T11:48:52.765690",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_7eeb753f",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_7eeb753f",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T11:48:52.007689",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_ccaf70c7",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_ccaf70c7",
      "test_input": {
        "input_data": {
          "data": [
            0.7130936617429092,
            0.3942414750878296,
            0.16356071698857533,
            0.7657735150067217,
            0.46886437428096017
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "computation_calculator",
        "data_processing_validator",
        "computation_analyzer",
        "network_poster"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T11:48:52.769976",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_c8b6d042",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_c8b6d042",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.5937096448991908
            },
            {
              "id": 1,
              "value": 0.1829790969717915
            },
            {
              "id": 2,
              "value": 0.15526073044537114
            },
            {
              "id": 3,
              "value": 0.8970350197944144
            },
            {
              "id": 4,
              "value": 0.39920133920706224
            },
            {
              "id": 5,
              "value": 0.48893208002500166
            },
            {
              "id": 6,
              "value": 0.5689772911305591
            },
            {
              "id": 7,
              "value": 0.18319090827456697
            },
            {
              "id": 8,
              "value": 0.05316723929891731
            },
            {
              "id": 9,
              "value": 0.40862319194524777
            }
          ]
        },
        "output_format": "json",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "computation_analyzer",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T11:48:51.999509",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_71d7bf7f",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring computation_optimizer, utility_helper with general specific helper capability, involving optimizer, general specific optimizer capability - Instance task_71d7bf7f",
      "test_input": {
        "input_data": {
          "data": [
            0.9585844455956734,
            0.32309388431695896,
            0.7757266938502487,
            0.7915706744673066,
            0.40222264426561194
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "computation_optimizer",
        "utility_helper"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T11:48:50.886947",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_eb2dbf09",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_eb2dbf09",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.05641349040708099
            },
            {
              "id": 1,
              "value": 0.49160284732274284
            },
            {
              "id": 2,
              "value": 0.051527461074443504
            },
            {
              "id": 3,
              "value": 0.7716971830258648
            },
            {
              "id": 4,
              "value": 0.41898462959832883
            },
            {
              "id": 5,
              "value": 0.5412645335470558
            },
            {
              "id": 6,
              "value": 0.7071856603090596
            },
            {
              "id": 7,
              "value": 0.06534791646798466
            },
            {
              "id": 8,
              "value": 0.39783108395295164
            },
            {
              "id": 9,
              "value": 0.6036774926335785
            }
          ]
        },
        "output_format": "xml",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T11:48:52.004050",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_d47f3812",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_d47f3812",
      "test_input": {
        "input_data": {
          "data": [
            0.6178665584851821,
            0.3755986169443115,
            0.19002730924485733,
            0.6599393928575554,
            0.940179220906465
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "computation_calculator",
        "data_processing_validator",
        "computation_analyzer",
        "network_poster"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T11:48:52.767023",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_457554df",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_457554df",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.43898571894048355
            },
            {
              "id": 1,
              "value": 0.3036393491602273
            },
            {
              "id": 2,
              "value": 0.40770976546628446
            },
            {
              "id": 3,
              "value": 0.7796969301786109
            },
            {
              "id": 4,
              "value": 0.9008378424837685
            },
            {
              "id": 5,
              "value": 0.9522514027439793
            },
            {
              "id": 6,
              "value": 0.7744447605191533
            },
            {
              "id": 7,
              "value": 0.7626195447873287
            },
            {
              "id": 8,
              "value": 0.3881295782299158
            },
            {
              "id": 9,
              "value": 0.3433297959539032
            }
          ]
        },
        "output_format": "csv",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T11:48:52.000792",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_d28be3a5",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_d28be3a5",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T11:48:52.007909",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_152f7c20",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring integration_connector, computation_optimizer, data_processing_transformer with involving connector, general specific connector capability, general specific optimizer capability - Instance task_152f7c20",
      "test_input": {
        "input_data": {
          "data": [
            0.8362258961578802,
            0.024022186543738444,
            0.2342947105087777,
            0.6945100450505327,
            0.3224443670937044
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "integration_connector",
        "computation_optimizer",
        "data_processing_transformer"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T11:48:50.886989",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_98bef3e6",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_98bef3e6",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.3587341325527934
            },
            {
              "id": 1,
              "value": 0.1811527300664264
            },
            {
              "id": 2,
              "value": 0.11335744051311081
            },
            {
              "id": 3,
              "value": 0.18474454786481376
            },
            {
              "id": 4,
              "value": 0.06566273763866182
            },
            {
              "id": 5,
              "value": 0.42781737309468415
            },
            {
              "id": 6,
              "value": 0.25980734167733033
            },
            {
              "id": 7,
              "value": 0.3067686437350957
            },
            {
              "id": 8,
              "value": 0.9029308672420623
            },
            {
              "id": 9,
              "value": 0.8657313436978821
            }
          ]
        },
        "output_format": "csv",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T11:48:52.003266",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_4e1c1103",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_4e1c1103",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.6115570247739586
            },
            {
              "id": 1,
              "value": 0.39147092510442194
            },
            {
              "id": 2,
              "value": 0.9787941486721827
            },
            {
              "id": 3,
              "value": 0.8340470157693011
            },
            {
              "id": 4,
              "value": 0.6560192592620525
            },
            {
              "id": 5,
              "value": 0.9816160889268941
            },
            {
              "id": 6,
              "value": 0.0678798281618076
            },
            {
              "id": 7,
              "value": 0.05778847891161509
            },
            {
              "id": 8,
              "value": 0.34249430457450236
            },
            {
              "id": 9,
              "value": 0.09404153364031098
            }
          ]
        },
        "output_format": "csv",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T11:48:52.007217",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_83563f14",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_83563f14",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T11:48:52.008206",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_0f3cc93a",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_0f3cc93a",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.2444395316363509
            },
            {
              "id": 1,
              "value": 0.7511598756407807
            },
            {
              "id": 2,
              "value": 0.3493149232101569
            },
            {
              "id": 3,
              "value": 0.997961339865525
            },
            {
              "id": 4,
              "value": 0.46684146332014376
            },
            {
              "id": 5,
              "value": 0.3833156863078465
            },
            {
              "id": 6,
              "value": 0.5091788811710309
            },
            {
              "id": 7,
              "value": 0.5485980231429143
            },
            {
              "id": 8,
              "value": 0.3424770964553441
            },
            {
              "id": 9,
              "value": 0.840002195846255
            }
          ]
        },
        "output_format": "json",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "computation_analyzer",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T11:48:52.003749",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_125db987",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring integration_connector, computation_optimizer, data_processing_transformer with involving connector, general specific connector capability, general specific optimizer capability - Instance task_125db987",
      "test_input": {
        "input_data": {
          "data": [
            0.5989155272353317,
            0.7731257207104686,
            0.7122647772676514,
            0.22931244905939274,
            0.2570647114172636
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "integration_connector",
        "computation_optimizer",
        "data_processing_transformer"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T11:48:50.887939",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_be67d9d3",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring computation_optimizer, utility_helper with general specific helper capability, involving optimizer, general specific optimizer capability - Instance task_be67d9d3",
      "test_input": {
        "input_data": {
          "data": [
            0.4262314751313723,
            0.21942949027242598,
            0.35462711715959117,
            0.3886727744301799,
            0.5978697285901282
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "computation_optimizer",
        "utility_helper"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T11:48:50.887911",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_14ea0d35",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_14ea0d35",
      "test_input": {
        "input_data": {
          "data": [
            0.029009987074420374,
            0.6031686002956262,
            0.5475248828741895,
            0.5709577267612036,
            0.5680199598600243
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "computation_calculator",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T11:48:52.776368",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_65b16b64",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_65b16b64",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.4167812895904135
            },
            {
              "id": 1,
              "value": 0.22201256002841574
            },
            {
              "id": 2,
              "value": 0.701167935576626
            },
            {
              "id": 3,
              "value": 0.5175846496330364
            },
            {
              "id": 4,
              "value": 0.4746613636876954
            },
            {
              "id": 5,
              "value": 0.3658342988870855
            },
            {
              "id": 6,
              "value": 0.5502432633901664
            },
            {
              "id": 7,
              "value": 0.4680033690163774
            },
            {
              "id": 8,
              "value": 0.985088518980509
            },
            {
              "id": 9,
              "value": 0.6693520933186874
            }
          ]
        },
        "output_format": "json",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T11:48:52.006045",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_b6271c3f",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_b6271c3f",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.12512457439246194
            },
            {
              "id": 1,
              "value": 0.3363063527545028
            },
            {
              "id": 2,
              "value": 0.8390541047672255
            },
            {
              "id": 3,
              "value": 0.9237228677068405
            },
            {
              "id": 4,
              "value": 0.22905728075948129
            },
            {
              "id": 5,
              "value": 0.687437909397757
            },
            {
              "id": 6,
              "value": 0.14266481595902625
            },
            {
              "id": 7,
              "value": 0.7724909029915741
            },
            {
              "id": 8,
              "value": 0.08161574059226828
            },
            {
              "id": 9,
              "value": 0.9564135562270758
            }
          ]
        },
        "output_format": "csv",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T11:48:51.998788",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_91a259ee",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_91a259ee",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T11:48:52.007572",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_5930f8e7",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with general specific scheduler capability, involving router, general specific router capability - Instance task_5930f8e7",
      "test_input": {
        "data": {
          "values": [
            99,
            62,
            77,
            1,
            24
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "network_router",
        "integration_scheduler"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T11:48:50.888500",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_aac1cf8b",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring integration_connector, computation_optimizer, data_processing_transformer with involving connector, general specific connector capability, general specific optimizer capability - Instance task_aac1cf8b",
      "test_input": {
        "input_data": {
          "data": [
            0.8335571201708631,
            0.7069167846983118,
            0.2762003347305637,
            0.039862219801940046,
            0.612346297198971
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "integration_connector",
        "computation_optimizer",
        "data_processing_transformer"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T11:48:50.887853",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_b91dfe60",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring integration_connector, computation_optimizer, data_processing_transformer with involving connector, general specific connector capability, general specific optimizer capability - Instance task_b91dfe60",
      "test_input": {
        "input_data": {
          "data": [
            0.8402237518118221,
            0.2823835709763096,
            0.16237887960455788,
            0.49162117571648467,
            0.36059797452617925
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "integration_connector",
        "computation_optimizer",
        "data_processing_transformer"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T11:48:50.886397",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_cdeceabf",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with general specific scheduler capability, involving router, general specific router capability - Instance task_cdeceabf",
      "test_input": {
        "data": {
          "values": [
            7,
            85,
            69,
            3,
            8
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "network_router",
        "integration_scheduler"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T11:48:50.888983",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_577d92e5",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with general specific helper capability, general specific queue capability, involving helper - Instance task_577d92e5",
      "test_input": {
        "data": {
          "values": [
            40,
            96,
            83,
            97,
            11
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "utility_helper",
        "integration_queue"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T11:48:50.889089",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_5140d9a4",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_5140d9a4",
      "test_input": {
        "input_data": {
          "data": [
            0.5807797071327329,
            0.3882064042676653,
            0.8843866925796606,
            0.4107324820652041,
            0.7542806812521766
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T11:48:52.768638",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_a083e779",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_a083e779",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.5543055333502273
            },
            {
              "id": 1,
              "value": 0.6829644264584764
            },
            {
              "id": 2,
              "value": 0.7233248532114568
            },
            {
              "id": 3,
              "value": 0.16034136723347614
            },
            {
              "id": 4,
              "value": 0.3522530565538322
            },
            {
              "id": 5,
              "value": 0.9926603554293927
            },
            {
              "id": 6,
              "value": 0.4120531179035626
            },
            {
              "id": 7,
              "value": 0.7356700643575478
            },
            {
              "id": 8,
              "value": 0.061081247375489034
            },
            {
              "id": 9,
              "value": 0.7845977311406388
            }
          ]
        },
        "output_format": "xml",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T11:48:52.006426",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_44269511",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_44269511",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.8272714637406386
            },
            {
              "id": 1,
              "value": 0.8081205342538352
            },
            {
              "id": 2,
              "value": 0.1113233118811241
            },
            {
              "id": 3,
              "value": 0.41127319273936214
            },
            {
              "id": 4,
              "value": 0.5646477051697757
            },
            {
              "id": 5,
              "value": 0.875404849789826
            },
            {
              "id": 6,
              "value": 0.6683468443525569
            },
            {
              "id": 7,
              "value": 0.45123561226657516
            },
            {
              "id": 8,
              "value": 0.1348324377594604
            },
            {
              "id": 9,
              "value": 0.690056005473571
            }
          ]
        },
        "output_format": "xml",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T11:48:51.999111",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_23010b26",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring computation_optimizer, utility_helper with general specific helper capability, involving optimizer, general specific optimizer capability - Instance task_23010b26",
      "test_input": {
        "input_data": {
          "data": [
            0.9713812447944917,
            0.703152017815417,
            0.3479523465094436,
            0.08941162175425865,
            0.4222730873859014
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "computation_optimizer",
        "utility_helper"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T11:48:50.886836",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_ccf01be4",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with general specific helper capability, general specific queue capability, involving helper - Instance task_ccf01be4",
      "test_input": {
        "data": {
          "values": [
            34,
            51,
            33,
            60,
            44
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "utility_helper",
        "integration_queue"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T11:48:50.888435",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_4876600b",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring computation_optimizer, utility_helper with general specific helper capability, involving optimizer, general specific optimizer capability - Instance task_4876600b",
      "test_input": {
        "input_data": {
          "data": [
            0.19063381183575223,
            0.6292843721896215,
            0.4626550777294026,
            0.6983706397876132,
            0.8799361070358859
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "computation_optimizer",
        "utility_helper"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T11:48:50.887762",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_1491bd57",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_1491bd57",
      "test_input": {
        "input_data": {
          "data": [
            0.8423043006855908,
            0.10766711133954077,
            0.3176994263320445,
            0.28842619107333367,
            0.9094206162691609
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "computation_calculator",
        "data_processing_validator",
        "computation_analyzer",
        "network_poster"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T11:48:52.769402",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_52b9ba1a",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_52b9ba1a",
      "test_input": {
        "input_data": {
          "data": [
            0.8864485058045625,
            0.9961880176576006,
            0.7601322263281626,
            0.578255262980521,
            0.21692962893973478
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "computation_calculator",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T11:48:52.773245",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_040fada5",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with general specific converter capability, general specific scheduler capability, involving scheduler - Instance task_040fada5",
      "test_input": {
        "data": {
          "values": [
            37,
            79,
            79,
            9,
            15
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "integration_scheduler",
        "file_operations_converter"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T11:48:50.888288",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_3ff8cf44",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with general specific scheduler capability, involving router, general specific router capability - Instance task_3ff8cf44",
      "test_input": {
        "data": {
          "values": [
            33,
            26,
            12,
            42,
            71
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "network_router",
        "integration_scheduler"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T11:48:50.888582",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_6621000f",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_6621000f",
      "test_input": {
        "input_data": {
          "data": [
            0.05049020017392658,
            0.42266947473341476,
            0.7056835406017488,
            0.9936995780502698,
            0.6734935029769433
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T11:48:52.774725",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_02b56752",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_02b56752",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.6243557887635408
            },
            {
              "id": 1,
              "value": 0.008318313104638708
            },
            {
              "id": 2,
              "value": 0.03694899753674907
            },
            {
              "id": 3,
              "value": 0.7066340885618829
            },
            {
              "id": 4,
              "value": 0.753909198394396
            },
            {
              "id": 5,
              "value": 0.11189686158368783
            },
            {
              "id": 6,
              "value": 0.09618172859507212
            },
            {
              "id": 7,
              "value": 0.8880941667560727
            },
            {
              "id": 8,
              "value": 0.22732244949223135
            },
            {
              "id": 9,
              "value": 0.08985586267298484
            }
          ]
        },
        "output_format": "xml",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T11:48:52.000700",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_661a2d4b",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with general specific helper capability, general specific queue capability, involving helper - Instance task_661a2d4b",
      "test_input": {
        "data": {
          "values": [
            77,
            53,
            28,
            22,
            96
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "utility_helper",
        "integration_queue"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T11:48:50.888362",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_224cddd2",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_224cddd2",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.6120905492120352
            },
            {
              "id": 1,
              "value": 0.3206434775177256
            },
            {
              "id": 2,
              "value": 0.8886503495125668
            },
            {
              "id": 3,
              "value": 0.14437648369174383
            },
            {
              "id": 4,
              "value": 0.23681955686224498
            },
            {
              "id": 5,
              "value": 0.539462178832094
            },
            {
              "id": 6,
              "value": 0.18444469190640078
            },
            {
              "id": 7,
              "value": 0.5748686089258679
            },
            {
              "id": 8,
              "value": 0.5458424366215748
            },
            {
              "id": 9,
              "value": 0.46132571311144854
            }
          ]
        },
        "output_format": "csv",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "computation_analyzer",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T11:48:51.997029",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_5809277b",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_5809277b",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T11:48:52.008356",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_96ea4a4b",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring file_operations_writer, integration_scheduler, network_router with involving writer, general specific scheduler capability, general specific writer capability - Instance task_96ea4a4b",
      "test_input": {
        "input_data": {
          "data": [
            0.9459747171085223,
            0.9162076359142513,
            0.61290216798104,
            0.5468823771141187,
            0.2247064432405549
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "file_operations_writer",
        "integration_scheduler",
        "network_router"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T11:48:50.886939",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_0274b5d4",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_0274b5d4",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T11:48:52.007931",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_008aec18",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_008aec18",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T11:48:52.008243",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_6aa25824",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_6aa25824",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T11:48:52.007755",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_3a579b2d",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_3a579b2d",
      "test_input": {
        "input_data": {
          "data": [
            0.11085566541882863,
            0.8564152749993651,
            0.6441087214103731,
            0.565639086310532,
            0.11539160375203994
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "computation_calculator",
        "data_processing_validator",
        "computation_analyzer",
        "network_poster"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T11:48:52.768771",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_478cb8fc",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_478cb8fc",
      "test_input": {
        "input_data": {
          "data": [
            0.26825648139900304,
            0.4551877870071199,
            0.3035860392094226,
            0.5355863933019527,
            0.9501197582060739
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "computation_calculator",
        "data_processing_validator",
        "computation_analyzer",
        "network_poster"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T11:48:52.770788",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_b8e71dc3",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_b8e71dc3",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.184750258376291
            },
            {
              "id": 1,
              "value": 0.16409765282636246
            },
            {
              "id": 2,
              "value": 0.5513938017582416
            },
            {
              "id": 3,
              "value": 0.8496874613501398
            },
            {
              "id": 4,
              "value": 0.5063480378657851
            },
            {
              "id": 5,
              "value": 0.30234405327719693
            },
            {
              "id": 6,
              "value": 0.40497528027946095
            },
            {
              "id": 7,
              "value": 0.3432255914051655
            },
            {
              "id": 8,
              "value": 0.9968296135166191
            },
            {
              "id": 9,
              "value": 0.39544430829602906
            }
          ]
        },
        "output_format": "xml",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T11:48:52.004829",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_430303e0",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_430303e0",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.4091309887523443
            },
            {
              "id": 1,
              "value": 0.9945097538064082
            },
            {
              "id": 2,
              "value": 0.4550184804251428
            },
            {
              "id": 3,
              "value": 0.8777086933732033
            },
            {
              "id": 4,
              "value": 0.23334228124984102
            },
            {
              "id": 5,
              "value": 0.46802610172223047
            },
            {
              "id": 6,
              "value": 0.03876193711388021
            },
            {
              "id": 7,
              "value": 0.9996333435352741
            },
            {
              "id": 8,
              "value": 0.8837586614313374
            },
            {
              "id": 9,
              "value": 0.22316301209071854
            }
          ]
        },
        "output_format": "csv",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T11:48:51.998076",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_17f39d50",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_17f39d50",
      "test_input": {
        "input_data": {
          "data": [
            0.9558660016690563,
            0.9882409940769735,
            0.8360776164245485,
            0.3305852742619385,
            0.3438277417000506
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "computation_calculator",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T11:48:52.772170",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_9d0cd95f",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_9d0cd95f",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.11831765414630524
            },
            {
              "id": 1,
              "value": 0.8191152933087605
            },
            {
              "id": 2,
              "value": 0.9294106041616007
            },
            {
              "id": 3,
              "value": 0.06808391756967813
            },
            {
              "id": 4,
              "value": 0.3988457381559476
            },
            {
              "id": 5,
              "value": 0.362941353393457
            },
            {
              "id": 6,
              "value": 0.4537182103691726
            },
            {
              "id": 7,
              "value": 0.5792510526615527
            },
            {
              "id": 8,
              "value": 0.8706205819626369
            },
            {
              "id": 9,
              "value": 0.32857476677450925
            }
          ]
        },
        "output_format": "xml",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "computation_analyzer",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T11:48:51.999750",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_0e30e60b",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring integration_connector, computation_optimizer, data_processing_transformer with involving connector, general specific connector capability, general specific optimizer capability - Instance task_0e30e60b",
      "test_input": {
        "input_data": {
          "data": [
            0.2567835262439051,
            0.8530266422310179,
            0.26049661640656585,
            0.13995705033233052,
            0.15116204688441304
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "integration_connector",
        "computation_optimizer",
        "data_processing_transformer"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T11:48:50.887519",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_025218ba",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_025218ba",
      "test_input": {
        "input_data": {
          "data": [
            0.5306772620227805,
            0.3410717166348446,
            0.039368797994374316,
            0.11944681947287206,
            0.5888232523853517
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T11:48:52.774202",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_d340290b",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring integration_connector, computation_optimizer, data_processing_transformer with involving connector, general specific connector capability, general specific optimizer capability - Instance task_d340290b",
      "test_input": {
        "input_data": {
          "data": [
            0.2952139771410657,
            0.07432641556094755,
            0.44049226822129606,
            0.24302734753796618,
            0.3750548972412485
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "integration_connector",
        "computation_optimizer",
        "data_processing_transformer"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T11:48:50.887930",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_572ed75e",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_572ed75e",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.1504100635478025
            },
            {
              "id": 1,
              "value": 0.2316118512399279
            },
            {
              "id": 2,
              "value": 0.44937408050655603
            },
            {
              "id": 3,
              "value": 0.44401615376149106
            },
            {
              "id": 4,
              "value": 0.8480109769237741
            },
            {
              "id": 5,
              "value": 0.6007043837122884
            },
            {
              "id": 6,
              "value": 0.07478064269111018
            },
            {
              "id": 7,
              "value": 0.3872340287331819
            },
            {
              "id": 8,
              "value": 0.5250473999464929
            },
            {
              "id": 9,
              "value": 0.9298538675734611
            }
          ]
        },
        "output_format": "csv",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T11:48:52.002452",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_0dd90d8a",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_0dd90d8a",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.6145052459008334
            },
            {
              "id": 1,
              "value": 0.8395573984885596
            },
            {
              "id": 2,
              "value": 0.7326589777694595
            },
            {
              "id": 3,
              "value": 0.13816981215404112
            },
            {
              "id": 4,
              "value": 0.8485770719087279
            },
            {
              "id": 5,
              "value": 0.7948756563567076
            },
            {
              "id": 6,
              "value": 0.020722209461657926
            },
            {
              "id": 7,
              "value": 0.5746929232081318
            },
            {
              "id": 8,
              "value": 0.9699279654152092
            },
            {
              "id": 9,
              "value": 0.30823396684096827
            }
          ]
        },
        "output_format": "csv",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "computation_analyzer",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T11:48:52.006149",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_cdc8e643",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_cdc8e643",
      "test_input": {
        "input_data": {
          "data": [
            0.32503031410210215,
            0.9970883606277156,
            0.3989828428281703,
            0.4247686291992717,
            0.4633194886319646
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "computation_calculator",
        "data_processing_validator",
        "computation_analyzer"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T11:48:52.771620",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_3ddbfe0f",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring file_operations_writer, integration_scheduler, network_router with involving writer, general specific scheduler capability, general specific writer capability - Instance task_3ddbfe0f",
      "test_input": {
        "input_data": {
          "data": [
            0.7691763812008038,
            0.39719273044397896,
            0.8232655022122439,
            0.5532279170663195,
            0.22614673099259364
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "file_operations_writer",
        "integration_scheduler",
        "network_router"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T11:48:50.888074",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_3a475b43",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring computation_optimizer, utility_helper with general specific helper capability, involving optimizer, general specific optimizer capability - Instance task_3a475b43",
      "test_input": {
        "input_data": {
          "data": [
            0.26919652192842336,
            0.4630506171317116,
            0.5315403290387452,
            0.2716830979993543,
            0.4454908625910772
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "computation_optimizer",
        "utility_helper"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T11:48:50.887605",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_23e56afe",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_23e56afe",
      "test_input": {
        "input_data": {
          "data": [
            0.7524573395459567,
            0.963034959592769,
            0.4790673529926114,
            0.07117366320297835,
            0.07290541141729434
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T11:48:52.770925",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_b86c65c8",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_b86c65c8",
      "test_input": {
        "input_data": {
          "data": [
            0.38226261442184184,
            0.8474607118756248,
            0.7412079300837502,
            0.18101458092115685,
            0.7411983586691407
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "computation_calculator",
        "data_processing_validator",
        "computation_analyzer"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T11:48:52.776139",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_743dc269",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_743dc269",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.2572171559858458
            },
            {
              "id": 1,
              "value": 0.6970828594372098
            },
            {
              "id": 2,
              "value": 0.5732141477387872
            },
            {
              "id": 3,
              "value": 0.29972823274968075
            },
            {
              "id": 4,
              "value": 0.24218182335517924
            },
            {
              "id": 5,
              "value": 0.32097442608018234
            },
            {
              "id": 6,
              "value": 0.9516988372623298
            },
            {
              "id": 7,
              "value": 0.382798415542311
            },
            {
              "id": 8,
              "value": 0.23335527175786241
            },
            {
              "id": 9,
              "value": 0.9630596617121293
            }
          ]
        },
        "output_format": "csv",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "computation_analyzer",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T11:48:51.997740",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_b9844636",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_b9844636",
      "test_input": {
        "input_data": {
          "data": [
            0.9457295246835236,
            0.5328492105159468,
            0.8198976587907479,
            0.2726882132638102,
            0.01741618454362792
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "computation_calculator",
        "data_processing_validator",
        "computation_analyzer"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T11:48:52.771377",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_4be72b69",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_4be72b69",
      "test_input": {
        "input_data": {
          "data": [
            0.05245123815589037,
            0.9950414554055735,
            0.2003249846067282,
            0.33315055949199457,
            0.4188898730749109
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "computation_calculator",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T11:48:52.767775",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_ed7dbd3e",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_ed7dbd3e",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.17030312031049832
            },
            {
              "id": 1,
              "value": 0.47590071721163696
            },
            {
              "id": 2,
              "value": 0.896116697151979
            },
            {
              "id": 3,
              "value": 0.7975598561480721
            },
            {
              "id": 4,
              "value": 0.28592583573739505
            },
            {
              "id": 5,
              "value": 0.912977611938339
            },
            {
              "id": 6,
              "value": 0.5597920534559014
            },
            {
              "id": 7,
              "value": 0.1799626871857507
            },
            {
              "id": 8,
              "value": 0.45937839184566576
            },
            {
              "id": 9,
              "value": 0.8079294563699475
            }
          ]
        },
        "output_format": "json",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T11:48:52.004994",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_c536120b",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_c536120b",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.2296719670347025
            },
            {
              "id": 1,
              "value": 0.4266889054809203
            },
            {
              "id": 2,
              "value": 0.9940828732118436
            },
            {
              "id": 3,
              "value": 0.8934200828465941
            },
            {
              "id": 4,
              "value": 0.23234524562024506
            },
            {
              "id": 5,
              "value": 0.4382099825238589
            },
            {
              "id": 6,
              "value": 0.8905725728978651
            },
            {
              "id": 7,
              "value": 0.1440698609260206
            },
            {
              "id": 8,
              "value": 0.5662794570014965
            },
            {
              "id": 9,
              "value": 0.005469151504425285
            }
          ]
        },
        "output_format": "xml",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T11:48:52.005465",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_c63a28a5",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_c63a28a5",
      "test_input": {
        "input_data": {
          "data": [
            0.08008331746181907,
            0.6003358546674975,
            0.079613189119213,
            0.5585359535542535,
            0.40247653119904947
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "computation_calculator",
        "data_processing_validator",
        "computation_analyzer"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T11:48:52.765803",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_f3a47bc9",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_f3a47bc9",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T11:48:52.008373",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_58929b20",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with general specific converter capability, general specific scheduler capability, involving scheduler - Instance task_58929b20",
      "test_input": {
        "data": {
          "values": [
            35,
            18,
            62,
            83,
            96
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "integration_scheduler",
        "file_operations_converter"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T11:48:50.888827",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_fa034423",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_fa034423",
      "test_input": {
        "input_data": {
          "data": [
            0.3555383040914474,
            0.9804731116497701,
            0.3106970227671715,
            0.6308919408231831,
            0.9997978450267174
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "computation_calculator",
        "data_processing_validator",
        "computation_analyzer"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T11:48:52.769735",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_4d276c8a",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_4d276c8a",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T11:48:52.008822",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_901d31de",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with general specific helper capability, general specific queue capability, involving helper - Instance task_901d31de",
      "test_input": {
        "data": {
          "values": [
            98,
            2,
            66,
            37,
            82
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "utility_helper",
        "integration_queue"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T11:48:50.889024",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_603f90fe",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_603f90fe",
      "test_input": {
        "input_data": {
          "data": [
            0.5587029062919098,
            0.7370956475238347,
            0.9677751474248992,
            0.8489155460153612,
            0.14235399765332812
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "computation_calculator",
        "data_processing_validator",
        "computation_analyzer"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T11:48:52.770300",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_d9c0c77e",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_d9c0c77e",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T11:48:52.007645",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_5d1ee53f",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring computation_optimizer, utility_helper with general specific helper capability, involving optimizer, general specific optimizer capability - Instance task_5d1ee53f",
      "test_input": {
        "input_data": {
          "data": [
            0.5924760782894627,
            0.1828234284043393,
            0.8676294957935912,
            0.4214576316544333,
            0.40966857103127075
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "computation_optimizer",
        "utility_helper"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T11:48:50.886953",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_6fd4685e",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring integration_connector, computation_optimizer, data_processing_transformer with involving connector, general specific connector capability, general specific optimizer capability - Instance task_6fd4685e",
      "test_input": {
        "input_data": {
          "data": [
            0.28488745412368355,
            0.3619411736109919,
            0.9622194260907603,
            0.46057816971876664,
            0.503472943973545
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "integration_connector",
        "computation_optimizer",
        "data_processing_transformer"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T11:48:50.888101",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_555d060a",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring integration_connector, computation_optimizer, data_processing_transformer with involving connector, general specific connector capability, general specific optimizer capability - Instance task_555d060a",
      "test_input": {
        "input_data": {
          "data": [
            0.48860697918599627,
            0.08501212393133017,
            0.6256632212330112,
            0.2093354972367738,
            0.4943468524364808
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "integration_connector",
        "computation_optimizer",
        "data_processing_transformer"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T11:48:50.888153",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_803c925f",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_803c925f",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T11:48:52.008340",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_4da01a12",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with general specific scheduler capability, involving router, general specific router capability - Instance task_4da01a12",
      "test_input": {
        "data": {
          "values": [
            76,
            78,
            30,
            59,
            8
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "network_router",
        "integration_scheduler"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T11:48:50.889125",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_a0a81fc3",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring computation_optimizer, utility_helper with general specific helper capability, involving optimizer, general specific optimizer capability - Instance task_a0a81fc3",
      "test_input": {
        "input_data": {
          "data": [
            0.07161977378936557,
            0.16352244940123994,
            0.04621257177502325,
            0.7128125152533608,
            0.5304483005439564
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "computation_optimizer",
        "utility_helper"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T11:48:50.887829",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_e3afc5dd",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring computation_optimizer, utility_helper with general specific helper capability, involving optimizer, general specific optimizer capability - Instance task_e3afc5dd",
      "test_input": {
        "input_data": {
          "data": [
            0.3119260602179459,
            0.17933073917446074,
            0.8693727657507154,
            0.5173169790977197,
            0.38053440402762784
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "computation_optimizer",
        "utility_helper"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T11:48:50.887733",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_2391f39e",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with general specific helper capability, general specific queue capability, involving helper - Instance task_2391f39e",
      "test_input": {
        "data": {
          "values": [
            17,
            86,
            11,
            24,
            43
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "utility_helper",
        "integration_queue"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T11:48:50.889252",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_eb2df12b",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_eb2df12b",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T11:48:52.008233",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_8498019d",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with general specific scheduler capability, involving router, general specific router capability - Instance task_8498019d",
      "test_input": {
        "data": {
          "values": [
            38,
            96,
            100,
            34,
            100
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "network_router",
        "integration_scheduler"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T11:48:50.889314",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_3705605d",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with general specific helper capability, general specific queue capability, involving helper - Instance task_3705605d",
      "test_input": {
        "data": {
          "values": [
            76,
            82,
            75,
            51,
            79
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "utility_helper",
        "integration_queue"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T11:48:50.889354",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_e2e73dba",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring computation_optimizer, utility_helper with general specific helper capability, involving optimizer, general specific optimizer capability - Instance task_e2e73dba",
      "test_input": {
        "input_data": {
          "data": [
            0.40820273048661837,
            0.20924214124022955,
            0.7211731024791214,
            0.9274335238664425,
            0.7957517732014705
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "computation_optimizer",
        "utility_helper"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T11:48:50.887837",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_c7953c8e",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with general specific helper capability, general specific queue capability, involving helper - Instance task_c7953c8e",
      "test_input": {
        "data": {
          "values": [
            93,
            30,
            94,
            37,
            78
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "utility_helper",
        "integration_queue"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T11:48:50.889067",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_297230b9",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring integration_connector, computation_optimizer, data_processing_transformer with involving connector, general specific connector capability, general specific optimizer capability - Instance task_297230b9",
      "test_input": {
        "input_data": {
          "data": [
            0.6524519969382181,
            0.14241228335999145,
            0.5894554494302233,
            0.3626799371281121,
            0.887258377784043
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "integration_connector",
        "computation_optimizer",
        "data_processing_transformer"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T11:48:50.888127",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_b8db91eb",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_b8db91eb",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.7388388307573357
            },
            {
              "id": 1,
              "value": 0.4755392986709158
            },
            {
              "id": 2,
              "value": 0.5726088884872103
            },
            {
              "id": 3,
              "value": 0.47340361702011735
            },
            {
              "id": 4,
              "value": 0.978984505499192
            },
            {
              "id": 5,
              "value": 0.08093291030744543
            },
            {
              "id": 6,
              "value": 0.8372607269188568
            },
            {
              "id": 7,
              "value": 0.2980828659017122
            },
            {
              "id": 8,
              "value": 0.5055274613319448
            },
            {
              "id": 9,
              "value": 0.47882705626442834
            }
          ]
        },
        "output_format": "csv",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T11:48:52.004907",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_75e4b823",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring integration_connector, computation_optimizer, data_processing_transformer with involving connector, general specific connector capability, general specific optimizer capability - Instance task_75e4b823",
      "test_input": {
        "input_data": {
          "data": [
            0.385112217846196,
            0.22197647906481677,
            0.07487035935328534,
            0.6838643812652918,
            0.6418897815465994
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "integration_connector",
        "computation_optimizer",
        "data_processing_transformer"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T11:48:50.888196",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_d1a823fd",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_d1a823fd",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.9208016127815575
            },
            {
              "id": 1,
              "value": 0.09981597782824825
            },
            {
              "id": 2,
              "value": 0.4987759921689513
            },
            {
              "id": 3,
              "value": 0.30910136196977045
            },
            {
              "id": 4,
              "value": 0.23054113373652985
            },
            {
              "id": 5,
              "value": 0.19335540137418228
            },
            {
              "id": 6,
              "value": 0.6197942429854857
            },
            {
              "id": 7,
              "value": 0.3746228482105818
            },
            {
              "id": 8,
              "value": 0.0629315728730867
            },
            {
              "id": 9,
              "value": 0.4159172428125112
            }
          ]
        },
        "output_format": "xml",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "computation_analyzer",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T11:48:52.006608",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_429153d3",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_429153d3",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T11:48:52.007960",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_2950ed65",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_2950ed65",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T11:48:52.007748",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_44ca26a0",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with general specific converter capability, general specific scheduler capability, involving scheduler - Instance task_44ca26a0",
      "test_input": {
        "data": {
          "values": [
            76,
            58,
            33,
            23,
            50
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "integration_scheduler",
        "file_operations_converter"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T11:48:50.888927",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_b433e135",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_b433e135",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T11:48:52.008039",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_47a5befb",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring file_operations_writer, integration_scheduler, network_router with involving writer, general specific scheduler capability, general specific writer capability - Instance task_47a5befb",
      "test_input": {
        "input_data": {
          "data": [
            0.2695623894347773,
            0.8877720281439022,
            0.9710895764286422,
            0.5619113315018607,
            0.25826005347790515
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "file_operations_writer",
        "integration_scheduler",
        "network_router"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T11:48:50.887711",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_e5559616",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_e5559616",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.6859165008057676
            },
            {
              "id": 1,
              "value": 0.0778982963989554
            },
            {
              "id": 2,
              "value": 0.3450899280499031
            },
            {
              "id": 3,
              "value": 0.44003624609286784
            },
            {
              "id": 4,
              "value": 0.6565812132250533
            },
            {
              "id": 5,
              "value": 0.12798444278741627
            },
            {
              "id": 6,
              "value": 0.6085193490749182
            },
            {
              "id": 7,
              "value": 0.36014261458596597
            },
            {
              "id": 8,
              "value": 0.06210730563106526
            },
            {
              "id": 9,
              "value": 0.6298512804976598
            }
          ]
        },
        "output_format": "json",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "computation_analyzer",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T11:48:52.001745",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_13f2e5cc",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring integration_connector, computation_optimizer, data_processing_transformer with involving connector, general specific connector capability, general specific optimizer capability - Instance task_13f2e5cc",
      "test_input": {
        "input_data": {
          "data": [
            0.3130064284599954,
            0.9314648674786615,
            0.9511968013908341,
            0.3120044172592442,
            0.7139271319574526
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "integration_connector",
        "computation_optimizer",
        "data_processing_transformer"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T11:48:50.887596",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_b3da3518",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_b3da3518",
      "test_input": {
        "input_data": {
          "data": [
            0.06781595343987434,
            0.8599987057094765,
            0.237814751759983,
            0.14176654612003659,
            0.9984251486131117
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "computation_calculator",
        "data_processing_validator",
        "computation_analyzer",
        "network_poster"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T11:48:52.770459",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_04d7fbed",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with general specific scheduler capability, involving router, general specific router capability - Instance task_04d7fbed",
      "test_input": {
        "data": {
          "values": [
            88,
            85,
            71,
            96,
            95
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "network_router",
        "integration_scheduler"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T11:48:50.888552",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_c50fb777",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_c50fb777",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T11:48:52.007887",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_5228f2c1",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_5228f2c1",
      "test_input": {
        "input_data": {
          "data": [
            0.5576006037324179,
            0.5411520647653525,
            0.6992098916124895,
            0.8140779600525412,
            0.4511959141184003
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "computation_calculator",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T11:48:52.768959",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_ee175d90",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring file_operations_writer, integration_scheduler, network_router with involving writer, general specific scheduler capability, general specific writer capability - Instance task_ee175d90",
      "test_input": {
        "input_data": {
          "data": [
            0.5895253474983746,
            0.5679435248959355,
            0.2285512852866416,
            0.7578121832684651,
            0.9934445577431082
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "file_operations_writer",
        "integration_scheduler",
        "network_router"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T11:48:50.886737",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_465471a7",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring integration_connector, computation_optimizer, data_processing_transformer with involving connector, general specific connector capability, general specific optimizer capability - Instance task_465471a7",
      "test_input": {
        "input_data": {
          "data": [
            0.9676928726887397,
            0.825672462776229,
            0.27239033504237964,
            0.26698505499007863,
            0.3894033124541053
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "integration_connector",
        "computation_optimizer",
        "data_processing_transformer"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T11:48:50.887008",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_e390bad2",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_e390bad2",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T11:48:52.007938",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_9327f1f2",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_9327f1f2",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.8740973414845958
            },
            {
              "id": 1,
              "value": 0.3660116298656685
            },
            {
              "id": 2,
              "value": 0.4568620621726406
            },
            {
              "id": 3,
              "value": 0.8397847722494246
            },
            {
              "id": 4,
              "value": 0.5875165518727472
            },
            {
              "id": 5,
              "value": 0.2913931864884992
            },
            {
              "id": 6,
              "value": 0.7623639349812807
            },
            {
              "id": 7,
              "value": 0.530940826267105
            },
            {
              "id": 8,
              "value": 0.7623272802142042
            },
            {
              "id": 9,
              "value": 0.7603467710287279
            }
          ]
        },
        "output_format": "csv",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T11:48:52.005875",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_7655e90b",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_7655e90b",
      "test_input": {
        "input_data": {
          "data": [
            0.7369419187528748,
            0.5321181273343515,
            0.5436968609122147,
            0.4157275409892527,
            0.03793342843694758
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "computation_calculator",
        "data_processing_validator",
        "computation_analyzer"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T11:48:52.774988",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_8f7b0a89",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_8f7b0a89",
      "test_input": {
        "input_data": {
          "data": [
            0.9315658724242366,
            0.12003502521362497,
            0.6178323506769393,
            0.48308945058298725,
            0.13693651015512387
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "computation_calculator",
        "data_processing_validator",
        "computation_analyzer",
        "network_poster"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T11:48:52.774343",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_e81d600f",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_e81d600f",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.5519699693531064
            },
            {
              "id": 1,
              "value": 0.8026705067814415
            },
            {
              "id": 2,
              "value": 0.41785128776063607
            },
            {
              "id": 3,
              "value": 0.21381266889741124
            },
            {
              "id": 4,
              "value": 0.7844734394487115
            },
            {
              "id": 5,
              "value": 0.32949269944003134
            },
            {
              "id": 6,
              "value": 0.4830839893433083
            },
            {
              "id": 7,
              "value": 0.7474750938996814
            },
            {
              "id": 8,
              "value": 0.2488694243283871
            },
            {
              "id": 9,
              "value": 0.6034997033014865
            }
          ]
        },
        "output_format": "json",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T11:48:52.005960",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_cc64679d",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_cc64679d",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.8289040369524039
            },
            {
              "id": 1,
              "value": 0.4473448126298917
            },
            {
              "id": 2,
              "value": 0.4314818822329084
            },
            {
              "id": 3,
              "value": 0.8291576313604478
            },
            {
              "id": 4,
              "value": 0.17789984631067657
            },
            {
              "id": 5,
              "value": 0.8290481963118492
            },
            {
              "id": 6,
              "value": 0.38952022664804486
            },
            {
              "id": 7,
              "value": 0.4662365311044685
            },
            {
              "id": 8,
              "value": 0.2679538901715868
            },
            {
              "id": 9,
              "value": 0.9353806926967927
            }
          ]
        },
        "output_format": "xml",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T11:48:52.000045",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_c5c8e59a",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with general specific converter capability, general specific scheduler capability, involving scheduler - Instance task_c5c8e59a",
      "test_input": {
        "data": {
          "values": [
            79,
            4,
            99,
            28,
            19
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "integration_scheduler",
        "file_operations_converter"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T11:48:50.888350",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_303501cd",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_303501cd",
      "test_input": {
        "input_data": {
          "data": [
            0.37695889550887285,
            0.8445193284577626,
            0.3614042341122279,
            0.7793705293977672,
            0.5822330265808704
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "computation_calculator",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T11:48:52.771177",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_676748b0",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_676748b0",
      "test_input": {
        "input_data": {
          "data": [
            0.4806897534916066,
            0.06833145722495193,
            0.22142464218092162,
            0.763381481408869,
            0.6632155006906832
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "computation_calculator",
        "data_processing_validator",
        "computation_analyzer",
        "network_poster"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T11:48:52.768040",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_a3cc5b1f",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring integration_connector, computation_optimizer, data_processing_transformer with involving connector, general specific connector capability, general specific optimizer capability - Instance task_a3cc5b1f",
      "test_input": {
        "input_data": {
          "data": [
            0.25787912441579663,
            0.6848162379484501,
            0.3481489592242364,
            0.21632628607735682,
            0.764085841225454
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "integration_connector",
        "computation_optimizer",
        "data_processing_transformer"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T11:48:50.887743",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_e934050c",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with general specific converter capability, general specific scheduler capability, involving scheduler - Instance task_e934050c",
      "test_input": {
        "data": {
          "values": [
            13,
            53,
            83,
            20,
            6
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "integration_scheduler",
        "file_operations_converter"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T11:48:50.888400",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_000ee486",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring integration_connector, computation_optimizer, data_processing_transformer with involving connector, general specific connector capability, general specific optimizer capability - Instance task_000ee486",
      "test_input": {
        "input_data": {
          "data": [
            0.9290423017265516,
            0.2668412854868908,
            0.37896814696192305,
            0.7320700130601219,
            0.38288749516637566
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "integration_connector",
        "computation_optimizer",
        "data_processing_transformer"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T11:48:50.887753",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_9e3ef0ca",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with general specific converter capability, general specific scheduler capability, involving scheduler - Instance task_9e3ef0ca",
      "test_input": {
        "data": {
          "values": [
            82,
            95,
            69,
            60,
            62
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "integration_scheduler",
        "file_operations_converter"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T11:48:50.888302",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_4994821e",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring integration_connector, computation_optimizer, data_processing_transformer with involving connector, general specific connector capability, general specific optimizer capability - Instance task_4994821e",
      "test_input": {
        "input_data": {
          "data": [
            0.6525403678184456,
            0.867371672736944,
            0.7186860810390342,
            0.9077950260131714,
            0.8755313854534554
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "integration_connector",
        "computation_optimizer",
        "data_processing_transformer"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T11:48:50.887903",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_e5c2f099",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_e5c2f099",
      "test_input": {
        "input_data": {
          "data": [
            0.43667532894513317,
            0.32550628336353493,
            0.7979361933094122,
            0.042660461969216246,
            0.18104557651004693
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "computation_calculator",
        "data_processing_validator",
        "computation_analyzer"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T11:48:52.765912",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_8d829bb8",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_8d829bb8",
      "test_input": {
        "input_data": {
          "data": [
            0.37687439880465834,
            0.5859357883769941,
            0.20995470843561637,
            0.9147132816227528,
            0.7871716679358484
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "computation_calculator",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T11:48:52.775088",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_ce939279",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring computation_optimizer, utility_helper with general specific helper capability, involving optimizer, general specific optimizer capability - Instance task_ce939279",
      "test_input": {
        "input_data": {
          "data": [
            0.07284928579582861,
            0.8194636875430489,
            0.5530327213290608,
            0.5053940440135225,
            0.35922497162383904
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "computation_optimizer",
        "utility_helper"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T11:48:50.886909",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_ff6bc70a",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring integration_connector, computation_optimizer, data_processing_transformer with involving connector, general specific connector capability, general specific optimizer capability - Instance task_ff6bc70a",
      "test_input": {
        "input_data": {
          "data": [
            0.03594055073695923,
            0.45337462069409795,
            0.9077417480208075,
            0.006825134966966573,
            0.053483285860337904
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "integration_connector",
        "computation_optimizer",
        "data_processing_transformer"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T11:48:50.887540",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_de901a5e",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with general specific converter capability, general specific scheduler capability, involving scheduler - Instance task_de901a5e",
      "test_input": {
        "data": {
          "values": [
            53,
            43,
            11,
            1,
            81
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "integration_scheduler",
        "file_operations_converter"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T11:48:50.888423",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_ffb4ee93",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_ffb4ee93",
      "test_input": {
        "input_data": {
          "data": [
            0.0024121907203361603,
            0.7964351444517029,
            0.9515935218707126,
            0.03096022686480948,
            0.21106457678025103
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T11:48:52.766892",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_6656bcff",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_6656bcff",
      "test_input": {
        "input_data": {
          "data": [
            0.22302042077997375,
            0.13721695507430753,
            0.7075641692640503,
            0.9865852523617034,
            0.23158793419796764
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "computation_calculator",
        "data_processing_validator",
        "computation_analyzer",
        "network_poster"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T11:48:52.769268",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_8dfaaed9",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with general specific helper capability, general specific queue capability, involving helper - Instance task_8dfaaed9",
      "test_input": {
        "data": {
          "values": [
            24,
            20,
            99,
            64,
            63
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "utility_helper",
        "integration_queue"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T11:48:50.888562",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_545eb0a0",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring integration_connector, computation_optimizer, data_processing_transformer with involving connector, general specific connector capability, general specific optimizer capability - Instance task_545eb0a0",
      "test_input": {
        "input_data": {
          "data": [
            0.125300489497692,
            0.8625200363077439,
            0.5028534763519875,
            0.8027558090212482,
            0.9412761120821183
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "integration_connector",
        "computation_optimizer",
        "data_processing_transformer"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T11:48:50.887043",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_e4434ff4",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_e4434ff4",
      "test_input": {
        "input_data": {
          "data": [
            0.2504279118674787,
            0.34557805725061475,
            0.2184314486738611,
            0.2293653804123006,
            0.5777711424395816
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T11:48:52.765186",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_c986333d",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring integration_connector, computation_optimizer, data_processing_transformer with involving connector, general specific connector capability, general specific optimizer capability - Instance task_c986333d",
      "test_input": {
        "input_data": {
          "data": [
            0.6447822332561282,
            0.6538255440051229,
            0.11106203881485766,
            0.3840375679514074,
            0.5221775324170933
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "integration_connector",
        "computation_optimizer",
        "data_processing_transformer"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T11:48:50.887578",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_2a70353e",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_2a70353e",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T11:48:52.007638",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_8cf4e061",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_8cf4e061",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.8126998085011504
            },
            {
              "id": 1,
              "value": 0.5704579929650017
            },
            {
              "id": 2,
              "value": 0.9537354365798747
            },
            {
              "id": 3,
              "value": 0.1575636025578241
            },
            {
              "id": 4,
              "value": 0.5262425951479832
            },
            {
              "id": 5,
              "value": 0.5191923865353243
            },
            {
              "id": 6,
              "value": 0.3634535713348339
            },
            {
              "id": 7,
              "value": 0.020989133767727375
            },
            {
              "id": 8,
              "value": 0.5085906793108429
            },
            {
              "id": 9,
              "value": 0.6279874646020375
            }
          ]
        },
        "output_format": "xml",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T11:48:52.005381",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_00adc45d",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_00adc45d",
      "test_input": {
        "input_data": {
          "data": [
            0.2670064566710382,
            0.5937171885211477,
            0.3469198679192056,
            0.53094046443252,
            0.4483560148055661
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "computation_calculator",
        "data_processing_validator",
        "computation_analyzer",
        "network_poster"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T11:48:52.771861",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_d5a2b249",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_d5a2b249",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.47756285939114473
            },
            {
              "id": 1,
              "value": 0.5898596593425098
            },
            {
              "id": 2,
              "value": 0.8074354897078609
            },
            {
              "id": 3,
              "value": 0.6946842507654822
            },
            {
              "id": 4,
              "value": 0.5666442113693998
            },
            {
              "id": 5,
              "value": 0.17170901306806574
            },
            {
              "id": 6,
              "value": 0.0805027678803576
            },
            {
              "id": 7,
              "value": 0.7050280978510537
            },
            {
              "id": 8,
              "value": 0.18278881070058917
            },
            {
              "id": 9,
              "value": 0.8829692293434037
            }
          ]
        },
        "output_format": "xml",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "computation_analyzer",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T11:48:52.000159",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_8a37eece",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_8a37eece",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T11:48:52.008278",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_de9c6f13",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring file_operations_writer, integration_scheduler, network_router with involving writer, general specific scheduler capability, general specific writer capability - Instance task_de9c6f13",
      "test_input": {
        "input_data": {
          "data": [
            0.12009864535760517,
            0.6799169160876966,
            0.7119875665164026,
            0.5969073134949252,
            0.1636247264702737
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "file_operations_writer",
        "integration_scheduler",
        "network_router"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T11:48:50.887570",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_327bb493",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with general specific helper capability, general specific queue capability, involving helper - Instance task_327bb493",
      "test_input": {
        "data": {
          "values": [
            60,
            41,
            96,
            14,
            31
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "utility_helper",
        "integration_queue"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T11:48:50.888592",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_c7d990ea",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring integration_connector, computation_optimizer, data_processing_transformer with involving connector, general specific connector capability, general specific optimizer capability - Instance task_c7d990ea",
      "test_input": {
        "input_data": {
          "data": [
            0.08418432458812575,
            0.4102653645128752,
            0.35038995468655265,
            0.7117444706472489,
            0.4328835948410453
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "integration_connector",
        "computation_optimizer",
        "data_processing_transformer"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T11:48:50.886929",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_7a567502",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_7a567502",
      "test_input": {
        "input_data": {
          "data": [
            0.1601085816443606,
            0.5395701689982351,
            0.01225534531337813,
            0.016471742180632742,
            0.4969755145891539
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "computation_calculator",
        "data_processing_validator",
        "computation_analyzer"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T11:48:52.773911",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_f53c5ad6",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_f53c5ad6",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.231205812880933
            },
            {
              "id": 1,
              "value": 0.6204108112184714
            },
            {
              "id": 2,
              "value": 0.13334639787762192
            },
            {
              "id": 3,
              "value": 0.29532600189284786
            },
            {
              "id": 4,
              "value": 0.8149904089613984
            },
            {
              "id": 5,
              "value": 0.2303390049939681
            },
            {
              "id": 6,
              "value": 0.25461619658986223
            },
            {
              "id": 7,
              "value": 0.5894317361385456
            },
            {
              "id": 8,
              "value": 0.06116759706722219
            },
            {
              "id": 9,
              "value": 0.5971627049865648
            }
          ]
        },
        "output_format": "xml",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T11:48:52.005806",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_3c39e038",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_3c39e038",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.6487093820187109
            },
            {
              "id": 1,
              "value": 0.3105867389636493
            },
            {
              "id": 2,
              "value": 0.07064509012639597
            },
            {
              "id": 3,
              "value": 0.12419041972209788
            },
            {
              "id": 4,
              "value": 0.3762088533353457
            },
            {
              "id": 5,
              "value": 0.5226184547641366
            },
            {
              "id": 6,
              "value": 0.3391819004588089
            },
            {
              "id": 7,
              "value": 0.9922091152483954
            },
            {
              "id": 8,
              "value": 0.6922517021758708
            },
            {
              "id": 9,
              "value": 0.883664100088394
            }
          ]
        },
        "output_format": "xml",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "computation_analyzer",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T11:48:51.997531",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_c6a57282",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_c6a57282",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.06331878936174196
            },
            {
              "id": 1,
              "value": 0.3155622473947264
            },
            {
              "id": 2,
              "value": 0.02923381735123065
            },
            {
              "id": 3,
              "value": 0.03776703891980748
            },
            {
              "id": 4,
              "value": 0.8506442837022686
            },
            {
              "id": 5,
              "value": 0.3547290678466921
            },
            {
              "id": 6,
              "value": 0.24061183731685287
            },
            {
              "id": 7,
              "value": 0.5345658112126594
            },
            {
              "id": 8,
              "value": 0.6183647040989619
            },
            {
              "id": 9,
              "value": 0.4010079116457249
            }
          ]
        },
        "output_format": "json",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "computation_analyzer",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T11:48:52.002847",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_04d4d6e3",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_04d4d6e3",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T11:48:52.007539",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_51237dc9",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring file_operations_writer, integration_scheduler, network_router with involving writer, general specific scheduler capability, general specific writer capability - Instance task_51237dc9",
      "test_input": {
        "input_data": {
          "data": [
            0.7294087193647125,
            0.8853570798374882,
            0.7045601538849856,
            0.6972438472616528,
            0.15575900734161163
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "file_operations_writer",
        "integration_scheduler",
        "network_router"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T11:48:50.886524",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_dd6d64d0",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_dd6d64d0",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T11:48:52.007953",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_2bc98dfd",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring computation_optimizer, utility_helper with general specific helper capability, involving optimizer, general specific optimizer capability - Instance task_2bc98dfd",
      "test_input": {
        "input_data": {
          "data": [
            0.348085458191445,
            0.06349762302881035,
            0.4695384746319696,
            0.9254754292322613,
            0.151886599147933
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "computation_optimizer",
        "utility_helper"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T11:48:50.887530",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_c5a19c73",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_c5a19c73",
      "test_input": {
        "input_data": {
          "data": [
            0.6042944938754541,
            0.04088397434787572,
            0.37070318516632295,
            0.9693562136657844,
            0.1307078947867958
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T11:48:52.775570",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_c03587be",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_c03587be",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.6804821820318072
            },
            {
              "id": 1,
              "value": 0.6656887705210974
            },
            {
              "id": 2,
              "value": 0.6552438210326044
            },
            {
              "id": 3,
              "value": 0.19996156383221853
            },
            {
              "id": 4,
              "value": 0.7269045582653777
            },
            {
              "id": 5,
              "value": 0.1467616282544072
            },
            {
              "id": 6,
              "value": 0.7614342490888091
            },
            {
              "id": 7,
              "value": 0.8239050759332517
            },
            {
              "id": 8,
              "value": 0.20258233114592206
            },
            {
              "id": 9,
              "value": 0.584729830430899
            }
          ]
        },
        "output_format": "json",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "computation_analyzer",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T11:48:52.004239",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_bd9f3cda",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring computation_optimizer, utility_helper with general specific helper capability, involving optimizer, general specific optimizer capability - Instance task_bd9f3cda",
      "test_input": {
        "input_data": {
          "data": [
            0.9755666860705882,
            0.4822856691639369,
            0.04214538076851715,
            0.12216420454846955,
            0.2461703901996195
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "computation_optimizer",
        "utility_helper"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T11:48:50.888083",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_51f92662",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_51f92662",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.8976038060661282
            },
            {
              "id": 1,
              "value": 0.46886616192696307
            },
            {
              "id": 2,
              "value": 0.5344139489268062
            },
            {
              "id": 3,
              "value": 0.007527581626628921
            },
            {
              "id": 4,
              "value": 0.9216714895940398
            },
            {
              "id": 5,
              "value": 0.3322699979925382
            },
            {
              "id": 6,
              "value": 0.8961330418731154
            },
            {
              "id": 7,
              "value": 0.27164925667906514
            },
            {
              "id": 8,
              "value": 0.9022113754722012
            },
            {
              "id": 9,
              "value": 0.265823655566949
            }
          ]
        },
        "output_format": "csv",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "computation_analyzer",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T11:48:52.001986",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_925bb82c",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring integration_connector, computation_optimizer, data_processing_transformer with involving connector, general specific connector capability, general specific optimizer capability - Instance task_925bb82c",
      "test_input": {
        "input_data": {
          "data": [
            0.9924816064951113,
            0.3289296464990138,
            0.3894117684337579,
            0.12835461226740752,
            0.5422834464788009
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "integration_connector",
        "computation_optimizer",
        "data_processing_transformer"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T11:48:50.887804",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_0f07a5ed",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with general specific helper capability, general specific queue capability, involving helper - Instance task_0f07a5ed",
      "test_input": {
        "data": {
          "values": [
            54,
            90,
            100,
            64,
            98
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "utility_helper",
        "integration_queue"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T11:48:50.888961",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_b99c4309",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_b99c4309",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.07790344681174866
            },
            {
              "id": 1,
              "value": 0.03960183658202632
            },
            {
              "id": 2,
              "value": 0.6561376857998608
            },
            {
              "id": 3,
              "value": 0.5011783450850994
            },
            {
              "id": 4,
              "value": 0.40472349870943514
            },
            {
              "id": 5,
              "value": 0.8399308544635531
            },
            {
              "id": 6,
              "value": 0.16487034202377715
            },
            {
              "id": 7,
              "value": 0.7646615563471243
            },
            {
              "id": 8,
              "value": 0.45926500747378496
            },
            {
              "id": 9,
              "value": 0.46944909893292763
            }
          ]
        },
        "output_format": "csv",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T11:48:52.007392",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_eda53137",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_eda53137",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T11:48:52.007902",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_e968709d",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_e968709d",
      "test_input": {
        "input_data": {
          "data": [
            0.9321219793149061,
            0.04683380805325699,
            0.07250471857878005,
            0.572224518629523,
            0.5265659408388086
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "computation_calculator",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T11:48:52.775287",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_cf87cb72",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring file_operations_writer, integration_scheduler, network_router with involving writer, general specific scheduler capability, general specific writer capability - Instance task_cf87cb72",
      "test_input": {
        "input_data": {
          "data": [
            0.9303650820555406,
            0.9469301183567033,
            0.3459354054377648,
            0.8114314476896197,
            0.28555998101271174
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "file_operations_writer",
        "integration_scheduler",
        "network_router"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T11:48:50.886503",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_40a2894a",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with general specific helper capability, general specific queue capability, involving helper - Instance task_40a2894a",
      "test_input": {
        "data": {
          "values": [
            28,
            63,
            67,
            10,
            22
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "utility_helper",
        "integration_queue"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T11:48:50.889168",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_e84caef8",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_e84caef8",
      "test_input": {
        "input_data": {
          "data": [
            0.4092303674752129,
            0.2213791385477326,
            0.4519234285709913,
            0.9344526924323627,
            0.5671840353285929
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T11:48:52.775371",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_56671fc7",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with general specific scheduler capability, involving router, general specific router capability - Instance task_56671fc7",
      "test_input": {
        "data": {
          "values": [
            3,
            48,
            41,
            26,
            48
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "network_router",
        "integration_scheduler"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T11:48:50.889273",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_5f631c51",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with general specific converter capability, general specific scheduler capability, involving scheduler - Instance task_5f631c51",
      "test_input": {
        "data": {
          "values": [
            85,
            17,
            59,
            47,
            94
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "integration_scheduler",
        "file_operations_converter"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T11:48:50.888873",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_646d7fb4",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_646d7fb4",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.3292043986015737
            },
            {
              "id": 1,
              "value": 0.7390168404269777
            },
            {
              "id": 2,
              "value": 0.9730654062330757
            },
            {
              "id": 3,
              "value": 0.2234167583943545
            },
            {
              "id": 4,
              "value": 0.0706891224877294
            },
            {
              "id": 5,
              "value": 0.7044751035360847
            },
            {
              "id": 6,
              "value": 0.8283623188030631
            },
            {
              "id": 7,
              "value": 0.046491245919813684
            },
            {
              "id": 8,
              "value": 0.59853222817007
            },
            {
              "id": 9,
              "value": 0.18960056277145976
            }
          ]
        },
        "output_format": "json",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "computation_analyzer",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T11:48:52.003857",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_f54bf6dd",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring file_operations_writer, integration_scheduler, network_router with involving writer, general specific scheduler capability, general specific writer capability - Instance task_f54bf6dd",
      "test_input": {
        "input_data": {
          "data": [
            0.6705294508782519,
            0.522179711655228,
            0.9938986826766766,
            0.6475062453912426,
            0.7587709716643133
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "file_operations_writer",
        "integration_scheduler",
        "network_router"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T11:48:50.887723",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_c487adb3",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with general specific scheduler capability, involving router, general specific router capability - Instance task_c487adb3",
      "test_input": {
        "data": {
          "values": [
            65,
            4,
            72,
            10,
            41
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "network_router",
        "integration_scheduler"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T11:48:50.888491",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_171a2786",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_171a2786",
      "test_input": {
        "input_data": {
          "data": [
            0.045346749921906016,
            0.5315601722547981,
            0.7638878710675939,
            0.6265561252209034,
            0.2196277263767512
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T11:48:52.769490",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_78183b2f",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_78183b2f",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T11:48:52.008296",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_24112ef6",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_24112ef6",
      "test_input": {
        "input_data": {
          "data": [
            0.2578372514395496,
            0.08377198714509482,
            0.37138495627017887,
            0.3442487444993583,
            0.78167356286712
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "computation_calculator",
        "data_processing_validator",
        "computation_analyzer",
        "network_poster"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T11:48:52.774870",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_693ac94e",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_693ac94e",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T11:48:52.007704",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_f3e2d7ad",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with general specific scheduler capability, involving router, general specific router capability - Instance task_f3e2d7ad",
      "test_input": {
        "data": {
          "values": [
            40,
            48,
            29,
            71,
            92
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "network_router",
        "integration_scheduler"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T11:48:50.888613",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_5d64078c",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with general specific helper capability, general specific queue capability, involving helper - Instance task_5d64078c",
      "test_input": {
        "data": {
          "values": [
            94,
            20,
            35,
            35,
            89
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "utility_helper",
        "integration_queue"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T11:48:50.888374",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_417db26c",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring computation_optimizer, utility_helper with general specific helper capability, involving optimizer, general specific optimizer capability - Instance task_417db26c",
      "test_input": {
        "input_data": {
          "data": [
            0.1777319889275798,
            0.6835575761497013,
            0.09666326428736838,
            0.972031411622273,
            0.9603414238086334
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "computation_optimizer",
        "utility_helper"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T11:48:50.887015",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_c87e97ae",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_c87e97ae",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.866508495431631
            },
            {
              "id": 1,
              "value": 0.33249555063718417
            },
            {
              "id": 2,
              "value": 0.42226282049177255
            },
            {
              "id": 3,
              "value": 0.2968667695771614
            },
            {
              "id": 4,
              "value": 0.9248027575581991
            },
            {
              "id": 5,
              "value": 0.7749021247750404
            },
            {
              "id": 6,
              "value": 0.3773225167329175
            },
            {
              "id": 7,
              "value": 0.3550488587823195
            },
            {
              "id": 8,
              "value": 0.5291132888576576
            },
            {
              "id": 9,
              "value": 0.48824701406367077
            }
          ]
        },
        "output_format": "csv",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "computation_analyzer",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T11:48:52.004339",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_6f27043a",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_6f27043a",
      "test_input": {
        "input_data": {
          "data": [
            0.6615438065301465,
            0.19127482378859806,
            0.40661100438852205,
            0.47286004216948085,
            0.08992650473275288
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "computation_calculator",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T11:48:52.766283",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_b8c3cca1",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with general specific converter capability, general specific scheduler capability, involving scheduler - Instance task_b8c3cca1",
      "test_input": {
        "data": {
          "values": [
            24,
            34,
            83,
            9,
            22
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "integration_scheduler",
        "file_operations_converter"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T11:48:50.889222",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_6d2555d2",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_6d2555d2",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T11:48:52.007668",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_a20e3448",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Allows specification of both input and output formats, Supports conversion between different data formats (e.g., JSON to XML), involving transform - Instance task_a20e3448",
      "test_input": {
        "input_data": {
          "data": [
            0.27861304057413483,
            0.4097326971768195,
            0.8617703893253149,
            0.1859539675467181,
            0.641145689279347
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "data_processing_transformer",
        "file_operations_reader",
        "computation_calculator",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T11:48:52.765082",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_011667b9",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_011667b9",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.295197325327582
            },
            {
              "id": 1,
              "value": 0.6990356055637679
            },
            {
              "id": 2,
              "value": 0.5763855337167388
            },
            {
              "id": 3,
              "value": 0.7933944222052207
            },
            {
              "id": 4,
              "value": 0.9761972231448037
            },
            {
              "id": 5,
              "value": 0.8333183637067305
            },
            {
              "id": 6,
              "value": 0.7038247711122316
            },
            {
              "id": 7,
              "value": 0.2893738361315691
            },
            {
              "id": 8,
              "value": 0.9057913264259516
            },
            {
              "id": 9,
              "value": 0.1548235047031692
            }
          ]
        },
        "output_format": "xml",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T11:48:52.006507",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_6620e2b0",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with general specific helper capability, general specific queue capability, involving helper - Instance task_6620e2b0",
      "test_input": {
        "data": {
          "values": [
            88,
            99,
            17,
            72,
            17
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "utility_helper",
        "integration_queue"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T11:48:50.889304",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_f8d675ba",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring integration_connector, computation_optimizer, data_processing_transformer with involving connector, general specific connector capability, general specific optimizer capability - Instance task_f8d675ba",
      "test_input": {
        "input_data": {
          "data": [
            0.6679489126619387,
            0.8342571668129366,
            0.8186840030792846,
            0.7819681985454554,
            0.530880187377424
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "integration_connector",
        "computation_optimizer",
        "data_processing_transformer"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T11:48:50.887053",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_e6a6f061",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_e6a6f061",
      "test_input": {
        "input_data": {
          "data": [
            0.26368457866930417,
            0.755206383614477,
            0.1662134777408497,
            0.23780390259963358,
            0.4270423794527396
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "computation_calculator",
        "data_processing_validator",
        "computation_analyzer",
        "network_poster"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T11:48:52.768446",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_b0c3ea11",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with general specific scheduler capability, involving router, general specific router capability - Instance task_b0c3ea11",
      "test_input": {
        "data": {
          "values": [
            34,
            44,
            90,
            69,
            81
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "network_router",
        "integration_scheduler"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T11:48:50.889284",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_565ae912",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring computation_optimizer, utility_helper with general specific helper capability, involving optimizer, general specific optimizer capability - Instance task_565ae912",
      "test_input": {
        "input_data": {
          "data": [
            0.6543007061939787,
            0.7715554254710204,
            0.48082273999704894,
            0.006790967382090618,
            0.39902882882745416
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "computation_optimizer",
        "utility_helper"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T11:48:50.886965",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_80284877",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with general specific scheduler capability, involving router, general specific router capability - Instance task_80284877",
      "test_input": {
        "data": {
          "values": [
            19,
            24,
            17,
            9,
            49
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "network_router",
        "integration_scheduler"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T11:48:50.889324",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_7838c12d",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_7838c12d",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T11:48:52.007877",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_e5d362f3",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_e5d362f3",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.5012274998966982
            },
            {
              "id": 1,
              "value": 0.11722601125575982
            },
            {
              "id": 2,
              "value": 0.15730020721523297
            },
            {
              "id": 3,
              "value": 0.777938635717703
            },
            {
              "id": 4,
              "value": 0.9198620014225126
            },
            {
              "id": 5,
              "value": 0.6386903098833263
            },
            {
              "id": 6,
              "value": 0.24123025579285284
            },
            {
              "id": 7,
              "value": 0.1773295126765252
            },
            {
              "id": 8,
              "value": 0.3632789095261302
            },
            {
              "id": 9,
              "value": 0.3806340485328108
            }
          ]
        },
        "output_format": "csv",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T11:48:52.002709",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_97419a36",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with general specific helper capability, general specific queue capability, involving helper - Instance task_97419a36",
      "test_input": {
        "data": {
          "values": [
            4,
            49,
            3,
            32,
            58
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "utility_helper",
        "integration_queue"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T11:48:50.888468",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_d1ccf2b1",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with general specific converter capability, general specific scheduler capability, involving scheduler - Instance task_d1ccf2b1",
      "test_input": {
        "data": {
          "values": [
            78,
            2,
            83,
            9,
            5
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "integration_scheduler",
        "file_operations_converter"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T11:48:50.888339",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_17fafe63",
      "task_type": "multi_stage_pipeline",
      "complexity": "hard",
      "description": "Complex multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_17fafe63",
      "test_input": {
        "input_data": {
          "data": [
            0.8306623440815872,
            0.5640341468130268,
            0.747486502735026,
            0.15218691699925468,
            0.9350614906513568
          ]
        },
        "pipeline_config": {
          "stages": 3,
          "parallel": false
        }
      },
      "expected_output": {
        "pipeline_result": {
          "stages_completed": 3,
          "final_output": {}
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_transformer",
        "computation_calculator",
        "data_processing_validator",
        "computation_analyzer"
      ],
      "metadata": {
        "template": "multi_stage_pipeline",
        "generated_at": "2025-07-09T11:48:52.774021",
        "timeout": 600,
        "semantic_generation": true
      }
    },
    {
      "id": "task_e8663e14",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_e8663e14",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T11:48:52.007697",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_e7c49a6f",
      "task_type": "api_integration",
      "complexity": "medium",
      "description": "API data fetching and processing with Focus on data retrieval, Handles source specification, involving fetch data - Instance task_e7c49a6f",
      "test_input": {
        "api_endpoints": [
          "https://api.example.com/data",
          "https://api.example.com/submit"
        ],
        "auth_credentials": {
          "api_key": "sample_key_123",
          "secret": "sample_secret"
        },
        "validation_schema": {
          "type": "object",
          "required": [
            "id",
            "value"
          ]
        }
      },
      "expected_output": {
        "api_response": {
          "status": 200,
          "data": {}
        },
        "validated_data": {
          "valid": true,
          "errors": []
        }
      },
      "required_tools": [
        "network_fetcher",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "api_integration",
        "generated_at": "2025-07-09T11:48:52.007762",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_0af62dd3",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_0af62dd3",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.2911093558615603
            },
            {
              "id": 1,
              "value": 0.05485855359161795
            },
            {
              "id": 2,
              "value": 0.8769426700929267
            },
            {
              "id": 3,
              "value": 0.42520547836880174
            },
            {
              "id": 4,
              "value": 0.6386698549681865
            },
            {
              "id": 5,
              "value": 0.6015331399061021
            },
            {
              "id": 6,
              "value": 0.543687957922751
            },
            {
              "id": 7,
              "value": 0.7601050928482312
            },
            {
              "id": 8,
              "value": 0.6077755557281376
            },
            {
              "id": 9,
              "value": 0.9993151362018019
            }
          ]
        },
        "output_format": "json",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T11:48:52.004410",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_dd8a9b6b",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring computation_optimizer, utility_helper with general specific helper capability, involving optimizer, general specific optimizer capability - Instance task_dd8a9b6b",
      "test_input": {
        "input_data": {
          "data": [
            0.4647966987394031,
            0.8289048436133327,
            0.8806370317879085,
            0.16778522350559488,
            0.25979292321841896
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "computation_optimizer",
        "utility_helper"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T11:48:50.887886",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_2fcf7cbe",
      "task_type": "data_pipeline",
      "complexity": "medium",
      "description": "Multi-stage data processing pipeline with Supports various file formats for reading, such as CSV, JSON, and XML., involving read data, Includes error handling for file read operations, providing detailed feedback on read failures. - Instance task_2fcf7cbe",
      "test_input": {
        "raw_data": {
          "records": [
            {
              "id": 0,
              "value": 0.47622437295646214
            },
            {
              "id": 1,
              "value": 0.2998873252532488
            },
            {
              "id": 2,
              "value": 0.7889381716030386
            },
            {
              "id": 3,
              "value": 0.4128003659210018
            },
            {
              "id": 4,
              "value": 0.9757914479927334
            },
            {
              "id": 5,
              "value": 0.31684727225224874
            },
            {
              "id": 6,
              "value": 0.27391864260945165
            },
            {
              "id": 7,
              "value": 0.18091097279381818
            },
            {
              "id": 8,
              "value": 0.46919835557078715
            },
            {
              "id": 9,
              "value": 0.7825803314187422
            }
          ]
        },
        "output_format": "csv",
        "transformation_rules": {
          "normalize": true,
          "format": "json"
        }
      },
      "expected_output": {
        "parsed_data": {
          "structured": true,
          "record_count": 10
        },
        "transformed_data": {
          "format": "normalized",
          "records": []
        },
        "output_file": {
          "path": "/output/result.json",
          "size": 1024
        }
      },
      "required_tools": [
        "file_operations_reader",
        "data_processing_validator"
      ],
      "metadata": {
        "template": "data_pipeline",
        "generated_at": "2025-07-09T11:48:52.003347",
        "timeout": 300,
        "semantic_generation": true
      }
    },
    {
      "id": "task_3a43b069",
      "task_type": "simple_task",
      "complexity": "easy",
      "description": "Simple two-step processing task with general specific converter capability, general specific scheduler capability, involving scheduler - Instance task_3a43b069",
      "test_input": {
        "data": {
          "values": [
            3,
            58,
            52,
            14,
            44
          ]
        },
        "config": {
          "mode": "standard",
          "options": {}
        }
      },
      "expected_output": {
        "final_output": {
          "success": true,
          "data": {}
        }
      },
      "required_tools": [
        "integration_scheduler",
        "file_operations_converter"
      ],
      "metadata": {
        "template": "simple_task",
        "generated_at": "2025-07-09T11:48:50.888895",
        "timeout": 60,
        "semantic_generation": true
      }
    },
    {
      "id": "task_747a375b",
      "task_type": "basic_task",
      "complexity": "easy",
      "description": "Basic processing task requiring file_operations_writer, integration_scheduler, network_router with involving writer, general specific scheduler capability, general specific writer capability - Instance task_747a375b",
      "test_input": {
        "input_data": {
          "data": [
            0.37653637055195077,
            0.04929835863790555,
            0.0010019610591615047,
            0.5814769575144719,
            0.5877488852373954
          ]
        }
      },
      "expected_output": {
        "processed_output": {
          "status": "complete",
          "data": {}
        }
      },
      "required_tools": [
        "file_operations_writer",
        "integration_scheduler",
        "network_router"
      ],
      "metadata": {
        "template": "basic_task",
        "generated_at": "2025-07-09T11:48:50.886817",
        "timeout": 60,
        "semantic_generation": true
      }
    }
  ],
  "metadata": {
    "generated_at": "2025-07-09T11:48:52.776716",
    "num_tasks": 500,
    "task_distribution": {
      "basic_task": 0.2,
      "simple_task": 0.2,
      "data_pipeline": 0.2,
      "api_integration": 0.2,
      "multi_stage_pipeline": 0.2
    },
    "generator_version": "2.0"
  }
}