# Debug To-Do List - WorkflowBench Scale-Up
最后更新: 2025-08-28 03:00

## 🔥 已解决的问题

### ✅ 5.3测试并发过高导致系统过载
**问题描述**：
- 5.3缺陷工作流测试使用过高并发导致电脑崩溃
- 内存和CPU资源耗尽，系统无响应
- 多个测试阶段（5.2, 5.4, 5.5）都存在类似风险

**解决方案**：
1. 创建保守并发执行器（conservative_parallel_runner.py）
2. 实现系统资源监控（内存70%、CPU 80%阈值）
3. 限制最大同时进程数为6个
4. 正确配置3个API keys分散负载

**验证方法**：
```bash
# 小规模测试
./test_conservative.sh small

# 5.3测试
./test_conservative.sh 5.3

# 监控资源
./test_conservative.sh monitor
```

## 📋 当前配置状态

### API Keys配置
- **IdealLab Qwen模型**: 3个可用keys
  - key0: 3ddb1451943548a2a1f69fa2ab5a8d1f (新URL)
  - key1: 3d906058842b6cf4cee8aaa019f7e77b (原URL)
  - key2: 88a9a9010f2864bfb53996279dc6c3b9 (原URL)

### 并发参数设置
| 模型类型 | Max Workers | 说明 |
|---------|------------|------|
| Azure开源 | 50 | DeepSeek, Llama等 |
| Qwen系列 | 1/key × 3 | 限流要求，3个key并行 |
| IdealLab闭源 | 1 | o3, gemini, kimi限流 |

### 资源限制
- 最大进程数: 6
- 内存阈值: 70%
- CPU阈值: 80%
- Key启动延迟: 5秒

## 🎯 待处理任务

### 1. 测试保守并发方案效果
- [ ] 运行5.3小规模测试验证稳定性
- [ ] 监控资源使用情况
- [ ] 记录执行时间对比

### 2. 完善其他测试阶段
- [ ] 5.2 规模效应测试适配
- [ ] 5.4 工具可靠性测试适配
- [ ] 5.5 提示敏感性测试适配

### 3. 文档更新
- [x] 更新CLAUDE.md配置说明
- [x] 创建debug_to_do.txt记录
- [ ] 更新README.md使用说明

## 📊 测试执行命令

### 保守模式测试
```bash
# 使用保守并发执行器
python3 conservative_parallel_runner.py --phase 5.3 --models "qwen2.5-7b-instruct"

# 或使用测试脚本
./test_conservative.sh 5.3
```

### 原始模式（谨慎使用）
```bash
# 降低workers数避免过载
./run_systematic_test_final.sh --workers 10 --phase 5.3
```

## 🔍 问题诊断工具

### 查看进程状态
```bash
ps aux | grep -E "(smart_batch|conservative)" | grep -v grep
```

### 监控内存使用
```bash
free -h
top -b -n 1 | head -20
```

### 查看网络连接
```bash
netstat -an | grep "8000" | wc -l  # IdealLab连接数
```

## 📝 注意事项

1. **避免直接运行ultra_parallel_runner.py**
   - 始终通过conservative_parallel_runner.py或run_systematic_test_final.sh执行
   
2. **监控系统资源**
   - 测试期间保持资源监控窗口开启
   - 出现异常立即终止进程

3. **数据备份**
   - 测试前备份master_database.json
   - 定期保存checkpoint

## 🚀 下一步计划

1. 验证保守并发方案在所有测试阶段的稳定性
2. 优化资源阈值参数
3. 实现自动恢复机制
4. 创建性能基准报告

---
状态: 🟢 Active | 保守并发方案已实现