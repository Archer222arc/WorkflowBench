===== 分片 qwen2.5-3b-instruct_very_easy_key0 =====
时间: 2025-08-27T13:41:59.358205
模型: qwen2.5-3b-instruct
实例: qwen-key0
命令: python -u smart_batch_runner.py --model qwen2.5-3b-instruct --deployment qwen-key0 --prompt-types optimal --difficulty very_easy --task-types all --num-instances 10 --max-workers 50 --tool-success-rate 0.8 --batch-commit --checkpoint-interval 20 --ai-classification --no-adaptive --qps 50
环境变量:
  STORAGE_FORMAT=json
  PYTHONFAULTHANDLER=1
  PYTHONUNBUFFERED=1
==================================================

[13:42:00.873] 
[13:42:00.886] A module that was compiled using NumPy 1.x cannot be run in
[13:42:00.897] NumPy 2.2.6 as it may crash. To support both 1.x and 2.x
[13:42:00.897] versions of NumPy, modules must be compiled with NumPy 2.0.
[13:42:00.898] Some module may need to rebuild instead e.g. with 'pybind11>=2.12'.
[13:42:00.898] 
[13:42:00.898] If you are a user of the module, the easiest solution will be to
[13:42:00.898] downgrade to 'numpy<2' or try to upgrade the affected module.
[13:42:00.898] We expect that some modules will need time to support NumPy 2.
[13:42:00.898] 
[13:42:00.898] Traceback (most recent call last):  File "/Users/ruicheng/Documents/GitHub/WorkflowBench/smart_batch_runner.py", line 21, in <module>
[13:42:00.898]     from batch_test_runner import BatchTestRunner, TestTask
[13:42:00.898]   File "/Users/ruicheng/Documents/GitHub/WorkflowBench/batch_test_runner.py", line 26, in <module>
[13:42:00.898]     from mdp_workflow_generator import MDPWorkflowGenerator
[13:42:00.898]   File "/Users/ruicheng/Documents/GitHub/WorkflowBench/mdp_workflow_generator.py", line 17, in <module>
[13:42:00.898]     import torch
[13:42:00.898]   File "/Users/ruicheng/miniconda3/lib/python3.10/site-packages/torch/__init__.py", line 1477, in <module>
[13:42:00.898]     from .functional import *  # noqa: F403
[13:42:00.898]   File "/Users/ruicheng/miniconda3/lib/python3.10/site-packages/torch/functional.py", line 9, in <module>
[13:42:00.898]     import torch.nn.functional as F
[13:42:00.898]   File "/Users/ruicheng/miniconda3/lib/python3.10/site-packages/torch/nn/__init__.py", line 1, in <module>
[13:42:00.898]     from .modules import *  # noqa: F403
[13:42:00.898]   File "/Users/ruicheng/miniconda3/lib/python3.10/site-packages/torch/nn/modules/__init__.py", line 35, in <module>
[13:42:00.898]     from .transformer import TransformerEncoder, TransformerDecoder, \
[13:42:00.898]   File "/Users/ruicheng/miniconda3/lib/python3.10/site-packages/torch/nn/modules/transformer.py", line 20, in <module>
[13:42:00.898]     device: torch.device = torch.device(torch._C._get_default_device()),  # torch.device('cpu'),
[13:42:00.898] /Users/ruicheng/miniconda3/lib/python3.10/site-packages/torch/nn/modules/transformer.py:20: UserWarning: Failed to initialize NumPy: _ARRAY_API not found (Triggered internally at /Users/runner/work/pytorch/pytorch/pytorch/torch/csrc/utils/tensor_numpy.cpp:84.)
[13:42:00.906]   device: torch.device = torch.device(torch._C._get_default_device()),  # torch.device('cpu'),
[13:42:05.487] 2025-08-27 13:42:05,430 - faiss.loader - INFO - Loading faiss.
[13:42:05.538] 2025-08-27 13:42:05,537 - faiss.loader - INFO - Successfully loaded faiss.
[13:42:08.776] [INFO] 使用JSON存储格式
[13:42:08.778] [INFO] 使用JSON存储格式
[13:42:12.030] [INFO] 使用JSON存储格式
[13:42:12.049] [INFO] 使用JSON存储格式
[13:42:12.063] 
[13:42:12.064] ============================================================
[13:42:12.064] 智能批测试: qwen2.5-3b-instruct (idealab)
[13:42:12.064] Prompt types: ['optimal']
[13:42:12.065] 难度: very_easy
[13:42:12.065] 目标: 每种配置 10 个实例
[13:42:12.065] ============================================================
[13:42:12.072] ○ simple_task         :   0/ 10 已完成 (需要补充 10 个)
[13:42:12.075] ○ basic_task          :   0/ 10 已完成 (需要补充 10 个)
[13:42:12.086] ○ data_pipeline       :   0/ 10 已完成 (需要补充 10 个)
[13:42:12.092] ○ api_integration     :   0/ 10 已完成 (需要补充 10 个)
[13:42:12.098] ○ multi_stage_pipeline:   0/ 10 已完成 (需要补充 10 个)
[13:42:12.099] 
[13:42:12.099] ⏳ 需要运行 50 个新测试
[13:42:12.099] 
[13:42:12.099] ▶ 准备 simple_task (10 个实例)...
[13:42:12.099] 
[13:42:12.099] ▶ 准备 basic_task (10 个实例)...
[13:42:12.099] 
[13:42:12.099] ▶ 准备 data_pipeline (10 个实例)...
[13:42:12.099] 
[13:42:12.099] ▶ 准备 api_integration (10 个实例)...
[13:42:12.099] 
[13:42:12.099] ▶ 准备 multi_stage_pipeline (10 个实例)...
[13:42:12.099] 
[13:42:12.099] ▶ 开始执行 50 个测试...
[13:42:12.101] 📊 自适应checkpoint_interval: 20
[13:42:12.101] 📦 批量提交模式：每20个测试保存一次
[13:42:12.101] ⚠️  检测到idealab API，调整并发: workers=2, qps=None
[13:42:12.101] 2025-08-27 13:42:12,100 - smart_result_collector - INFO - 自动保存线程已启动
[13:42:12.101] 2025-08-27 13:42:12,101 - smart_result_collector - INFO - SmartResultCollector初始化完成
[13:42:12.105] 2025-08-27 13:42:12,101 - smart_result_collector - INFO -   - 临时目录: temp_results
[13:42:12.105] 2025-08-27 13:42:12,101 - smart_result_collector - INFO -   - 内存阈值: 20
[13:42:12.105] 2025-08-27 13:42:12,101 - smart_result_collector - INFO -   - 时间阈值: 300秒
[13:42:12.105] 2025-08-27 13:42:12,101 - smart_result_collector - INFO -   - 自动保存: 60秒
[13:42:12.105] 2025-08-27 13:42:12,102 - smart_result_collector - INFO -   - 自适应阈值: True
[13:42:12.105] 2025-08-27 13:42:12,102 - result_collector_adapter - INFO - ✅ 使用SmartResultCollector
[13:42:12.105] 2025-08-27 13:42:12,102 - result_collector_adapter - INFO - AdaptiveResultCollector初始化完成，使用: smart
[13:42:12.105] 🧠 启用SmartResultCollector模式，智能数据管理
[13:42:12.114] 2025-08-27 13:42:12,113 - smart_model_router - INFO - ✨ Using USER's Azure endpoint for gpt-5-nano
[13:42:12.268] 2025-08-27 13:42:12,268 - txt_based_ai_classifier - INFO - TXT-based AI classifier initialized with gpt-5-nano (parameter-filtered)
[13:42:12.268] [AI_DEBUG] AI分类器初始化成功: <txt_based_ai_classifier.TxtBasedAIClassifier object at 0x7fb3ab540c00>
[13:42:12.269] 2025-08-27 13:42:12,268 - batch_test_runner - INFO - 基于TXT文件的AI错误分类系统已启用 (使用gpt-5-nano)
[13:42:12.269] [DEBUG] BatchTestRunner initialized with save_logs=True, enable_database_updates=False, use_ai_classification=True, checkpoint_interval=20
[13:42:12.271] 2025-08-27 13:42:12,271 - batch_test_runner - INFO - ============================================================
[13:42:12.272] 2025-08-27 13:42:12,272 - batch_test_runner - INFO - Batch test runner initialized
[13:42:12.273] 2025-08-27 13:42:12,272 - batch_test_runner - INFO - Configuration: debug=False, silent=False, adaptive=False
[13:42:12.273] 2025-08-27 13:42:12,273 - batch_test_runner - INFO - Log file: logs/batch_test_20250827_134212.log
[13:42:12.273] 2025-08-27 13:42:12,273 - batch_test_runner - INFO - ============================================================
[13:42:12.273] 2025-08-27 13:42:12,273 - batch_test_runner - INFO - Running 50 tests with 2 workers, QPS limit: None
[13:42:12.273] 2025-08-27 13:42:12,273 - batch_test_runner - INFO - Initializing test components...
[13:43:16.544] 2025-08-27 13:43:16,424 - batch_test_runner - INFO - Found pre-generated workflows, will use them to save memory
[13:43:16.643] 2025-08-27 13:43:16,491 - batch_test_runner - INFO - ⚡ [OPTIMIZATION] Using MDPWorkflowGenerator with SKIP_MODEL_LOADING=true
[13:43:16.660] 2025-08-27 13:43:16,499 - batch_test_runner - INFO - ⚡ This saves ~350MB memory while keeping all functionality intact
[13:43:16.680] [DEBUG] Creating new ToolCapabilityManager instance
[13:43:16.684] [OperationEmbeddingIndex] Initializing with unified API client manager
[13:43:16.693] ['config/config.json', 'config/api_keys.json', 'config/api-keys.json']
[13:43:16.833] 2025-08-27 13:43:16,772 - api_client_manager - INFO - Loaded configuration from config/config.json
[13:43:17.917] [OperationEmbeddingIndex] OpenAI client initialized with model: gpt-4o-mini
[13:43:17.934] [OperationEmbeddingIndex] Using embedding model: text-embedding-3-large
[13:43:17.934] [OperationEmbeddingIndex] Detecting actual embedding dimension...
